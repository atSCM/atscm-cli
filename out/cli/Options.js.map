{"version":3,"sources":["../../src/cli/Options.js"],"names":["Options","browser","string","cli","boolean","continue","cwd","force","help","alias","count","default","project","projectfile","require","remote","undefined","silent","tasks","version","beta","debug","yes","link","GlobalOptions"],"mappings":";;;;;;;AAAA;;;;;;AAEA;;;;;;;;;;;;;;;;AAgBA,MAAMA,UAAU;AACdC,WAAS,iBAAOC,MAAP,CAAc,2BAAd,CADK;AAEdC,OAAK,iBAAOC,OAAP,CAAe,yBAAf,CAFS;AAGdC,YAAU,iBAAOD,OAAP,CAAe,2CAAf,CAHI;AAIdE,OAAK,iBAAOJ,MAAP,CAAc,uBAAd,CAJS;AAKdK,SAAO,iBAAOH,OAAP,CAAe,2BAAf,CALO;AAMdI,QAAM,iBAAOJ,OAAP,CAAe,iBAAf,CANQ;AAOd,eAAa,qBACX,yFADW,EAEX;AACEK,WAAO,GADT;AAEEC,WAAO,IAFT;AAGEC,aAAS;AAHX,GAFW,CAPC;AAedC,WAAS,qBAAW,gCAAX,EAA6C,EAAED,SAAS,EAAX,EAA7C,CAfK;AAgBdE,eAAa,iBAAOX,MAAP,CACX,qDACA,uEAFW,EAGX,EAAEO,OAAO,GAAT,EAHW,CAhBC;AAqBdK,WAAS,iBAAOZ,MAAP,CAAc,6CAAd,CArBK;AAsBda,UAAQ,iBAAOX,OAAP,CAAe,4BAAf,EAA6C;AACnDO,aAASK;AAD0C,GAA7C,CAtBM;AAyBdC,UAAQ,iBAAOb,OAAP,CAAe,uBAAf,EAAwC,EAAEK,OAAO,GAAT,EAAxC,CAzBM;AA0BdS,SAAO,iBAAOd,OAAP,CAAe,iCAAf,EAAkD;AACvDK,WAAO;AADgD,GAAlD,CA1BO;AA6Bd,kBAAgB,iBAAOL,OAAP,CAAe,kCAAf,CA7BF;AA8Bd,gBAAc,iBAAOA,OAAP,CAAe,iDAAf,CA9BA;AA+Bde,WAAS,iBAAOf,OAAP,CAAe,gBAAf,EAAiC,EAAEK,OAAO,GAAT,EAAjC,CA/BK;AAgCdW,QAAM,iBAAOhB,OAAP,CAAe,2BAAf,CAhCQ;AAiCdiB,SAAO,iBAAOjB,OAAP,CAAe,iBAAf,CAjCO;AAkCdkB,OAAK,iBAAOlB,OAAP,CAAe,qBAAf,EAAsC,EAAEK,OAAO,GAAT,EAAtC,CAlCS;AAmCd;AACAc,QAAM,iBAAOnB,OAAP,CAAe,uCACnB,0EADI;;AApCQ,CAAhB;;kBAyCeJ,O;;AAEf;;;;;AAIO,MAAMwB,wCAAgB;AAC3BX,eAAab,QAAQa,WADM;AAE3BP,OAAKN,QAAQM,GAFc;AAG3BM,WAASZ,QAAQY,OAHU;AAI3BE,WAASd,QAAQc,OAJU;AAK3BK,WAASnB,QAAQmB,OALU;AAM3BX,QAAMR,QAAQQ,IANa;AAO3BS,UAAQjB,QAAQiB,MAPW;AAQ3B,eAAajB,QAAQ,WAAR,CARc;AAS3BqB,SAAOrB,QAAQqB;AATY,CAAtB","file":"Options.js","sourcesContent":["import Option from '../lib/cli/Option';\n\n/**\n * Command line options available.\n * @type {Object}\n * @property {Option} browser Which browser to open in.\n * @property {Option} cli Open CLI documentation.\n * @property {Option} config Print project configuration.\n * @property {Option} cwd Manually set the CWD.\n * @property {Option} force Overwrite existing files.\n * @property {Option} help Show help.\n * @property {Option} logLevel Set the Logger level.\n * @property {Option} projectfile Manually set path of Atviseproject file to use.\n * @property {Option} remote Open hosted documentation.\n * @property {Option} silent Supress all logging.\n * @property {Option} version Print version.\n * @property {Option} beta Use atscm beta resources.\n */\nconst Options = {\n  browser: Option.string('Which browser to open in.'),\n  cli: Option.boolean('Open CLI documentation.'),\n  continue: Option.boolean('Continue execution of tasks upon failure.'),\n  cwd: Option.string('Manually set the CWD.'),\n  force: Option.boolean('Overwrite existing files.'),\n  help: Option.boolean('Show this help.'),\n  'log-level': new Option(\n    'Set the Logger level. -L for least verbose and -LLLL for most verbose. -LLL is default.',\n    {\n      alias: 'L',\n      count: true,\n      default: 3,\n    }\n  ),\n  project: new Option('Override Atviseproject values.', { default: {} }),\n  projectfile: Option.string(\n    'Manually set path of Atviseproject file to use. ' +\n    'This will set the CWD to the Atviseproject file\\'s directory as well.',\n    { alias: 'p' }\n  ),\n  require: Option.string('Will require a module before running atscm.'),\n  remote: Option.boolean('Open hosted documentation.', {\n    default: undefined,\n  }),\n  silent: Option.boolean('Suppress all logging.', { alias: 'S' }),\n  tasks: Option.boolean('Print the task dependency tree.', {\n    alias: 'T',\n  }),\n  'tasks-simple': Option.boolean('Print a plaintext list of tasks.'),\n  'tasks-json': Option.boolean('Print the task dependency tree, in JSON format.'),\n  version: Option.boolean('Print version.', { alias: 'v' }),\n  beta: Option.boolean('Use atscm beta resources.'),\n  debug: Option.boolean('Use debug mode.'),\n  yes: Option.boolean('Use default values.', { alias: 'y' }),\n  // NOTE: Commit once gulp is no longer required for running\n  link: Option.boolean('Link atscm instead of installing. ' +\n    'This allows you to use you local atscm version. (Run `npm link .` first)'),\n\n};\n\nexport default Options;\n\n/**\n * Options that can be used globally.\n * @type {Map<String, Option>}\n */\nexport const GlobalOptions = {\n  projectfile: Options.projectfile,\n  cwd: Options.cwd,\n  project: Options.project,\n  require: Options.require,\n  version: Options.version,\n  help: Options.help,\n  silent: Options.silent,\n  'log-level': Options['log-level'],\n  debug: Options.debug,\n};\n"]}