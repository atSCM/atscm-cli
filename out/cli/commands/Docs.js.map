{"version":3,"sources":["../../../src/cli/commands/Docs.js"],"names":["DocsCommand","Command","RemoteDocsBase","constructor","name","description","options","cli","CliOptions","browser","remote","maxArguments","localDocsPath","__dirname","environment","modulePath","remoteDocsUrl","path","modulePackage","version","addressToOpen","address","isPath","run","getEnvironment","Promise","resolve","then","Logger","debug","format","app","undefined","requiresEnvironment"],"mappings":"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","sourcesContent":["import { join } from 'path';\nimport { resolve } from 'url';\nimport open from 'open';\nimport Command from '../../lib/cli/Command';\nimport CliOptions from '../Options';\nimport Logger from '../../lib/util/Logger';\n\n/**\n * The command invoked when running \"docs\". Handles the options --cli and --browser.\n */\nexport default class DocsCommand extends Command {\n  /**\n   * Base URL of the hosted API documentation.\n   * @type {string}\n   */\n  static get RemoteDocsBase() {\n    return 'https://atscm.github.io/';\n  }\n\n  /**\n   * Creates a new {@link DocsCommand} with the specified name and description.\n   * @param {string} name The command's name.\n   * @param {string} description The command's description.\n   */\n  constructor(name, description) {\n    super(name, description, {\n      options: {\n        cli: CliOptions.cli,\n        browser: CliOptions.browser,\n        remote: CliOptions.remote,\n      },\n      maxArguments: 0,\n    });\n  }\n\n  /**\n   * Returns the path to the local api docs.\n   * @param {AtSCMCli} cli The current Cli instance.\n   * @return {string} The path to the local api docs.\n   */\n  localDocsPath(cli) {\n    return join(\n      cli.options.cli ? join(__dirname, '../../../') : join(cli.environment.modulePath, '../../'),\n      'docs/api/index.html'\n    );\n  }\n\n  /**\n   * Returns the URL of the remote api docs.\n   * @param {AtSCMCli} cli The current Cli instance.\n   * @return {string} The URL of the remote api docs.\n   */\n  remoteDocsUrl(cli) {\n    let path = cli.options.cli ? 'atscm-cli' : 'latest';\n\n    if (cli.environment && cli.environment.modulePackage && cli.environment.modulePackage.version) {\n      path = `from-cli/?version=${cli.environment.modulePackage.version}`;\n    }\n\n    return resolve(this.constructor.RemoteDocsBase, path);\n  }\n\n  /**\n   * Returns the path or url to open. This is resolved in the following way:\n   *  1. If `--remote` is passed, always return the URL of the hosted docs of atscm-cli or atscm\n   *     based on the `--cli` option passed.\n   *  2. If `--cli` is passed, always return the path to the local atscm-cli docs.\n   *  3. Otherwise, check if a local module was found:\n   *     - If *true* return the local module docs path,\n   *     - else return the URL of the hosted atscm docs.\n   * @param {AtSCMCli} cli The calling Cli instance.\n   * @return {{address: string, isPath: boolean}} The resolved address and a flag indicating if the\n   * address describes a file path.\n   */\n  addressToOpen(cli) {\n    if (cli.options.remote !== true && (cli.options.cli || cli.environment.modulePath)) {\n      return {\n        address: this.localDocsPath(cli),\n        isPath: true,\n      };\n    }\n\n    return {\n      address: this.remoteDocsUrl(cli),\n      isPath: false,\n    };\n  }\n\n  /**\n   * Opens the requested docs in the requested browser.\n   * @param {AtSCMCli} cli The current Cli instance.\n   * @return {Promise} Resolved after the os-specific open command was started.\n   */\n  run(cli) {\n    return (!cli.options.cli && !cli.environment ? cli.getEnvironment() : Promise.resolve())\n      .then(() => this.addressToOpen(cli))\n      .then(({ address, isPath }) => {\n        Logger.debug('Opening', isPath ? Logger.format.path(address) : address);\n        open(address, cli.options.browser ? { app: cli.options.browser } : undefined);\n      });\n  }\n\n  /**\n   * Returns `false` if the `--cli` option is used.\n   * @param {AtSCMCli} cli The current cli instance.\n   * @return {boolean} `false` if the `--cli` option is used.\n   */\n  requiresEnvironment(cli) {\n    return cli.options.remote === false && !cli.options.cli;\n  }\n}\n"],"file":"Docs.js"}