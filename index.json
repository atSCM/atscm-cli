[
  {
    "__docId__": 1,
    "kind": "external",
    "name": "Infinity",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Infinity",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Infinity",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 2,
    "kind": "external",
    "name": "NaN",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/NaN",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~NaN",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 3,
    "kind": "external",
    "name": "undefined",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/undefined",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~undefined",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 4,
    "kind": "external",
    "name": "null",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/null",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~null",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 5,
    "kind": "external",
    "name": "Object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 6,
    "kind": "external",
    "name": "object",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Object",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~object",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 7,
    "kind": "external",
    "name": "Function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 8,
    "kind": "external",
    "name": "function",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Function",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~function",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 9,
    "kind": "external",
    "name": "Boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 10,
    "kind": "external",
    "name": "boolean",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Boolean",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~boolean",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 11,
    "kind": "external",
    "name": "Symbol",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Symbol",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Symbol",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 12,
    "kind": "external",
    "name": "Error",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Error",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Error",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 13,
    "kind": "external",
    "name": "EvalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/EvalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~EvalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 14,
    "kind": "external",
    "name": "InternalError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/InternalError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~InternalError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 15,
    "kind": "external",
    "name": "RangeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RangeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RangeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 16,
    "kind": "external",
    "name": "ReferenceError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ReferenceError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ReferenceError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 17,
    "kind": "external",
    "name": "SyntaxError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/SyntaxError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~SyntaxError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 18,
    "kind": "external",
    "name": "TypeError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/TypeError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~TypeError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 19,
    "kind": "external",
    "name": "URIError",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/URIError",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~URIError",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 20,
    "kind": "external",
    "name": "Number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 21,
    "kind": "external",
    "name": "number",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Number",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~number",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 22,
    "kind": "external",
    "name": "Date",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Date",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Date",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 23,
    "kind": "external",
    "name": "String",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~String",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 24,
    "kind": "external",
    "name": "string",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/String",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~string",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 25,
    "kind": "external",
    "name": "RegExp",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/RegExp",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~RegExp",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 26,
    "kind": "external",
    "name": "Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 27,
    "kind": "external",
    "name": "Int8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 28,
    "kind": "external",
    "name": "Uint8Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 29,
    "kind": "external",
    "name": "Uint8ClampedArray",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint8ClampedArray",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint8ClampedArray",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 30,
    "kind": "external",
    "name": "Int16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 31,
    "kind": "external",
    "name": "Uint16Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint16Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint16Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 32,
    "kind": "external",
    "name": "Int32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Int32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Int32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 33,
    "kind": "external",
    "name": "Uint32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Uint32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Uint32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 34,
    "kind": "external",
    "name": "Float32Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float32Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float32Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 35,
    "kind": "external",
    "name": "Float64Array",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Float64Array",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Float64Array",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 36,
    "kind": "external",
    "name": "Map",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Map",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Map",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 37,
    "kind": "external",
    "name": "Set",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Set",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Set",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 38,
    "kind": "external",
    "name": "WeakMap",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakMap",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakMap",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 39,
    "kind": "external",
    "name": "WeakSet",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/WeakSet",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~WeakSet",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 40,
    "kind": "external",
    "name": "ArrayBuffer",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/ArrayBuffer",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~ArrayBuffer",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 41,
    "kind": "external",
    "name": "DataView",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/DataView",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~DataView",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 42,
    "kind": "external",
    "name": "JSON",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/JSON",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~JSON",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 43,
    "kind": "external",
    "name": "Promise",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Promise",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Promise",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 44,
    "kind": "external",
    "name": "Generator",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Generator",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Generator",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 45,
    "kind": "external",
    "name": "GeneratorFunction",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/GeneratorFunction",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~GeneratorFunction",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 46,
    "kind": "external",
    "name": "Reflect",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Reflect",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Reflect",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 47,
    "kind": "external",
    "name": "Proxy",
    "externalLink": "https://developer.mozilla.org/en-US/docs/Web/JavaScript/Reference/Global_Objects/Proxy",
    "memberof": "src/.external-ecmascript.js",
    "static": true,
    "longname": "src/.external-ecmascript.js~Proxy",
    "access": "public",
    "description": "",
    "builtinExternal": true
  },
  {
    "__docId__": 48,
    "kind": "file",
    "name": "src/AtSCMCli.js",
    "content": "import { realpathSync } from 'fs';\nimport { join } from 'path';\nimport { EOL } from 'os';\nimport Liftoff from 'liftoff';\nimport yargs from 'yargs';\nimport gulplog from 'gulplog';\nimport { jsVariants } from 'interpret';\nimport { yellow } from 'chalk';\nimport pkg from '../package.json';\nimport Logger from './lib/util/Logger';\nimport Options, { GlobalOptions } from './cli/Options';\nimport Commands from './cli/Commands';\nimport UsageError from './lib/error/UsageError';\nimport { readJson } from './lib/util/fs';\n\n/**\n * The main class. Handles arguments and runs commands.\n * @extends {Liftoff}\n */\nexport default class AtSCMCli extends Liftoff {\n  /**\n   * The name under which the module is available from the command line.\n   * @type {string}\n   */\n  static get BinName() {\n    return Object.keys(pkg.bin)[0];\n  }\n\n  /**\n   * The filename used for configuration files.\n   * @type {string}\n   */\n  static get ConfigName() {\n    return 'Atviseproject';\n  }\n\n  /**\n   * Reports an error and exits the process with return code `1`.\n   * @param {Error} err The error that occurred.\n   */\n  _reportCliError(err) {\n    Logger.error(Logger.colors.red(err.message));\n\n    if (err instanceof UsageError) {\n      Logger.info(err.help);\n    } else {\n      Logger.debug(err.stack);\n\n      if (err instanceof SyntaxError && this._failedRequires.length) {\n        Logger.info(yellow(`You may have to install the '${this._failedRequires[0]}' module.`));\n        Logger.info(['Other failed requires:', ...this._failedRequires].join(`${EOL} - `));\n      }\n    }\n\n    process.exitCode = 1;\n  }\n\n  /**\n   * Creates a new {@link AtSCMCli} object based on command line arguments.\n   * @param {string[]} argv The command line arguments to use. If no command is provided and neither\n   * `--help` nor `--version` are used, the command `run` is added.\n   * @throws {UsageError} Throws an error if option parsing fails.\n   */\n  constructor(argv = []) {\n    super({\n      name: AtSCMCli.BinName,\n      configName: AtSCMCli.ConfigName,\n      extensions: jsVariants,\n    });\n\n    this.on('require', function (name) {\n      Logger.debug('Requiring external module', Logger.colors.magenta(name));\n    });\n\n    /** If requiring an external module failed.\n     * @type {string[]} */\n    this._failedRequires = [];\n\n    this.on('requireFail', function (name) {\n      this._failedRequires.push(name);\n\n      Logger.debug(\n        Logger.colors.red('Failed to load external module'),\n        Logger.colors.magenta(name)\n      );\n    });\n\n    /**\n     * `true` if the instance was created by running the binaries, `false` if used programmatically.\n     * @type {Boolean}\n     */\n    this.runViaCli = realpathSync(process.argv[1]) === require.resolve('./bin/atscm');\n\n    /**\n     * The raw, unparsed command line arguments the Cli was created with.\n     * @type {String[]}\n     */\n    this._argv = argv;\n\n    // If no command is given, default to \"run\"\n    const commandNames = Commands.map((c) => c.name);\n\n    /**\n     * The options parsed from {@link AtSCMCli#_argv}. Note that **these options are not complete**\n     * until {@link AtSCMCli#launch} was called.\n     * @type {Object}\n     */\n    this.options = yargs(argv)\n      .version(false)\n      .help(false)\n      .env('ATSCM')\n      .option(GlobalOptions)\n      .fail((msg, e, y) => {\n        const err = new UsageError(msg, y.help());\n\n        if (this.runViaCli) {\n          gulplog.on('error', () => {}); // Prevent logger to throw an error\n\n          this._reportCliError(err);\n        } else {\n          throw err;\n        }\n      }).argv;\n\n    if (!this.options.help && !this.options.version) {\n      if (this.options._.filter((e) => commandNames.includes(e)).length === 0) {\n        this._argv.unshift('run');\n      }\n    }\n\n    // Initialize logger\n    Logger.applyOptions(this.options);\n\n    const globalOptionNames = Object.keys(GlobalOptions);\n\n    /**\n     * An instance of {@link yargs} responible for parsing options.\n     * @type {yargs}\n     */\n    this.argumentsParser = Commands.reduce(\n      (parser, command) =>\n        parser.command(\n          command.usage,\n          command.description,\n          (y) => {\n            y.usage(`Usage: $0 ${command.usage}`);\n            y.option(command.options);\n\n            y.group(Object.keys(command.options), 'Command specific options:');\n            y.group(globalOptionNames, 'Global options:');\n\n            y.strict(command.strict);\n            y.help('help', Options.help.desc).alias('help', 'h');\n            y.demandCommand(...command.demandCommand);\n          },\n          () => (this.command = command)\n        ),\n      yargs()\n        .env('ATSCM')\n        .usage('Usage: $0 [cmd=run]')\n        .version(false)\n        .options(GlobalOptions)\n        .global(globalOptionNames)\n        .strict()\n        .help('help', Options.help.desc)\n        .alias('help', 'h')\n    );\n  }\n\n  /**\n   * Used to expose project config overrides via environment variables. All project options are\n   * exposed as `ATSCM_PROJECT__{KEY}={VALUE}`.\n   * @param {Object} config The object to expose.\n   * @param {string} key The key currently handled.\n   * @param {string} [base=ATSCM_PROJECT__] The parent key.\n   */\n  _exposeOverride(config, key, base = 'ATSCM_PROJECT__') {\n    const currentKey = `${base}${key.toUpperCase()}`;\n\n    if (typeof config[key] === 'object') {\n      const c = config[key];\n\n      Object.keys(c).forEach((k) => this._exposeOverride(c, k, `${currentKey}__`));\n    } else {\n      process.env[currentKey] = config[key];\n      Logger.debug(`Setting ${currentKey}:`, Logger.format.value(config[key]));\n    }\n  }\n\n  /**\n   * Parses arguments and exposes the project options as environment variables.\n   * @return {Promise<Object, UsageError>} Rejected with a {@link UsageError} if parsing failed,\n   * otherwise fulfilled with the parsed arguments.\n   */\n  parseArguments() {\n    return new Promise((resolve, reject) => {\n      this.options = this.argumentsParser\n        .fail((msg, err, y) => reject(new UsageError(msg, y.help())))\n        .parse(this._argv);\n\n      Object.keys(this.options.project).forEach((key) =>\n        this._exposeOverride(this.options.project, key)\n      );\n\n      resolve(this.options);\n    });\n  }\n\n  /**\n   * Returns a {@link Liftoff.Environment} for the Cli.\n   * @param {boolean} [findUp=false] If the environment should be searched for in parent\n   * directories.\n   * @return {Promise<Object>} Fulfilled with a {@link Liftoff} environment.\n   */\n  getEnvironment(findUp = true) {\n    return new Promise((resolve) => {\n      super.launch(\n        {\n          cwd: this.options.cwd,\n          configPath: findUp\n            ? this.options.projectfile\n            : join(this.options.cwd || process.cwd(), `${this.constructor.ConfigName}.js`),\n          require: this.options.require,\n        },\n        (env) => resolve((this.environment = env))\n      );\n    });\n  }\n\n  /**\n   * Gets a {@link Liftoff.Environment} and validates a config file and a local module was found.\n   * @return {Promise<Object, Error>} Resolved with the {@link Liftoff environment}, rejected if the\n   * config file or the local module cannot be found.\n   */\n  requireEnvironment() {\n    return this.getEnvironment().then((env) => {\n      if (!env.modulePath) {\n        throw new Error(`Local ${AtSCMCli.BinName} not found`);\n      }\n\n      if (!env.configPath) {\n        throw new Error('No config file found');\n      }\n\n      return env;\n    });\n  }\n\n  /**\n   * Returns the CLI version and, if a local module could be found, the local version.\n   * @return {Promise<{cli: string, local: ?string}>} Fulfilled with the found cli and local\n   * version.\n   */\n  async getVersion() {\n    const env = await this.getEnvironment();\n\n    const projectPackage =\n      env.modulePath && (await readJson(join(env.cwd, 'package.json')).catch(() => undefined));\n\n    return {\n      cli: pkg.version,\n      local: env.modulePath ? env.modulePackage.version : undefined,\n      server: projectPackage && projectPackage.engines && projectPackage.engines.atserver,\n    };\n  }\n\n  /**\n   * Gets and prints the CLI version and, if a local module could be found, the local version.\n   * @return {Promise<{cli: string, local: ?string}>} Fulfilled with the found cli and local\n   * version.\n   */\n  async printVersion() {\n    const { cli, local, server } = await this.getVersion();\n\n    const versions = [\n      ['atscm-cli', cli],\n      local && ['atscm', local],\n      server && ['atvise server', server],\n    ].filter((v) => v);\n\n    const maxLength = versions.reduce((length, [label]) => Math.max(length, label.length), 0);\n\n    versions.forEach(([label, version]) =>\n      Logger.info(label.padEnd(maxLength + 1), Logger.format.number(version))\n    );\n  }\n\n  /**\n   * Runs the command specified in the command line arguments ({@link AtSCMCli#_argv}). **Note that\n   * this will only work if {@link AtSCMCli#parseArguments} was called before.**.\n   * @return {Promise<*, Error>} Fulfilled if the command succeeded.\n   */\n  runCommand() {\n    if (this.options.version) {\n      return this.printVersion();\n    }\n\n    if (this.command) {\n      return (this.command.requiresEnvironment(this)\n        ? this.requireEnvironment()\n        : Promise.resolve()\n      ).then(() => this.command.run(this));\n    }\n\n    Logger.warn('No command specified');\n\n    return Promise.resolve(this);\n  }\n\n  /**\n   * Parses arguments and runs the specified command.\n   * @return {Promise<*, Error>} Fulfilled if the command succeeded. Note that, if the instance is\n   * run through the binary all rejections will be handled.\n   */\n  launch() {\n    const app = this.parseArguments()\n      .then(() => {\n        if (process.env.ATSCM_DEBUG || this.options.debug) {\n          process.env.ATSCM_DEBUG = process.env.ATSCM_DEBUG || 'true';\n          require('source-map-support').install(); // eslint-disable-line global-require\n        }\n      })\n      .then(() => this.runCommand());\n\n    if (this.runViaCli) {\n      return app.catch((err) => this._reportCliError(err));\n    }\n\n    return app;\n  }\n}\n",
    "static": true,
    "longname": "/home/circleci/project/src/AtSCMCli.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 49,
    "kind": "class",
    "name": "AtSCMCli",
    "memberof": "src/AtSCMCli.js",
    "static": true,
    "longname": "src/AtSCMCli.js~AtSCMCli",
    "access": "public",
    "export": true,
    "importPath": "atscm-cli/src/AtSCMCli.js",
    "importStyle": "AtSCMCli",
    "description": "The main class. Handles arguments and runs commands.",
    "lineNumber": 20,
    "interface": false,
    "extends": [
      "Liftoff"
    ]
  },
  {
    "__docId__": 50,
    "kind": "get",
    "name": "BinName",
    "memberof": "src/AtSCMCli.js~AtSCMCli",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/AtSCMCli.js~AtSCMCli.BinName",
    "access": "public",
    "description": "The name under which the module is available from the command line.",
    "lineNumber": 25,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 51,
    "kind": "get",
    "name": "ConfigName",
    "memberof": "src/AtSCMCli.js~AtSCMCli",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/AtSCMCli.js~AtSCMCli.ConfigName",
    "access": "public",
    "description": "The filename used for configuration files.",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 52,
    "kind": "method",
    "name": "_reportCliError",
    "memberof": "src/AtSCMCli.js~AtSCMCli",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/AtSCMCli.js~AtSCMCli#_reportCliError",
    "access": "private",
    "description": "Reports an error and exits the process with return code `1`.",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "Error"
        ],
        "spread": false,
        "optional": false,
        "name": "err",
        "description": "The error that occurred."
      }
    ],
    "return": null
  },
  {
    "__docId__": 53,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/AtSCMCli.js~AtSCMCli",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/AtSCMCli.js~AtSCMCli#constructor",
    "access": "public",
    "description": "Creates a new {@link AtSCMCli} object based on command line arguments.",
    "lineNumber": 64,
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "argv",
        "description": "The command line arguments to use. If no command is provided and neither\n`--help` nor `--version` are used, the command `run` is added."
      }
    ],
    "throws": [
      {
        "types": [
          "UsageError"
        ],
        "description": "Throws an error if option parsing fails."
      }
    ]
  },
  {
    "__docId__": 54,
    "kind": "member",
    "name": "_failedRequires",
    "memberof": "src/AtSCMCli.js~AtSCMCli",
    "static": false,
    "longname": "src/AtSCMCli.js~AtSCMCli#_failedRequires",
    "access": "private",
    "description": "If requiring an external module failed.",
    "lineNumber": 77,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 55,
    "kind": "member",
    "name": "runViaCli",
    "memberof": "src/AtSCMCli.js~AtSCMCli",
    "static": false,
    "longname": "src/AtSCMCli.js~AtSCMCli#runViaCli",
    "access": "public",
    "description": "`true` if the instance was created by running the binaries, `false` if used programmatically.",
    "lineNumber": 92,
    "type": {
      "nullable": null,
      "types": [
        "Boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 56,
    "kind": "member",
    "name": "_argv",
    "memberof": "src/AtSCMCli.js~AtSCMCli",
    "static": false,
    "longname": "src/AtSCMCli.js~AtSCMCli#_argv",
    "access": "private",
    "description": "The raw, unparsed command line arguments the Cli was created with.",
    "lineNumber": 98,
    "type": {
      "nullable": null,
      "types": [
        "String[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 57,
    "kind": "member",
    "name": "options",
    "memberof": "src/AtSCMCli.js~AtSCMCli",
    "static": false,
    "longname": "src/AtSCMCli.js~AtSCMCli#options",
    "access": "public",
    "description": "The options parsed from {@link AtSCMCli#_argv}. Note that **these options are not complete**\nuntil {@link AtSCMCli#launch} was called.",
    "lineNumber": 108,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 58,
    "kind": "member",
    "name": "argumentsParser",
    "memberof": "src/AtSCMCli.js~AtSCMCli",
    "static": false,
    "longname": "src/AtSCMCli.js~AtSCMCli#argumentsParser",
    "access": "public",
    "description": "An instance of {@link yargs} responible for parsing options.",
    "lineNumber": 140,
    "type": {
      "nullable": null,
      "types": [
        "yargs"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 59,
    "kind": "method",
    "name": "_exposeOverride",
    "memberof": "src/AtSCMCli.js~AtSCMCli",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/AtSCMCli.js~AtSCMCli#_exposeOverride",
    "access": "private",
    "description": "Used to expose project config overrides via environment variables. All project options are\nexposed as `ATSCM_PROJECT__{KEY}={VALUE}`.",
    "lineNumber": 177,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "The object to expose."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "key",
        "description": "The key currently handled."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "ATSCM_PROJECT__",
        "defaultRaw": "ATSCM_PROJECT__",
        "name": "base",
        "description": "The parent key."
      }
    ],
    "return": null
  },
  {
    "__docId__": 60,
    "kind": "method",
    "name": "parseArguments",
    "memberof": "src/AtSCMCli.js~AtSCMCli",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/AtSCMCli.js~AtSCMCli#parseArguments",
    "access": "public",
    "description": "Parses arguments and exposes the project options as environment variables.",
    "lineNumber": 195,
    "return": {
      "nullable": null,
      "types": [
        "Promise<Object, UsageError>"
      ],
      "spread": false,
      "description": "Rejected with a {@link UsageError} if parsing failed,\notherwise fulfilled with the parsed arguments."
    },
    "params": []
  },
  {
    "__docId__": 62,
    "kind": "method",
    "name": "getEnvironment",
    "memberof": "src/AtSCMCli.js~AtSCMCli",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/AtSCMCli.js~AtSCMCli#getEnvironment",
    "access": "public",
    "description": "Returns a {@link Liftoff.Environment} for the Cli.",
    "lineNumber": 215,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "findUp",
        "description": "If the environment should be searched for in parent\ndirectories."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Object>"
      ],
      "spread": false,
      "description": "Fulfilled with a {@link Liftoff} environment."
    }
  },
  {
    "__docId__": 63,
    "kind": "method",
    "name": "requireEnvironment",
    "memberof": "src/AtSCMCli.js~AtSCMCli",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/AtSCMCli.js~AtSCMCli#requireEnvironment",
    "access": "public",
    "description": "Gets a {@link Liftoff.Environment} and validates a config file and a local module was found.",
    "lineNumber": 235,
    "return": {
      "nullable": null,
      "types": [
        "Promise<Object, Error>"
      ],
      "spread": false,
      "description": "Resolved with the {@link Liftoff environment}, rejected if the\nconfig file or the local module cannot be found."
    },
    "params": []
  },
  {
    "__docId__": 64,
    "kind": "method",
    "name": "getVersion",
    "memberof": "src/AtSCMCli.js~AtSCMCli",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/AtSCMCli.js~AtSCMCli#getVersion",
    "access": "public",
    "description": "Returns the CLI version and, if a local module could be found, the local version.",
    "lineNumber": 254,
    "return": {
      "nullable": null,
      "types": [
        "Promise<{cli: string, local: ?string}>"
      ],
      "spread": false,
      "description": "Fulfilled with the found cli and local\nversion."
    },
    "params": []
  },
  {
    "__docId__": 65,
    "kind": "method",
    "name": "printVersion",
    "memberof": "src/AtSCMCli.js~AtSCMCli",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/AtSCMCli.js~AtSCMCli#printVersion",
    "access": "public",
    "description": "Gets and prints the CLI version and, if a local module could be found, the local version.",
    "lineNumber": 272,
    "return": {
      "nullable": null,
      "types": [
        "Promise<{cli: string, local: ?string}>"
      ],
      "spread": false,
      "description": "Fulfilled with the found cli and local\nversion."
    },
    "params": []
  },
  {
    "__docId__": 66,
    "kind": "method",
    "name": "runCommand",
    "memberof": "src/AtSCMCli.js~AtSCMCli",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/AtSCMCli.js~AtSCMCli#runCommand",
    "access": "public",
    "description": "Runs the command specified in the command line arguments ({@link AtSCMCli#_argv}). **Note that\nthis will only work if {@link AtSCMCli#parseArguments} was called before.**.",
    "lineNumber": 293,
    "return": {
      "nullable": null,
      "types": [
        "Promise<*, Error>"
      ],
      "spread": false,
      "description": "Fulfilled if the command succeeded."
    },
    "params": []
  },
  {
    "__docId__": 67,
    "kind": "method",
    "name": "launch",
    "memberof": "src/AtSCMCli.js~AtSCMCli",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/AtSCMCli.js~AtSCMCli#launch",
    "access": "public",
    "description": "Parses arguments and runs the specified command.",
    "lineNumber": 315,
    "return": {
      "nullable": null,
      "types": [
        "Promise<*, Error>"
      ],
      "spread": false,
      "description": "Fulfilled if the command succeeded. Note that, if the instance is\nrun through the binary all rejections will be handled."
    },
    "params": []
  },
  {
    "__docId__": 68,
    "kind": "file",
    "name": "src/bin/atscm.js",
    "content": "#!/usr/bin/env node\n\nimport updateNotifier from 'update-notifier';\nimport pkg from '../../package.json';\nimport AtscmCli from '../AtSCMCli';\n\nupdateNotifier({ pkg }).notify();\n\nnew AtscmCli(process.argv.slice(2)).launch();\n",
    "static": true,
    "longname": "/home/circleci/project/src/bin/atscm.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 69,
    "kind": "file",
    "name": "src/cli/Commands.js",
    "content": "import RunCommand from './commands/Run';\nimport InitCommand from './commands/Init';\nimport ConfigCommand from './commands/Config';\nimport DocsCommand from './commands/Docs';\nimport UpdateCommand from './commands/Update';\n\n/**\n * CLI commands available.\n * @type {Command[]}\n */\nconst Commands = [\n  new RunCommand('run', '(default) Run tasks.'),\n  new InitCommand('init', 'Create a new project.'),\n  new ConfigCommand('config', 'Validate and print config file.'),\n  new DocsCommand('docs', 'Open documentation.'),\n  new UpdateCommand('update', 'Update installed atscm module.'),\n];\n\nexport default Commands;\n",
    "static": true,
    "longname": "/home/circleci/project/src/cli/Commands.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 70,
    "kind": "variable",
    "name": "Commands",
    "memberof": "src/cli/Commands.js",
    "static": true,
    "longname": "src/cli/Commands.js~Commands",
    "access": "public",
    "export": true,
    "importPath": "atscm-cli/src/cli/Commands.js",
    "importStyle": "Commands",
    "description": "CLI commands available.",
    "lineNumber": 11,
    "type": {
      "nullable": null,
      "types": [
        "Command[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 71,
    "kind": "file",
    "name": "src/cli/Options.js",
    "content": "import Option from '../lib/cli/Option';\n\n/**\n * Command line options available.\n * @type {Object}\n * @property {Option} browser Which browser to open in.\n * @property {Option} cli Open CLI documentation.\n * @property {Option} config Print project configuration.\n * @property {Option} cwd Manually set the CWD.\n * @property {Option} force Overwrite existing files.\n * @property {Option} help Show help.\n * @property {Option} logLevel Set the Logger level.\n * @property {Option} projectfile Manually set path of Atviseproject file to use.\n * @property {Option} remote Open hosted documentation.\n * @property {Option} silent Supress all logging.\n * @property {Option} version Print version.\n * @property {Option} beta Use atscm beta resources.\n */\nconst Options = {\n  browser: Option.string('Which browser to open in.'),\n  cli: Option.boolean('Open CLI documentation.'),\n  continue: Option.boolean('Continue execution of tasks upon failure.'),\n  cwd: Option.string('Manually set the CWD.'),\n  force: Option.boolean('Overwrite existing files.'),\n  help: Option.boolean('Show this help.'),\n  'log-level': new Option(\n    'Set the Logger level. -L for least verbose and -LLLL for most verbose. -LLL is default.',\n    {\n      alias: 'L',\n      count: true,\n      default: 3,\n    }\n  ),\n  project: new Option('Override Atviseproject values.', { default: {} }),\n  projectfile: Option.string(\n    'Manually set path of Atviseproject file to use. ' +\n      \"This will set the CWD to the Atviseproject file's directory as well.\",\n    { alias: 'p' }\n  ),\n  require: Option.string('Will require a module before running atscm.'),\n  remote: Option.boolean('Open hosted documentation.', {\n    default: undefined,\n  }),\n  silent: Option.boolean('Suppress all logging.', { alias: 'S' }),\n  tasks: Option.boolean('Print the task dependency tree.', {\n    alias: 'T',\n  }),\n  'tasks-simple': Option.boolean('Print a plaintext list of tasks.'),\n  'tasks-json': Option.boolean('Print the task dependency tree, in JSON format.'),\n  version: Option.boolean('Print version.', { alias: 'v' }),\n  beta: Option.boolean('Use atscm beta resources.'),\n  debug: Option.boolean('Use debug mode.'),\n  yes: Option.boolean('Use default values.', { alias: 'y' }),\n  // NOTE: Commit once gulp is no longer required for running\n  link: Option.boolean(\n    'Link atscm instead of installing. ' +\n      'This allows you to use you local atscm version. (Run `npm link .` first)'\n  ),\n};\n\nexport default Options;\n\n/**\n * Options that can be used globally.\n * @type {Map<String, Option>}\n */\nexport const GlobalOptions = {\n  projectfile: Options.projectfile,\n  cwd: Options.cwd,\n  project: Options.project,\n  require: Options.require,\n  version: Options.version,\n  help: Options.help,\n  silent: Options.silent,\n  'log-level': Options['log-level'],\n  debug: Options.debug,\n};\n",
    "static": true,
    "longname": "/home/circleci/project/src/cli/Options.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 72,
    "kind": "variable",
    "name": "GlobalOptions",
    "memberof": "src/cli/Options.js",
    "static": true,
    "longname": "src/cli/Options.js~GlobalOptions",
    "access": "public",
    "export": true,
    "importPath": "atscm-cli/src/cli/Options.js",
    "importStyle": "{GlobalOptions}",
    "description": "Options that can be used globally.",
    "lineNumber": 67,
    "type": {
      "nullable": null,
      "types": [
        "Map<String, Option>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 73,
    "kind": "variable",
    "name": "Options",
    "memberof": "src/cli/Options.js",
    "static": true,
    "longname": "src/cli/Options.js~Options",
    "access": "public",
    "export": true,
    "importPath": "atscm-cli/src/cli/Options.js",
    "importStyle": "Options",
    "description": "Command line options available.",
    "lineNumber": 19,
    "properties": [
      {
        "nullable": null,
        "types": [
          "Option"
        ],
        "spread": false,
        "optional": false,
        "name": "browser",
        "description": "Which browser to open in."
      },
      {
        "nullable": null,
        "types": [
          "Option"
        ],
        "spread": false,
        "optional": false,
        "name": "cli",
        "description": "Open CLI documentation."
      },
      {
        "nullable": null,
        "types": [
          "Option"
        ],
        "spread": false,
        "optional": false,
        "name": "config",
        "description": "Print project configuration."
      },
      {
        "nullable": null,
        "types": [
          "Option"
        ],
        "spread": false,
        "optional": false,
        "name": "cwd",
        "description": "Manually set the CWD."
      },
      {
        "nullable": null,
        "types": [
          "Option"
        ],
        "spread": false,
        "optional": false,
        "name": "force",
        "description": "Overwrite existing files."
      },
      {
        "nullable": null,
        "types": [
          "Option"
        ],
        "spread": false,
        "optional": false,
        "name": "help",
        "description": "Show help."
      },
      {
        "nullable": null,
        "types": [
          "Option"
        ],
        "spread": false,
        "optional": false,
        "name": "logLevel",
        "description": "Set the Logger level."
      },
      {
        "nullable": null,
        "types": [
          "Option"
        ],
        "spread": false,
        "optional": false,
        "name": "projectfile",
        "description": "Manually set path of Atviseproject file to use."
      },
      {
        "nullable": null,
        "types": [
          "Option"
        ],
        "spread": false,
        "optional": false,
        "name": "remote",
        "description": "Open hosted documentation."
      },
      {
        "nullable": null,
        "types": [
          "Option"
        ],
        "spread": false,
        "optional": false,
        "name": "silent",
        "description": "Supress all logging."
      },
      {
        "nullable": null,
        "types": [
          "Option"
        ],
        "spread": false,
        "optional": false,
        "name": "version",
        "description": "Print version."
      },
      {
        "nullable": null,
        "types": [
          "Option"
        ],
        "spread": false,
        "optional": false,
        "name": "beta",
        "description": "Use atscm beta resources."
      }
    ],
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 74,
    "kind": "file",
    "name": "src/cli/commands/Config.js",
    "content": "import { inspect } from 'util';\nimport Logger from '../../lib/util/Logger';\nimport Command from '../../lib/cli/Command';\n\n/**\n * The command invoked when running \"config\".\n */\nexport default class ConfigCommand extends Command {\n  /**\n   * Creates a new {@link ConfigCommand} with the specified name and description.\n   * @param {string} name The command's name.\n   * @param {string} description The command's description.\n   */\n  constructor(name, description) {\n    super(name, description, {\n      maxArguments: 0,\n    });\n  }\n\n  /**\n   * Prints the project's configuration.\n   * @param {AtSCMCli} cli The current Cli instance.\n   */\n  run(cli) {\n    process.env.ATSCM_CONFIG_PATH = cli.environment.configPath;\n\n    /* eslint-disable global-require */\n    const config =\n      require(cli.environment.modulePath).ProjectConfig ||\n      require(cli.environment.configPath).default;\n    /* eslint-enable global-require */\n\n    inspect.styles.number = 'magenta';\n    inspect.styles.string = 'cyan';\n\n    Logger.info(\n      'Configuration at',\n      Logger.format.path(cli.environment.configPath),\n      `\\n${inspect(config, { colors: true, depth: null, breakLength: 0 })}`\n    );\n\n    if (cli.options.project && config.name !== 'ProjectConfig') {\n      Logger.warn('Overriding runtime configuration requires atscm version >= 0.4');\n      Logger.info('Run', Logger.format.command('atscm update'), 'to update to the newest version');\n    }\n  }\n}\n",
    "static": true,
    "longname": "/home/circleci/project/src/cli/commands/Config.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 75,
    "kind": "class",
    "name": "ConfigCommand",
    "memberof": "src/cli/commands/Config.js",
    "static": true,
    "longname": "src/cli/commands/Config.js~ConfigCommand",
    "access": "public",
    "export": true,
    "importPath": "atscm-cli/src/cli/commands/Config.js",
    "importStyle": "ConfigCommand",
    "description": "The command invoked when running \"config\".",
    "lineNumber": 8,
    "interface": false,
    "extends": [
      "src/lib/cli/Command.js~Command"
    ]
  },
  {
    "__docId__": 76,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/commands/Config.js~ConfigCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Config.js~ConfigCommand#constructor",
    "access": "public",
    "description": "Creates a new {@link ConfigCommand} with the specified name and description.",
    "lineNumber": 14,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The command's name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": "The command's description."
      }
    ]
  },
  {
    "__docId__": 77,
    "kind": "method",
    "name": "run",
    "memberof": "src/cli/commands/Config.js~ConfigCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Config.js~ConfigCommand#run",
    "access": "public",
    "description": "Prints the project's configuration.",
    "lineNumber": 24,
    "params": [
      {
        "nullable": null,
        "types": [
          "AtSCMCli"
        ],
        "spread": false,
        "optional": false,
        "name": "cli",
        "description": "The current Cli instance."
      }
    ],
    "return": null
  },
  {
    "__docId__": 78,
    "kind": "file",
    "name": "src/cli/commands/Docs.js",
    "content": "import { join } from 'path';\nimport { resolve } from 'url';\nimport open from 'open';\nimport Command from '../../lib/cli/Command';\nimport CliOptions from '../Options';\nimport Logger from '../../lib/util/Logger';\n\n/**\n * The command invoked when running \"docs\". Handles the options --cli and --browser.\n */\nexport default class DocsCommand extends Command {\n  /**\n   * Base URL of the hosted API documentation.\n   * @type {string}\n   */\n  static get RemoteDocsBase() {\n    return 'https://atscm.github.io/';\n  }\n\n  /**\n   * Creates a new {@link DocsCommand} with the specified name and description.\n   * @param {string} name The command's name.\n   * @param {string} description The command's description.\n   */\n  constructor(name, description) {\n    super(name, description, {\n      options: {\n        cli: CliOptions.cli,\n        browser: CliOptions.browser,\n        remote: CliOptions.remote,\n      },\n      maxArguments: 0,\n    });\n  }\n\n  /**\n   * Returns the path to the local api docs.\n   * @param {AtSCMCli} cli The current Cli instance.\n   * @return {string} The path to the local api docs.\n   */\n  localDocsPath(cli) {\n    return join(\n      cli.options.cli ? join(__dirname, '../../../') : join(cli.environment.modulePath, '../../'),\n      'docs/api/index.html'\n    );\n  }\n\n  /**\n   * Returns the URL of the remote api docs.\n   * @param {AtSCMCli} cli The current Cli instance.\n   * @return {string} The URL of the remote api docs.\n   */\n  remoteDocsUrl(cli) {\n    let path = cli.options.cli ? 'atscm-cli' : 'latest';\n\n    if (cli.environment && cli.environment.modulePackage && cli.environment.modulePackage.version) {\n      path = `from-cli/?version=${cli.environment.modulePackage.version}`;\n    }\n\n    return resolve(this.constructor.RemoteDocsBase, path);\n  }\n\n  /**\n   * Returns the path or url to open. This is resolved in the following way:\n   *  1. If `--remote` is passed, always return the URL of the hosted docs of atscm-cli or atscm\n   *     based on the `--cli` option passed.\n   *  2. If `--cli` is passed, always return the path to the local atscm-cli docs.\n   *  3. Otherwise, check if a local module was found:\n   *     - If *true* return the local module docs path,\n   *     - else return the URL of the hosted atscm docs.\n   * @param {AtSCMCli} cli The calling Cli instance.\n   * @return {{address: string, isPath: boolean}} The resolved address and a flag indicating if the\n   * address describes a file path.\n   */\n  addressToOpen(cli) {\n    if (cli.options.remote !== true && (cli.options.cli || cli.environment.modulePath)) {\n      return {\n        address: this.localDocsPath(cli),\n        isPath: true,\n      };\n    }\n\n    return {\n      address: this.remoteDocsUrl(cli),\n      isPath: false,\n    };\n  }\n\n  /**\n   * Opens the requested docs in the requested browser.\n   * @param {AtSCMCli} cli The current Cli instance.\n   * @return {Promise} Resolved after the os-specific open command was started.\n   */\n  run(cli) {\n    return (!cli.options.cli && !cli.environment ? cli.getEnvironment() : Promise.resolve())\n      .then(() => this.addressToOpen(cli))\n      .then(({ address, isPath }) => {\n        Logger.debug('Opening', isPath ? Logger.format.path(address) : address);\n        open(address, cli.options.browser ? { app: cli.options.browser } : undefined);\n      });\n  }\n\n  /**\n   * Returns `false` if the `--cli` option is used.\n   * @param {AtSCMCli} cli The current cli instance.\n   * @return {boolean} `false` if the `--cli` option is used.\n   */\n  requiresEnvironment(cli) {\n    return cli.options.remote === false && !cli.options.cli;\n  }\n}\n",
    "static": true,
    "longname": "/home/circleci/project/src/cli/commands/Docs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 79,
    "kind": "class",
    "name": "DocsCommand",
    "memberof": "src/cli/commands/Docs.js",
    "static": true,
    "longname": "src/cli/commands/Docs.js~DocsCommand",
    "access": "public",
    "export": true,
    "importPath": "atscm-cli/src/cli/commands/Docs.js",
    "importStyle": "DocsCommand",
    "description": "The command invoked when running \"docs\". Handles the options --cli and --browser.",
    "lineNumber": 11,
    "interface": false,
    "extends": [
      "src/lib/cli/Command.js~Command"
    ]
  },
  {
    "__docId__": 80,
    "kind": "get",
    "name": "RemoteDocsBase",
    "memberof": "src/cli/commands/Docs.js~DocsCommand",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/commands/Docs.js~DocsCommand.RemoteDocsBase",
    "access": "public",
    "description": "Base URL of the hosted API documentation.",
    "lineNumber": 16,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 81,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/commands/Docs.js~DocsCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Docs.js~DocsCommand#constructor",
    "access": "public",
    "description": "Creates a new {@link DocsCommand} with the specified name and description.",
    "lineNumber": 25,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The command's name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": "The command's description."
      }
    ]
  },
  {
    "__docId__": 82,
    "kind": "method",
    "name": "localDocsPath",
    "memberof": "src/cli/commands/Docs.js~DocsCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Docs.js~DocsCommand#localDocsPath",
    "access": "public",
    "description": "Returns the path to the local api docs.",
    "lineNumber": 41,
    "params": [
      {
        "nullable": null,
        "types": [
          "AtSCMCli"
        ],
        "spread": false,
        "optional": false,
        "name": "cli",
        "description": "The current Cli instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The path to the local api docs."
    }
  },
  {
    "__docId__": 83,
    "kind": "method",
    "name": "remoteDocsUrl",
    "memberof": "src/cli/commands/Docs.js~DocsCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Docs.js~DocsCommand#remoteDocsUrl",
    "access": "public",
    "description": "Returns the URL of the remote api docs.",
    "lineNumber": 53,
    "params": [
      {
        "nullable": null,
        "types": [
          "AtSCMCli"
        ],
        "spread": false,
        "optional": false,
        "name": "cli",
        "description": "The current Cli instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The URL of the remote api docs."
    }
  },
  {
    "__docId__": 84,
    "kind": "method",
    "name": "addressToOpen",
    "memberof": "src/cli/commands/Docs.js~DocsCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Docs.js~DocsCommand#addressToOpen",
    "access": "public",
    "description": "Returns the path or url to open. This is resolved in the following way:\n 1. If `--remote` is passed, always return the URL of the hosted docs of atscm-cli or atscm\n    based on the `--cli` option passed.\n 2. If `--cli` is passed, always return the path to the local atscm-cli docs.\n 3. Otherwise, check if a local module was found:\n    - If *true* return the local module docs path,\n    - else return the URL of the hosted atscm docs.",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "AtSCMCli"
        ],
        "spread": false,
        "optional": false,
        "name": "cli",
        "description": "The calling Cli instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "{address: string, isPath: boolean}"
      ],
      "spread": false,
      "description": "The resolved address and a flag indicating if the\naddress describes a file path."
    }
  },
  {
    "__docId__": 85,
    "kind": "method",
    "name": "run",
    "memberof": "src/cli/commands/Docs.js~DocsCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Docs.js~DocsCommand#run",
    "access": "public",
    "description": "Opens the requested docs in the requested browser.",
    "lineNumber": 94,
    "params": [
      {
        "nullable": null,
        "types": [
          "AtSCMCli"
        ],
        "spread": false,
        "optional": false,
        "name": "cli",
        "description": "The current Cli instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise"
      ],
      "spread": false,
      "description": "Resolved after the os-specific open command was started."
    }
  },
  {
    "__docId__": 86,
    "kind": "method",
    "name": "requiresEnvironment",
    "memberof": "src/cli/commands/Docs.js~DocsCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Docs.js~DocsCommand#requiresEnvironment",
    "access": "public",
    "description": "Returns `false` if the `--cli` option is used.",
    "lineNumber": 108,
    "params": [
      {
        "nullable": null,
        "types": [
          "AtSCMCli"
        ],
        "spread": false,
        "optional": false,
        "name": "cli",
        "description": "The current cli instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "`false` if the `--cli` option is used."
    }
  },
  {
    "__docId__": 87,
    "kind": "file",
    "name": "src/cli/commands/Init.js",
    "content": "import { readdir, writeFile } from 'fs';\nimport { join } from 'path';\nimport { spawn } from 'child_process';\nimport which from 'which';\nimport { prompt } from 'inquirer';\nimport { satisfies as validVersion } from 'semver';\nimport Command from '../../lib/cli/Command';\nimport Logger from '../../lib/util/Logger';\nimport pkg from '../../../package.json';\nimport CliOptions from '../Options';\n\nconst IgnoredFiles = ['.ds_store', 'thumbs.db'];\n\n/**\n * Returns the default export of a module, if present.\n * @param {any | { default: any }} mod The required module.\n * @return {any} The module's default export.\n */\nfunction defaultExport(mod) {\n  return mod.default || mod;\n}\n\n/**\n * Utility that returns any non-function values and calls them with the given args otherwise.\n * @param {function(...args: any[]): any | any} value The value to return or function to call.\n * @param {...any} [args] The arguments to apply if value is a function.\n * @return {any} The value or function call result.\n */\nfunction allowFunction(value, ...args) {\n  if (typeof value === 'function') {\n    return value(...args);\n  }\n\n  return value;\n}\n\n/**\n * The command invoked when running \"init\".\n */\nexport default class InitCommand extends Command {\n  /**\n   * Creates a new {@link InitCommand} with the specified name and description.\n   * @param {string} name The command's name.\n   * @param {string} description The command's description.\n   */\n  constructor(name, description) {\n    super(name, description, {\n      options: {\n        yes: CliOptions.yes,\n        force: CliOptions.force,\n        beta: CliOptions.beta,\n        link: CliOptions.link,\n      },\n    });\n  }\n\n  /**\n   * Checks if the given path contains an empty directory. OS specific temporary files (*.DS_Store*\n   * under macOS, *thumbs* under Windows) are ignored.\n   * @param {string} path The path to check.\n   * @param {boolean} [overwrite=false] If existing files should be overwritten.\n   * @return {Promise<string, Error>} Fulfilled with the valid directory's path, rejected if `path`\n   * contains no or a non-empty directory.\n   */\n  checkDirectory(path, overwrite = false) {\n    return new Promise((resolve, reject) => {\n      readdir(path, (err, files) => {\n        if (err) {\n          if (err.code === 'ENOENT') {\n            reject(new Error(`${Logger.format.path(path)} does not exist`));\n          } else if (err.code === 'ENOTDIR') {\n            reject(new Error(`${Logger.format.path(path)} is not a directory`));\n          } else {\n            reject(err);\n          }\n        } else if (files.filter((f) => !IgnoredFiles.includes(f.toLowerCase())).length > 0) {\n          const message = `${Logger.format.path(path)} is not empty`;\n\n          if (overwrite) {\n            Logger.warn(message);\n            Logger.warn(Logger.colors.yellow('Using --force, continue...'));\n            resolve(path);\n          } else {\n            reject(new Error(message));\n          }\n        } else {\n          resolve(path);\n        }\n      });\n    });\n  }\n\n  /**\n   * Creates a an empty *package* file at the given path.\n   * @param {string} path The location to create the package at.\n   * @return {Promise<undefined, Error>} Rejected if an error occurred while writing the file.\n   */\n  createEmptyPackage(path) {\n    return new Promise((resolve, reject) => {\n      writeFile(join(path, 'package.json'), '{}', (err) => {\n        if (err) {\n          // FIXME: Call with SystemError class\n          reject(\n            Object.assign(err, {\n              message: `Unable to create package.json at ${path}`,\n              originalMessage: err.message,\n            })\n          );\n        } else {\n          resolve();\n        }\n      });\n    });\n  }\n\n  /**\n   * Runs npm with the given args.\n   * @param {string[]} args The arguments to call npm with.\n   * @param {Object} options Options applied to the spawn call.\n   */\n  runNpm(args, options = {}) {\n    return new Promise((resolve, reject) => {\n      which('npm', (err, npm) => {\n        if (err) {\n          return reject(err);\n        }\n\n        const child = spawn(\n          npm,\n          args,\n          Object.assign({}, options, {\n            /* stdio: 'inherit' */\n          })\n        )\n          .on('error', (npmErr) => reject(npmErr))\n          .on('close', (code) => {\n            if (code > 0) {\n              reject(new Error(`npm ${args[0]} returned code ${code}`));\n            } else {\n              resolve();\n            }\n          });\n\n        Logger.pipeLastLine(child.stderr);\n        Logger.pipeLastLine(child.stdout);\n\n        return child;\n      });\n    });\n  }\n\n  /**\n   * Runs `npm install --save-dev {packages}` at the given path.\n   * @param {string} path The path to install packages at.\n   * @param {string|string[]} packages Names of the packages to install.\n   * @return {Promise<undefined, Error>} Rejected if installing failed, resolved otherwise.\n   */\n  install(path, packages) {\n    return this.runNpm(['install', '--save-dev'].concat(packages), { cwd: path });\n  }\n\n  /**\n   * Installs the local atscm module at the given path.\n   * @param {string} path The path to install the module at.\n   * @param {Object} options The options to use.\n   * @param {boolean} [options.useBetaRelease=false] If beta versions should be used.\n   * @param {boolean} [options.link=false] Link instead of installing.\n   * @return {Promise<undefined, Error>} Rejected if installing failed, resolved otherwise.\n   */\n  async installLocal(path, { beta: useBetaRelease = false, link = false } = {}) {\n    Logger.info('Installing latest version of atscm...');\n\n    if (useBetaRelease) {\n      Logger.debug(Logger.colors.gray('Using beta release'));\n    }\n\n    await this.install(path, useBetaRelease ? 'atscm@beta' : 'atscm');\n\n    if (link) {\n      Logger.info('Linking atscm...');\n      await this.runNpm(['link', 'atscm'], { cwd: path });\n    }\n  }\n\n  /**\n   * Checks the version of this package against the \"engines > atscm-cli\" field of the newly\n   * installed atscm module's package file.\n   * @param {Liftoff.Environment} env The environment to check.\n   * @return {Liftoff.Environment} The environment to check.\n   * @throws {Error} Throws an error if the atscm-cli version does not match.\n   */\n  checkCliVersion(env) {\n    Logger.debug('Checking atscm-cli version...');\n\n    const required = env.modulePackage.engines['atscm-cli'];\n    if (!validVersion(pkg.version.split('-beta')[0], required)) {\n      Logger.info('Your version of atscm-cli is not compatible with the latest version atscm.');\n      Logger.info('Please run', Logger.format.command('npm install -g atscm-cli'), 'to update.');\n\n      throw new Error(`Invalid atscm-cli version: ${required} required.`);\n    }\n\n    return env;\n  }\n\n  /**\n   * Returns the default values for the given init options.\n   * @param {Object[]} options An array of init options to check.\n   */\n  getDefaultOptions(options) {\n    return options.reduce((current, option) => {\n      if (option.when && !allowFunction(option.when, current)) {\n        return current;\n      }\n\n      let value;\n      if (option.default !== undefined) {\n        value = option.default;\n      } else if (option.choices) {\n        const [firstChoice] = allowFunction(option.choices, current);\n        value = firstChoice.value || firstChoice;\n      }\n\n      return Object.assign(current, {\n        [option.name]: value,\n      });\n    }, {});\n  }\n\n  /**\n   * Resolves the needed options from the local atscm module and asks for them. These options are\n   * stored in the `atscm` module inside `out/init/options`.\n   * @param {string} modulePath The path to the local module to use.\n   * @param {Object} [options] The options to use.\n   * @param {boolean} [options.useDefaults=false] Use default values.\n   * @return {Promise<Object, Error>} Resolved with the chosen options.\n   */\n  getOptions(modulePath, { useDefaults = false } = {}) {\n    // eslint-disable-next-line global-require\n    const options = defaultExport(require(join(modulePath, '../init/options')));\n\n    if (useDefaults) {\n      return this.getDefaultOptions(options);\n    }\n\n    Logger.info('Answer these questions to create a new project:');\n    return prompt(options);\n  }\n\n  /**\n   * Runs the local atscm module's init script. This script is stored in the `atscm` module inside\n   * `out/init/init`.\n   * @param {string} modulePath The path to the local module to use.\n   * @param {Object} options The options to apply (Received by calling\n   * {@link InitCommand#getOptions}).\n   * @return {Promise<{install: string[]}, Error>} Resolved with information on the further init\n   * steps (which dependencies are needed), rejected with an error if running the init script\n   * failed.\n   */\n  writeFiles(modulePath, options) {\n    // eslint-disable-next-line global-require\n    return defaultExport(require(join(modulePath, '../init/init')))(options);\n  }\n\n  /**\n   * Installs any additional dependencies needed after writing files.\n   * @param {string} path The path to install the dependencies at.\n   * @param {string[]} deps Names of the packages to install.\n   * @return {Promise<undefined, Error>} Rejected if installing failed, resolved otherwise.\n   */\n  installDependencies(path, deps) {\n    Logger.info('Installing dependencies...');\n\n    return this.install(path, deps);\n  }\n\n  /**\n   * Creates a new atscm project.\n   * @param {AtSCMCli} cli The current Cli instance.\n   */\n  run(cli) {\n    return cli\n      .getEnvironment(false)\n      .then((env) => this.checkDirectory(env.cwd, cli.options.force))\n      .then(() => this.createEmptyPackage(cli.environment.cwd))\n      .then(() => this.installLocal(cli.environment.cwd, cli.options))\n      .then(() => cli.getEnvironment(false))\n      .then((env) => this.checkCliVersion(env))\n      .then((env) => process.chdir(env.cwd))\n      .then(() => this.getOptions(cli.environment.modulePath, { useDefaults: cli.options.yes }))\n      .then((options) =>\n        this.writeFiles(cli.environment.modulePath, Object.assign({}, cli.environment, options))\n      )\n      .then((result) => this.installDependencies(cli.environment.cwd, result.install))\n      .then(async () => {\n        if (cli.options.link) {\n          Logger.info('Linking atscm...');\n          await this.runNpm(['link', 'atscm'], { cwd: cli.environment.cwd });\n        }\n      })\n      .then(() => {\n        Logger.info('Created new project at', Logger.format.path(cli.environment.cwd));\n      });\n  }\n\n  /**\n   * This command never requires an {@link Liftoff.Environment}.\n   * @return {boolean} Always `false`.\n   */\n  requiresEnvironment() {\n    return false;\n  }\n}\n",
    "static": true,
    "longname": "/home/circleci/project/src/cli/commands/Init.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 88,
    "kind": "variable",
    "name": "IgnoredFiles",
    "memberof": "src/cli/commands/Init.js",
    "static": true,
    "longname": "src/cli/commands/Init.js~IgnoredFiles",
    "access": "public",
    "export": false,
    "importPath": "atscm-cli/src/cli/commands/Init.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 12,
    "undocument": true,
    "type": {
      "types": [
        "string[]"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 89,
    "kind": "function",
    "name": "defaultExport",
    "memberof": "src/cli/commands/Init.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/commands/Init.js~defaultExport",
    "access": "public",
    "export": false,
    "importPath": "atscm-cli/src/cli/commands/Init.js",
    "importStyle": null,
    "description": "Returns the default export of a module, if present.",
    "lineNumber": 19,
    "params": [
      {
        "nullable": null,
        "types": [
          "any ",
          " { default: any }"
        ],
        "spread": false,
        "optional": false,
        "name": "mod",
        "description": "The required module."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": "The module's default export."
    },
    "ignore": true
  },
  {
    "__docId__": 90,
    "kind": "function",
    "name": "allowFunction",
    "memberof": "src/cli/commands/Init.js",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/cli/commands/Init.js~allowFunction",
    "access": "public",
    "export": false,
    "importPath": "atscm-cli/src/cli/commands/Init.js",
    "importStyle": null,
    "description": "Utility that returns any non-function values and calls them with the given args otherwise.",
    "lineNumber": 29,
    "params": [
      {
        "nullable": null,
        "types": [
          "function(...args: any[]): any ",
          " any"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to return or function to call."
      },
      {
        "nullable": null,
        "types": [
          "...any"
        ],
        "spread": true,
        "optional": true,
        "name": "args",
        "description": "The arguments to apply if value is a function."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "any"
      ],
      "spread": false,
      "description": "The value or function call result."
    },
    "ignore": true
  },
  {
    "__docId__": 91,
    "kind": "class",
    "name": "InitCommand",
    "memberof": "src/cli/commands/Init.js",
    "static": true,
    "longname": "src/cli/commands/Init.js~InitCommand",
    "access": "public",
    "export": true,
    "importPath": "atscm-cli/src/cli/commands/Init.js",
    "importStyle": "InitCommand",
    "description": "The command invoked when running \"init\".",
    "lineNumber": 40,
    "interface": false,
    "extends": [
      "src/lib/cli/Command.js~Command"
    ]
  },
  {
    "__docId__": 92,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/commands/Init.js~InitCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Init.js~InitCommand#constructor",
    "access": "public",
    "description": "Creates a new {@link InitCommand} with the specified name and description.",
    "lineNumber": 46,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The command's name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": "The command's description."
      }
    ]
  },
  {
    "__docId__": 93,
    "kind": "method",
    "name": "checkDirectory",
    "memberof": "src/cli/commands/Init.js~InitCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Init.js~InitCommand#checkDirectory",
    "access": "public",
    "description": "Checks if the given path contains an empty directory. OS specific temporary files (*.DS_Store*\nunder macOS, *thumbs* under Windows) are ignored.",
    "lineNumber": 65,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "The path to check."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "overwrite",
        "description": "If existing files should be overwritten."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string, Error>"
      ],
      "spread": false,
      "description": "Fulfilled with the valid directory's path, rejected if `path`\ncontains no or a non-empty directory."
    }
  },
  {
    "__docId__": 94,
    "kind": "method",
    "name": "createEmptyPackage",
    "memberof": "src/cli/commands/Init.js~InitCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Init.js~InitCommand#createEmptyPackage",
    "access": "public",
    "description": "Creates a an empty *package* file at the given path.",
    "lineNumber": 98,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "The location to create the package at."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<undefined, Error>"
      ],
      "spread": false,
      "description": "Rejected if an error occurred while writing the file."
    }
  },
  {
    "__docId__": 95,
    "kind": "method",
    "name": "runNpm",
    "memberof": "src/cli/commands/Init.js~InitCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Init.js~InitCommand#runNpm",
    "access": "public",
    "description": "Runs npm with the given args.",
    "lineNumber": 121,
    "params": [
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "args",
        "description": "The arguments to call npm with."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options applied to the spawn call."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 96,
    "kind": "method",
    "name": "install",
    "memberof": "src/cli/commands/Init.js~InitCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Init.js~InitCommand#install",
    "access": "public",
    "description": "Runs `npm install --save-dev {packages}` at the given path.",
    "lineNumber": 158,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "The path to install packages at."
      },
      {
        "nullable": null,
        "types": [
          "string",
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "packages",
        "description": "Names of the packages to install."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<undefined, Error>"
      ],
      "spread": false,
      "description": "Rejected if installing failed, resolved otherwise."
    }
  },
  {
    "__docId__": 97,
    "kind": "method",
    "name": "installLocal",
    "memberof": "src/cli/commands/Init.js~InitCommand",
    "generator": false,
    "async": true,
    "static": false,
    "longname": "src/cli/commands/Init.js~InitCommand#installLocal",
    "access": "public",
    "description": "Installs the local atscm module at the given path.",
    "lineNumber": 170,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "The path to install the module at."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The options to use."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.useBetaRelease",
        "description": "If beta versions should be used."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.link",
        "description": "Link instead of installing."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<undefined, Error>"
      ],
      "spread": false,
      "description": "Rejected if installing failed, resolved otherwise."
    }
  },
  {
    "__docId__": 98,
    "kind": "method",
    "name": "checkCliVersion",
    "memberof": "src/cli/commands/Init.js~InitCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Init.js~InitCommand#checkCliVersion",
    "access": "public",
    "description": "Checks the version of this package against the \"engines > atscm-cli\" field of the newly\ninstalled atscm module's package file.",
    "lineNumber": 192,
    "params": [
      {
        "nullable": null,
        "types": [
          "Liftoff.Environment"
        ],
        "spread": false,
        "optional": false,
        "name": "env",
        "description": "The environment to check."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Liftoff.Environment"
      ],
      "spread": false,
      "description": "The environment to check."
    },
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Throws an error if the atscm-cli version does not match."
      }
    ]
  },
  {
    "__docId__": 99,
    "kind": "method",
    "name": "getDefaultOptions",
    "memberof": "src/cli/commands/Init.js~InitCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Init.js~InitCommand#getDefaultOptions",
    "access": "public",
    "description": "Returns the default values for the given init options.",
    "lineNumber": 210,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object[]"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "An array of init options to check."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 100,
    "kind": "method",
    "name": "getOptions",
    "memberof": "src/cli/commands/Init.js~InitCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Init.js~InitCommand#getOptions",
    "access": "public",
    "description": "Resolves the needed options from the local atscm module and asks for them. These options are\nstored in the `atscm` module inside `out/init/options`.",
    "lineNumber": 238,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "modulePath",
        "description": "The path to the local module to use."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "The options to use."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "options.useDefaults",
        "description": "Use default values."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<Object, Error>"
      ],
      "spread": false,
      "description": "Resolved with the chosen options."
    }
  },
  {
    "__docId__": 101,
    "kind": "method",
    "name": "writeFiles",
    "memberof": "src/cli/commands/Init.js~InitCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Init.js~InitCommand#writeFiles",
    "access": "public",
    "description": "Runs the local atscm module's init script. This script is stored in the `atscm` module inside\n`out/init/init`.",
    "lineNumber": 260,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "modulePath",
        "description": "The path to the local module to use."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The options to apply (Received by calling\n{@link InitCommand#getOptions})."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<{install: string[]}, Error>"
      ],
      "spread": false,
      "description": "Resolved with information on the further init\nsteps (which dependencies are needed), rejected with an error if running the init script\nfailed."
    }
  },
  {
    "__docId__": 102,
    "kind": "method",
    "name": "installDependencies",
    "memberof": "src/cli/commands/Init.js~InitCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Init.js~InitCommand#installDependencies",
    "access": "public",
    "description": "Installs any additional dependencies needed after writing files.",
    "lineNumber": 271,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "The path to install the dependencies at."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": false,
        "name": "deps",
        "description": "Names of the packages to install."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<undefined, Error>"
      ],
      "spread": false,
      "description": "Rejected if installing failed, resolved otherwise."
    }
  },
  {
    "__docId__": 103,
    "kind": "method",
    "name": "run",
    "memberof": "src/cli/commands/Init.js~InitCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Init.js~InitCommand#run",
    "access": "public",
    "description": "Creates a new atscm project.",
    "lineNumber": 281,
    "params": [
      {
        "nullable": null,
        "types": [
          "AtSCMCli"
        ],
        "spread": false,
        "optional": false,
        "name": "cli",
        "description": "The current Cli instance."
      }
    ],
    "return": {
      "types": [
        "*"
      ]
    }
  },
  {
    "__docId__": 104,
    "kind": "method",
    "name": "requiresEnvironment",
    "memberof": "src/cli/commands/Init.js~InitCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Init.js~InitCommand#requiresEnvironment",
    "access": "public",
    "description": "This command never requires an {@link Liftoff.Environment}.",
    "lineNumber": 310,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Always `false`."
    },
    "params": []
  },
  {
    "__docId__": 105,
    "kind": "file",
    "name": "src/cli/commands/Run.js",
    "content": "import { join } from 'path';\nimport colors from 'chalk';\nimport Command from '../../lib/cli/Command';\nimport CliOptions from '../Options';\n\n/**\n * The command invoked when running \"run\".\n */\nexport default class RunCommand extends Command {\n  /**\n   * Creates a new {@link RunCommand} with the specified name and description.\n   * @param {string} name The command's name.\n   * @param {string} description The command's description.\n   */\n  constructor(name, description) {\n    super(name, description, {\n      arguments: '[task...]',\n      options: {\n        tasks: CliOptions.tasks,\n        'tasks-simple': CliOptions['tasks-simple'],\n        'tasks-json': CliOptions['tasks-json'],\n        continue: CliOptions.continue,\n      },\n      strict: false,\n    });\n  }\n\n  /**\n   * Runs gulp with the specified tasks.\n   * @param {AtSCMCli} cli The current Cli instance.\n   */\n  run(cli) {\n    const opts = {\n      _: cli.options.task || [],\n      tasks: cli.options.T,\n      tasksSimple: cli.options.tasksSimple,\n      tasksJson: cli.options.tasksJson,\n      continue: cli.options.continue,\n    };\n\n    process.env.ATSCM_CONFIG_PATH = cli.environment.configPath;\n    process.env.CONTINUE_ON_FAILURE = cli.options.continue;\n\n    // eslint-disable-next-line global-require\n    require('gulp-cli/lib/versioned/^4.0.0/')(\n      opts,\n      {\n        configPath: join(cli.environment.modulePath, '../Gulpfile.js'),\n        modulePath: join(cli.environment.cwd, 'node_modules/gulp'),\n      },\n      {\n        description: colors.bold('Available tasks:'),\n      }\n    );\n  }\n}\n",
    "static": true,
    "longname": "/home/circleci/project/src/cli/commands/Run.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 106,
    "kind": "class",
    "name": "RunCommand",
    "memberof": "src/cli/commands/Run.js",
    "static": true,
    "longname": "src/cli/commands/Run.js~RunCommand",
    "access": "public",
    "export": true,
    "importPath": "atscm-cli/src/cli/commands/Run.js",
    "importStyle": "RunCommand",
    "description": "The command invoked when running \"run\".",
    "lineNumber": 9,
    "interface": false,
    "extends": [
      "src/lib/cli/Command.js~Command"
    ]
  },
  {
    "__docId__": 107,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/commands/Run.js~RunCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Run.js~RunCommand#constructor",
    "access": "public",
    "description": "Creates a new {@link RunCommand} with the specified name and description.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The command's name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": "The command's description."
      }
    ]
  },
  {
    "__docId__": 108,
    "kind": "method",
    "name": "run",
    "memberof": "src/cli/commands/Run.js~RunCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Run.js~RunCommand#run",
    "access": "public",
    "description": "Runs gulp with the specified tasks.",
    "lineNumber": 32,
    "params": [
      {
        "nullable": null,
        "types": [
          "AtSCMCli"
        ],
        "spread": false,
        "optional": false,
        "name": "cli",
        "description": "The current Cli instance."
      }
    ],
    "return": null
  },
  {
    "__docId__": 109,
    "kind": "file",
    "name": "src/cli/commands/Update.js",
    "content": "import { get } from 'axios';\nimport { gt } from 'semver';\nimport Logger from '../../lib/util/Logger';\nimport Command from '../../lib/cli/Command';\nimport ExternalCommand from '../../lib/util/ExternalCommand';\nimport CliOptions from '../Options';\n\n/**\n * The command invoked by running \"update\".\n */\nexport default class UpdateCommand extends Command {\n  /**\n   * Creates a new {@link UpdateCommand} with the specified name and description.\n   * @param {string} name The command's name.\n   * @param {string} description The command's description.\n   */\n  constructor(name, description) {\n    super(name, description, {\n      options: {\n        beta: CliOptions.beta,\n      },\n    });\n  }\n\n  /**\n   * Checks atscm's dist-tags in the npm registry and resolves with the latest version available.\n   * @param {boolean} [useBetaRelease=false] If beta versions should be used.\n   * @return {Promise<string>} Fulfilled with the latest atscm version available.\n   */\n  getLatestVersion(useBetaRelease = false) {\n    return get('https://registry.npmjs.org/-/package/atscm/dist-tags').then(\n      (res) => res.data[useBetaRelease ? 'beta' : 'latest']\n    );\n  }\n\n  /**\n   * Checks if an update is required with the given latest and current version.\n   * @param {string} latestVersion The latest version available.\n   * @param {string} currentVersion The current version to check against.\n   * @return {boolean|string} Returns `false` if no update is required or the version to install if\n   * an update is required.\n   */\n  updateNeeded(latestVersion, currentVersion) {\n    Logger.debug('Latest version:    ', Logger.format.value(latestVersion));\n    Logger.debug('Current version:   ', Logger.format.value(currentVersion));\n\n    return gt(latestVersion, currentVersion) && latestVersion;\n  }\n\n  /**\n   * Runs `npm install --save-dev atscm@latest` in a separate process.\n   * @param {AtSCMCli} cli The cli instance used.\n   * @param {boolean} [useBetaRelease=false] If beta versions should be used.\n   * @return {Promise<string, Error>} Fulfilled with npm's stdout or rejected with a spawn error or\n   * error code.\n   */\n  update(cli, useBetaRelease = false) {\n    return ExternalCommand.run(\n      'npm',\n      ['install', '--save-dev', `atscm@${useBetaRelease ? 'beta' : 'latest'}`],\n      {\n        spawn: {\n          cwd: cli.environment.cwd,\n        },\n      }\n    );\n  }\n\n  /**\n   * Updates atscm if a newer version is available.\n   * @param {AtSCMCli} cli The cli instance used.\n   * @return {Promise<*>} Resolved if the command completed suceessfully, rejected with the error\n   * that occurred otherwise.\n   */\n  run(cli) {\n    return Promise.all([\n      this.getLatestVersion(cli.options.beta),\n      Promise.resolve(cli.environment.modulePackage.version),\n    ])\n      .then((versions) => this.updateNeeded(...versions))\n      .then((needed) => {\n        if (needed) {\n          Logger.info('Updating to version', Logger.format.value(needed));\n\n          return this.update(cli, cli.options.beta).then(() => Logger.info('Done.'));\n        }\n\n        return Logger.info('Already up-to-date.');\n      });\n  }\n\n  /**\n   * This command always needs to be run inside an existant atscm project.\n   * @return {boolean} Always `true`.\n   */\n  requiresEnvironment() {\n    return true;\n  }\n}\n",
    "static": true,
    "longname": "/home/circleci/project/src/cli/commands/Update.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 110,
    "kind": "class",
    "name": "UpdateCommand",
    "memberof": "src/cli/commands/Update.js",
    "static": true,
    "longname": "src/cli/commands/Update.js~UpdateCommand",
    "access": "public",
    "export": true,
    "importPath": "atscm-cli/src/cli/commands/Update.js",
    "importStyle": "UpdateCommand",
    "description": "The command invoked by running \"update\".",
    "lineNumber": 11,
    "interface": false,
    "extends": [
      "src/lib/cli/Command.js~Command"
    ]
  },
  {
    "__docId__": 111,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/cli/commands/Update.js~UpdateCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Update.js~UpdateCommand#constructor",
    "access": "public",
    "description": "Creates a new {@link UpdateCommand} with the specified name and description.",
    "lineNumber": 17,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The command's name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": "The command's description."
      }
    ]
  },
  {
    "__docId__": 112,
    "kind": "method",
    "name": "getLatestVersion",
    "memberof": "src/cli/commands/Update.js~UpdateCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Update.js~UpdateCommand#getLatestVersion",
    "access": "public",
    "description": "Checks atscm's dist-tags in the npm registry and resolves with the latest version available.",
    "lineNumber": 30,
    "params": [
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "useBetaRelease",
        "description": "If beta versions should be used."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string>"
      ],
      "spread": false,
      "description": "Fulfilled with the latest atscm version available."
    }
  },
  {
    "__docId__": 113,
    "kind": "method",
    "name": "updateNeeded",
    "memberof": "src/cli/commands/Update.js~UpdateCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Update.js~UpdateCommand#updateNeeded",
    "access": "public",
    "description": "Checks if an update is required with the given latest and current version.",
    "lineNumber": 43,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "latestVersion",
        "description": "The latest version available."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "currentVersion",
        "description": "The current version to check against."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean",
        "string"
      ],
      "spread": false,
      "description": "Returns `false` if no update is required or the version to install if\nan update is required."
    }
  },
  {
    "__docId__": 114,
    "kind": "method",
    "name": "update",
    "memberof": "src/cli/commands/Update.js~UpdateCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Update.js~UpdateCommand#update",
    "access": "public",
    "description": "Runs `npm install --save-dev atscm@latest` in a separate process.",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "AtSCMCli"
        ],
        "spread": false,
        "optional": false,
        "name": "cli",
        "description": "The cli instance used."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "false",
        "defaultRaw": false,
        "name": "useBetaRelease",
        "description": "If beta versions should be used."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string, Error>"
      ],
      "spread": false,
      "description": "Fulfilled with npm's stdout or rejected with a spawn error or\nerror code."
    }
  },
  {
    "__docId__": 115,
    "kind": "method",
    "name": "run",
    "memberof": "src/cli/commands/Update.js~UpdateCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Update.js~UpdateCommand#run",
    "access": "public",
    "description": "Updates atscm if a newer version is available.",
    "lineNumber": 75,
    "params": [
      {
        "nullable": null,
        "types": [
          "AtSCMCli"
        ],
        "spread": false,
        "optional": false,
        "name": "cli",
        "description": "The cli instance used."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<*>"
      ],
      "spread": false,
      "description": "Resolved if the command completed suceessfully, rejected with the error\nthat occurred otherwise."
    }
  },
  {
    "__docId__": 116,
    "kind": "method",
    "name": "requiresEnvironment",
    "memberof": "src/cli/commands/Update.js~UpdateCommand",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/cli/commands/Update.js~UpdateCommand#requiresEnvironment",
    "access": "public",
    "description": "This command always needs to be run inside an existant atscm project.",
    "lineNumber": 96,
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "Always `true`."
    },
    "params": []
  },
  {
    "__docId__": 117,
    "kind": "file",
    "name": "src/lib/cli/Command.js",
    "content": "/**\n * A command that can be run through the CLI.\n * @abstract\n */\nexport default class Command {\n  /**\n   * Creates a new Command with the given name and options.\n   * @param {string} name The command's name.\n   * @param {string} description The command's description.\n   * @param {Object} options The options to apply.\n   * @param {Map<string, Option>} options.options The options available for this command.\n   * @param {string} [options.arguments] The command's argument string. See yargs' documentation\n   * for details.\n   * @param {number} [options.minArguments] The minimum number or (non-option) arguments the command\n   * requires.\n   * @param {number} [options.maxArguments] The maximum number or (non-option) arguments the command\n   * requires.\n   * @param {boolean} [options.strict=true] Throw error for unknown arguments.\n   * @throws {Error} Throws an error if options.maxArguments is less than options.minArguments.\n   * @see {@link yargs}\n   */\n  constructor(name, description, options = {}) {\n    /**\n     * The command's name.\n     * @type {String}\n     */\n    this.name = name;\n\n    /**\n     * The command descriptions.\n     * @type {String}\n     */\n    this.description = description;\n\n    if (\n      options.minArguments &&\n      options.maxArguments !== undefined &&\n      options.maxArguments < options.minArguments\n    ) {\n      throw new Error('options.maxArguments must not be less than options.minArguments');\n    }\n\n    /**\n     * The command's raw options.\n     * @type {Object}\n     * @private\n     */\n    this._options = options;\n  }\n\n  /**\n   * Runs the command with the current Cli instance. **Asynchronous commands should return a Promise\n   * here.**.\n   * @param {AtSCMCli} cli The current cli instance.\n   */\n  // eslint-disable-next-line no-unused-vars\n  run(cli) {\n    throw new Error('Must be implemented by all subclasses');\n  }\n\n  /**\n   * Returns `true` if the command requires a {@link Liftoff.Environment} before it can be run.\n   * @param {AtSCMCli} cli The current cli instance.\n   * @return {boolean} `true` if the command requires a {@link Liftoff.Environment}.\n   */\n  // eslint-disable-next-line no-unused-vars\n  requiresEnvironment(cli) {\n    return true;\n  }\n\n  /**\n   * Returns the usage string for the command. Something like \"{name} {arguments}\".\n   * @type {string}\n   */\n  get usage() {\n    if (this._options.arguments) {\n      return `${this.name} ${this._options.arguments}`;\n    }\n\n    return this.name;\n  }\n\n  /**\n   * The options available for the command.\n   * @type {Map<string, Option>}\n   */\n  get options() {\n    return this._options.options || {};\n  }\n\n  /**\n   * The minimum and maximum number of (non-option) arguments the command handles.\n   * @type {number[]}\n   */\n  get demandCommand() {\n    const ret = [this._options.minArguments || 0];\n\n    if (this._options.maxArguments !== undefined) {\n      ret.push(this._options.maxArguments);\n    }\n\n    return ret;\n  }\n\n  /**\n   * If an error should be thrown for unknown arguments.\n   * @type {boolean}\n   */\n  get strict() {\n    return this._options.strict !== undefined ? this._options.strict : true;\n  }\n}\n",
    "static": true,
    "longname": "/home/circleci/project/src/lib/cli/Command.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 118,
    "kind": "class",
    "name": "Command",
    "memberof": "src/lib/cli/Command.js",
    "static": true,
    "longname": "src/lib/cli/Command.js~Command",
    "access": "public",
    "export": true,
    "importPath": "atscm-cli/src/lib/cli/Command.js",
    "importStyle": "Command",
    "description": "A command that can be run through the CLI.",
    "lineNumber": 5,
    "abstract": true,
    "interface": false
  },
  {
    "__docId__": 119,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/lib/cli/Command.js~Command",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/cli/Command.js~Command#constructor",
    "access": "public",
    "description": "Creates a new Command with the given name and options.",
    "see": [
      "{@link yargs}"
    ],
    "lineNumber": 22,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The command's name."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "description",
        "description": "The command's description."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "The options to apply."
      },
      {
        "nullable": null,
        "types": [
          "Map<string, Option>"
        ],
        "spread": false,
        "optional": false,
        "name": "options.options",
        "description": "The options available for this command."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": true,
        "name": "options.arguments",
        "description": "The command's argument string. See yargs' documentation\nfor details."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.minArguments",
        "description": "The minimum number or (non-option) arguments the command\nrequires."
      },
      {
        "nullable": null,
        "types": [
          "number"
        ],
        "spread": false,
        "optional": true,
        "name": "options.maxArguments",
        "description": "The maximum number or (non-option) arguments the command\nrequires."
      },
      {
        "nullable": null,
        "types": [
          "boolean"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "true",
        "defaultRaw": true,
        "name": "options.strict",
        "description": "Throw error for unknown arguments."
      }
    ],
    "throws": [
      {
        "types": [
          "Error"
        ],
        "description": "Throws an error if options.maxArguments is less than options.minArguments."
      }
    ]
  },
  {
    "__docId__": 120,
    "kind": "member",
    "name": "name",
    "memberof": "src/lib/cli/Command.js~Command",
    "static": false,
    "longname": "src/lib/cli/Command.js~Command#name",
    "access": "public",
    "description": "The command's name.",
    "lineNumber": 27,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 121,
    "kind": "member",
    "name": "description",
    "memberof": "src/lib/cli/Command.js~Command",
    "static": false,
    "longname": "src/lib/cli/Command.js~Command#description",
    "access": "public",
    "description": "The command descriptions.",
    "lineNumber": 33,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 122,
    "kind": "member",
    "name": "_options",
    "memberof": "src/lib/cli/Command.js~Command",
    "static": false,
    "longname": "src/lib/cli/Command.js~Command#_options",
    "access": "private",
    "description": "The command's raw options.",
    "lineNumber": 48,
    "type": {
      "nullable": null,
      "types": [
        "Object"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 123,
    "kind": "method",
    "name": "run",
    "memberof": "src/lib/cli/Command.js~Command",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/cli/Command.js~Command#run",
    "access": "public",
    "description": "Runs the command with the current Cli instance. **Asynchronous commands should return a Promise\nhere.**.",
    "lineNumber": 57,
    "params": [
      {
        "nullable": null,
        "types": [
          "AtSCMCli"
        ],
        "spread": false,
        "optional": false,
        "name": "cli",
        "description": "The current cli instance."
      }
    ],
    "return": null
  },
  {
    "__docId__": 124,
    "kind": "method",
    "name": "requiresEnvironment",
    "memberof": "src/lib/cli/Command.js~Command",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/cli/Command.js~Command#requiresEnvironment",
    "access": "public",
    "description": "Returns `true` if the command requires a {@link Liftoff.Environment} before it can be run.",
    "lineNumber": 67,
    "params": [
      {
        "nullable": null,
        "types": [
          "AtSCMCli"
        ],
        "spread": false,
        "optional": false,
        "name": "cli",
        "description": "The current cli instance."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": "`true` if the command requires a {@link Liftoff.Environment}."
    }
  },
  {
    "__docId__": 125,
    "kind": "get",
    "name": "usage",
    "memberof": "src/lib/cli/Command.js~Command",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/cli/Command.js~Command#usage",
    "access": "public",
    "description": "Returns the usage string for the command. Something like \"{name} {arguments}\".",
    "lineNumber": 75,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 126,
    "kind": "get",
    "name": "options",
    "memberof": "src/lib/cli/Command.js~Command",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/cli/Command.js~Command#options",
    "access": "public",
    "description": "The options available for the command.",
    "lineNumber": 87,
    "type": {
      "nullable": null,
      "types": [
        "Map<string, Option>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 127,
    "kind": "get",
    "name": "demandCommand",
    "memberof": "src/lib/cli/Command.js~Command",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/cli/Command.js~Command#demandCommand",
    "access": "public",
    "description": "The minimum and maximum number of (non-option) arguments the command handles.",
    "lineNumber": 95,
    "type": {
      "nullable": null,
      "types": [
        "number[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 128,
    "kind": "get",
    "name": "strict",
    "memberof": "src/lib/cli/Command.js~Command",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/cli/Command.js~Command#strict",
    "access": "public",
    "description": "If an error should be thrown for unknown arguments.",
    "lineNumber": 109,
    "type": {
      "nullable": null,
      "types": [
        "boolean"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 129,
    "kind": "file",
    "name": "src/lib/cli/Option.js",
    "content": "/**\n * A command line option.\n */\nexport default class Option {\n  /**\n   * Creates a new {@link Option} based on a description and some options.\n   * @param {string} desc A string describing the option. Used for help texts.\n   * @param {Object} [options={}] The options to create the {@link Option} with. Refer to\n   * yarg's documentation in order to know what options can be used here.\n   * @see {@link yargs}\n   */\n  constructor(desc, options = {}) {\n    /**\n     * A string describing the option. Used for help texts.\n     * @type {String}\n     */\n    this.desc = desc;\n\n    Object.keys(options).forEach((k) => (this[k] = options[k]));\n  }\n\n  /**\n   * Shorthand to create an {@link Option} with type boolean.\n   * @param {string} desc A string describing the option. Used for help texts.\n   * @param {Object} [options={type: 'boolean'}] The options to create the {@link Option} with.\n   * @return {Option} An {@link Option} with type boolean.\n   */\n  static boolean(desc, options = {}) {\n    return new this(desc, Object.assign(options, { type: 'boolean' }));\n  }\n\n  /**\n   * Shorthand to create an {@link Option} with type string.\n   * @param {string} desc A string describing the option. Used for help texts.\n   * @param {Object} [options={type: 'string', requiresArg: true}] The options to create the\n   * {@link Option} with.\n   * @return {Option} An {@link Option} with type string.\n   */\n  static string(desc, options = {}) {\n    return new this(desc, Object.assign(options, { type: 'string', requiresArg: true }));\n  }\n}\n",
    "static": true,
    "longname": "/home/circleci/project/src/lib/cli/Option.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 130,
    "kind": "class",
    "name": "Option",
    "memberof": "src/lib/cli/Option.js",
    "static": true,
    "longname": "src/lib/cli/Option.js~Option",
    "access": "public",
    "export": true,
    "importPath": "atscm-cli/src/lib/cli/Option.js",
    "importStyle": "Option",
    "description": "A command line option.",
    "lineNumber": 4,
    "interface": false
  },
  {
    "__docId__": 131,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/lib/cli/Option.js~Option",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/cli/Option.js~Option#constructor",
    "access": "public",
    "description": "Creates a new {@link Option} based on a description and some options.",
    "see": [
      "{@link yargs}"
    ],
    "lineNumber": 12,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "desc",
        "description": "A string describing the option. Used for help texts."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "options",
        "description": "The options to create the {@link Option} with. Refer to\nyarg's documentation in order to know what options can be used here."
      }
    ]
  },
  {
    "__docId__": 132,
    "kind": "member",
    "name": "desc",
    "memberof": "src/lib/cli/Option.js~Option",
    "static": false,
    "longname": "src/lib/cli/Option.js~Option#desc",
    "access": "public",
    "description": "A string describing the option. Used for help texts.",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 133,
    "kind": "method",
    "name": "boolean",
    "memberof": "src/lib/cli/Option.js~Option",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/cli/Option.js~Option.boolean",
    "access": "public",
    "description": "Shorthand to create an {@link Option} with type boolean.",
    "lineNumber": 28,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "desc",
        "description": "A string describing the option. Used for help texts."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{type: 'boolean'}",
        "defaultRaw": "{type: 'boolean'}",
        "name": "options",
        "description": "The options to create the {@link Option} with."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Option"
      ],
      "spread": false,
      "description": "An {@link Option} with type boolean."
    }
  },
  {
    "__docId__": 134,
    "kind": "method",
    "name": "string",
    "memberof": "src/lib/cli/Option.js~Option",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/cli/Option.js~Option.string",
    "access": "public",
    "description": "Shorthand to create an {@link Option} with type string.",
    "lineNumber": 39,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "desc",
        "description": "A string describing the option. Used for help texts."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{type: 'string', requiresArg: true}",
        "defaultRaw": "{type: 'string', requiresArg: true}",
        "name": "options",
        "description": "The options to create the\n{@link Option} with."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Option"
      ],
      "spread": false,
      "description": "An {@link Option} with type string."
    }
  },
  {
    "__docId__": 135,
    "kind": "file",
    "name": "src/lib/error/UsageError.js",
    "content": "/**\n * An error reported when {@link yargs} fails to parse arguments.\n */\nexport default class UsageError extends Error {\n  /**\n   * Creates a new {@link UsageError} based on an error message and the failing parser.\n   * @param {string} message The error message.\n   * @param {string} help Help text for the failing command.\n   */\n  constructor(message, help) {\n    super(message);\n\n    /**\n     * Help text for the failing command.\n     * @type {String}\n     */\n    this.help = help;\n  }\n}\n",
    "static": true,
    "longname": "/home/circleci/project/src/lib/error/UsageError.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 136,
    "kind": "class",
    "name": "UsageError",
    "memberof": "src/lib/error/UsageError.js",
    "static": true,
    "longname": "src/lib/error/UsageError.js~UsageError",
    "access": "public",
    "export": true,
    "importPath": "atscm-cli/src/lib/error/UsageError.js",
    "importStyle": "UsageError",
    "description": "An error reported when {@link yargs} fails to parse arguments.",
    "lineNumber": 4,
    "interface": false,
    "extends": [
      "Error"
    ]
  },
  {
    "__docId__": 137,
    "kind": "constructor",
    "name": "constructor",
    "memberof": "src/lib/error/UsageError.js~UsageError",
    "generator": false,
    "async": false,
    "static": false,
    "longname": "src/lib/error/UsageError.js~UsageError#constructor",
    "access": "public",
    "description": "Creates a new {@link UsageError} based on an error message and the failing parser.",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "message",
        "description": "The error message."
      },
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "help",
        "description": "Help text for the failing command."
      }
    ]
  },
  {
    "__docId__": 138,
    "kind": "member",
    "name": "help",
    "memberof": "src/lib/error/UsageError.js~UsageError",
    "static": false,
    "longname": "src/lib/error/UsageError.js~UsageError#help",
    "access": "public",
    "description": "Help text for the failing command.",
    "lineNumber": 17,
    "type": {
      "nullable": null,
      "types": [
        "String"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 139,
    "kind": "file",
    "name": "src/lib/util/ExternalCommand.js",
    "content": "import { spawn } from 'child_process';\nimport which from 'which';\nimport Logger from './Logger';\n\n/**\n * A static class providing utilities to run external commands.\n */\nexport default class ExternalCommand {\n  /**\n   * Resolves the executable path for the given command.\n   * @param {string} name The command to resolve.\n   * @return {Promise<string, Error>} Fulfilled with the executable path or the error that occured\n   * while running `which`.\n   */\n  static resolveBin(name) {\n    return new Promise((resolve, reject) => {\n      which(name, (err, path) => {\n        if (err) {\n          reject(err);\n        } else {\n          resolve(path);\n        }\n      });\n    });\n  }\n\n  /**\n   * Spawns an executable with the given args and options. See the node docs on the `child_process`\n   * module for all available spawn options.\n   * @param {string} bin Path to the executable to run.\n   * @param {string[]} [args=[]] The arguments to use.\n   * @param {Object} [options] The options to use.\n   * @param {Object} [options.spawn] Options to use for the spawned process.\n   * @param {function(process: node.ChildProcess)} [options.onspawn] Callback to call once the\n   * process was created. Useful for handling stdio events etc.\n   * @return {Promise<string, Error>} Fulfilled with the child process' stdout or rejected with a\n   * spawn error or non-zero exit code.\n   * @see {@link node.ChildProcess}\n   */\n  static spawn(bin, args = [], options = {}) {\n    return new Promise((resolve, reject) => {\n      let stdout = '';\n\n      Logger.debug('Running', Logger.format.command(`${bin} ${args.join(' ')}`));\n      const child = spawn(bin, args, options.spawn || options)\n        .once('error', (err) => reject(err))\n        .once('close', (code) => {\n          if (code > 0) {\n            reject(new Error(`${bin} ${args.join(' ')} returned code ${code}`));\n          } else {\n            resolve(stdout.trim());\n          }\n        });\n\n      child.stdout.on('data', (d) => (stdout += d.toString()));\n\n      if (options.onspawn) {\n        options.onspawn(child);\n      }\n    });\n  }\n\n  /**\n   * Resolves the executable for the given command and runs it with the arguments and options given.\n   * See the node docs on the `child_process` module for all available spawn options.\n   * @param {string} name The command to run.\n   * @param {string[]} [args] The arguments to use.\n   * @param {Object} [options] The options to use.\n   * @param {Object} [options.spawn] Options to use for the spawned process.\n   * @param {function(process: node.ChildProcess)} [options.onspawn] Callback to call once the\n   * process was created. Useful for handling stdio events etc.\n   * @return {Promise<string, Error>} Fulfilled with the child process' stdout or rejected with a\n   * spawn error, a non-zero exit code or an error that occured while running `which`.\n   * @see {@link node.ChildProcess}\n   */\n  static run(name, args, options) {\n    return this.resolveBin(name).then((bin) => this.spawn(bin, args, options));\n  }\n}\n",
    "static": true,
    "longname": "/home/circleci/project/src/lib/util/ExternalCommand.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 140,
    "kind": "class",
    "name": "ExternalCommand",
    "memberof": "src/lib/util/ExternalCommand.js",
    "static": true,
    "longname": "src/lib/util/ExternalCommand.js~ExternalCommand",
    "access": "public",
    "export": true,
    "importPath": "atscm-cli/src/lib/util/ExternalCommand.js",
    "importStyle": "ExternalCommand",
    "description": "A static class providing utilities to run external commands.",
    "lineNumber": 8,
    "interface": false
  },
  {
    "__docId__": 141,
    "kind": "method",
    "name": "resolveBin",
    "memberof": "src/lib/util/ExternalCommand.js~ExternalCommand",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/util/ExternalCommand.js~ExternalCommand.resolveBin",
    "access": "public",
    "description": "Resolves the executable path for the given command.",
    "lineNumber": 15,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The command to resolve."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string, Error>"
      ],
      "spread": false,
      "description": "Fulfilled with the executable path or the error that occured\nwhile running `which`."
    }
  },
  {
    "__docId__": 142,
    "kind": "method",
    "name": "spawn",
    "memberof": "src/lib/util/ExternalCommand.js~ExternalCommand",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/util/ExternalCommand.js~ExternalCommand.spawn",
    "access": "public",
    "description": "Spawns an executable with the given args and options. See the node docs on the `child_process`\nmodule for all available spawn options.",
    "see": [
      "{@link node.ChildProcess}"
    ],
    "lineNumber": 40,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "bin",
        "description": "Path to the executable to run."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "[]",
        "defaultRaw": [],
        "name": "args",
        "description": "The arguments to use."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "The options to use."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options.spawn",
        "description": "Options to use for the spawned process."
      },
      {
        "nullable": null,
        "types": [
          "function(process: node.ChildProcess)"
        ],
        "spread": false,
        "optional": true,
        "name": "options.onspawn",
        "description": "Callback to call once the\nprocess was created. Useful for handling stdio events etc."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string, Error>"
      ],
      "spread": false,
      "description": "Fulfilled with the child process' stdout or rejected with a\nspawn error or non-zero exit code."
    }
  },
  {
    "__docId__": 143,
    "kind": "method",
    "name": "run",
    "memberof": "src/lib/util/ExternalCommand.js~ExternalCommand",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/util/ExternalCommand.js~ExternalCommand.run",
    "access": "public",
    "description": "Resolves the executable for the given command and runs it with the arguments and options given.\nSee the node docs on the `child_process` module for all available spawn options.",
    "see": [
      "{@link node.ChildProcess}"
    ],
    "lineNumber": 76,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "name",
        "description": "The command to run."
      },
      {
        "nullable": null,
        "types": [
          "string[]"
        ],
        "spread": false,
        "optional": true,
        "name": "args",
        "description": "The arguments to use."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options",
        "description": "The options to use."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "name": "options.spawn",
        "description": "Options to use for the spawned process."
      },
      {
        "nullable": null,
        "types": [
          "function(process: node.ChildProcess)"
        ],
        "spread": false,
        "optional": true,
        "name": "options.onspawn",
        "description": "Callback to call once the\nprocess was created. Useful for handling stdio events etc."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<string, Error>"
      ],
      "spread": false,
      "description": "Fulfilled with the child process' stdout or rejected with a\nspawn error, a non-zero exit code or an error that occured while running `which`."
    }
  },
  {
    "__docId__": 144,
    "kind": "file",
    "name": "src/lib/util/Logger.js",
    "content": "import readline from 'readline';\nimport { Console } from 'console';\nimport gulplog from 'gulplog';\nimport chalk from 'chalk';\nimport tildify from 'tildify';\n\nconst logConsole = new Console(process.stdout, process.stderr);\n\n/**\n * Formats strings to be used in the {@link Logger}.\n */\nexport class LogFormat {\n  /**\n   * Formats a string to represent a path.\n   * @param {string} path The path to format.\n   * @return {string} The formatted string.\n   */\n  static path(path) {\n    return chalk.magenta(tildify(path));\n  }\n\n  /**\n   * Formats a string to represent a command.\n   * @param {string} command The command to format.\n   * @return {string} The formatted string.\n   */\n  static command(command) {\n    return chalk.bold(command);\n  }\n\n  /**\n   * Formats a string to represent a value. Use this format for files, module names, etc.\n   * @param {string} value The value to format.\n   * @return {string} The formatted string.\n   */\n  static value(value) {\n    return chalk.cyan(value);\n  }\n\n  /**\n   * Formats a string to represent a number. Use this format for times, counts, etc.\n   * @param {string} number The value to format.\n   * @return {string} The formatted string.\n   */\n  static number(number) {\n    return chalk.magenta(number);\n  }\n}\n\n/**\n * A logger used in all console outputs.\n * **Should never be instantiated.**\n * Log levels, `--silent`-flags etc. are handled automatically by {@link gulplog}.\n */\nexport default class Logger {\n  /**\n   * An instance of {@link chalk}.\n   * @type {chalk}\n   */\n  static get colors() {\n    return chalk;\n  }\n\n  /**\n   * An instance of {@link LogFormat}.\n   * @type {LogFormat}\n   */\n  static get format() {\n    return LogFormat;\n  }\n\n  /**\n   * The prefix added to each log. Should always equal fancy-log's prefix.\n   * @type {string}\n   * @see {@link gulplog}\n   */\n  static get prefix() {\n    function pad(val) {\n      return `00${val}`.slice(-2);\n    }\n\n    const now = new Date();\n    const timestamp = [pad(now.getHours()), pad(now.getMinutes()), pad(now.getSeconds())].join(':');\n\n    return `[${chalk.gray(timestamp)}]`;\n  }\n\n  /**\n   * Print debug messages.\n   * @param {...string} message The message(s) to print.\n   */\n  static debug(...message) {\n    gulplog.debug(...message);\n  }\n\n  /**\n   * Print regular logs.\n   * @param {...string} message The message(s) to print.\n   */\n  static info(...message) {\n    gulplog.info(...message);\n  }\n\n  /**\n   * Print warnings.\n   * @param {...string} message The message(s) to print.\n   */\n  static warn(...message) {\n    gulplog.warn(...message);\n  }\n\n  /**\n   * Print error messages.\n   * @param {...string} message The message(s) to print.\n   */\n  static error(...message) {\n    gulplog.error(...message);\n  }\n\n  /**\n   * The log types available.\n   * @type {string[]}\n   */\n  static get types() {\n    return ['error', 'warn', 'info', 'debug'];\n  }\n\n  /**\n   * Apply options to the logger.\n   * **Should only be called once.**.\n   * @param {Object} options Options passed to {@link gulplog}.\n   */\n  static applyOptions(options) {\n    if (options.tasksSimple || options.silent || options.logLevel === 0) {\n      gulplog.on('error', () => {});\n      return;\n    }\n\n    /**\n     * The log types handled.\n     * @type {Map<String, Boolean>}\n     */\n    this._handled = {};\n\n    this.types\n      .filter((item, i) => {\n        const handle = i < options.logLevel;\n\n        this._handled[item] = handle;\n\n        return handle;\n      })\n      .forEach((level) =>\n        gulplog.on(level, (...args) => {\n          logConsole[level === 'error' ? 'error' : 'info'](...[this.prefix].concat(args));\n        })\n      );\n  }\n\n  /**\n   * Pipes a readable stream and logs the last line of each chunk processed.\n   * @param {node.stream.Readable} stream The stream to pipe.\n   */\n  static pipeLastLine(stream) {\n    let loggedBefore = false;\n\n    stream\n      .on('data', (d) => {\n        const lines = d\n          .toString()\n          .split('\\n')\n          .filter((l) => l.trim() !== '');\n\n        if (loggedBefore && this._handled.info) {\n          readline.moveCursor(process.stdout, 0, -1);\n          readline.clearLine(process.stdout);\n        }\n\n        Logger.info(lines[lines.length - 1]);\n        loggedBefore = true;\n      })\n      .on('end', () => {\n        if (loggedBefore && this._handled.info) {\n          readline.moveCursor(process.stdout, 0, -1);\n          readline.clearLine(process.stdout);\n          readline.cursorTo(process.stdout, 0);\n        }\n      });\n  }\n}\n",
    "static": true,
    "longname": "/home/circleci/project/src/lib/util/Logger.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 145,
    "kind": "variable",
    "name": "logConsole",
    "memberof": "src/lib/util/Logger.js",
    "static": true,
    "longname": "src/lib/util/Logger.js~logConsole",
    "access": "public",
    "export": false,
    "importPath": "atscm-cli/src/lib/util/Logger.js",
    "importStyle": null,
    "description": null,
    "lineNumber": 7,
    "undocument": true,
    "type": {
      "types": [
        "*"
      ]
    },
    "ignore": true
  },
  {
    "__docId__": 146,
    "kind": "class",
    "name": "LogFormat",
    "memberof": "src/lib/util/Logger.js",
    "static": true,
    "longname": "src/lib/util/Logger.js~LogFormat",
    "access": "public",
    "export": true,
    "importPath": "atscm-cli/src/lib/util/Logger.js",
    "importStyle": "{LogFormat}",
    "description": "Formats strings to be used in the {@link Logger}.",
    "lineNumber": 12,
    "interface": false
  },
  {
    "__docId__": 147,
    "kind": "method",
    "name": "path",
    "memberof": "src/lib/util/Logger.js~LogFormat",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/util/Logger.js~LogFormat.path",
    "access": "public",
    "description": "Formats a string to represent a path.",
    "lineNumber": 18,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "The path to format."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The formatted string."
    }
  },
  {
    "__docId__": 148,
    "kind": "method",
    "name": "command",
    "memberof": "src/lib/util/Logger.js~LogFormat",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/util/Logger.js~LogFormat.command",
    "access": "public",
    "description": "Formats a string to represent a command.",
    "lineNumber": 27,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "command",
        "description": "The command to format."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The formatted string."
    }
  },
  {
    "__docId__": 149,
    "kind": "method",
    "name": "value",
    "memberof": "src/lib/util/Logger.js~LogFormat",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/util/Logger.js~LogFormat.value",
    "access": "public",
    "description": "Formats a string to represent a value. Use this format for files, module names, etc.",
    "lineNumber": 36,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "value",
        "description": "The value to format."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The formatted string."
    }
  },
  {
    "__docId__": 150,
    "kind": "method",
    "name": "number",
    "memberof": "src/lib/util/Logger.js~LogFormat",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/util/Logger.js~LogFormat.number",
    "access": "public",
    "description": "Formats a string to represent a number. Use this format for times, counts, etc.",
    "lineNumber": 45,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "number",
        "description": "The value to format."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": "The formatted string."
    }
  },
  {
    "__docId__": 151,
    "kind": "class",
    "name": "Logger",
    "memberof": "src/lib/util/Logger.js",
    "static": true,
    "longname": "src/lib/util/Logger.js~Logger",
    "access": "public",
    "export": true,
    "importPath": "atscm-cli/src/lib/util/Logger.js",
    "importStyle": "Logger",
    "description": "A logger used in all console outputs.\n**Should never be instantiated.**\nLog levels, `--silent`-flags etc. are handled automatically by {@link gulplog}.",
    "lineNumber": 55,
    "interface": false
  },
  {
    "__docId__": 152,
    "kind": "get",
    "name": "colors",
    "memberof": "src/lib/util/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/util/Logger.js~Logger.colors",
    "access": "public",
    "description": "An instance of {@link chalk}.",
    "lineNumber": 60,
    "type": {
      "nullable": null,
      "types": [
        "chalk"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 153,
    "kind": "get",
    "name": "format",
    "memberof": "src/lib/util/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/util/Logger.js~Logger.format",
    "access": "public",
    "description": "An instance of {@link LogFormat}.",
    "lineNumber": 68,
    "type": {
      "nullable": null,
      "types": [
        "LogFormat"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 154,
    "kind": "get",
    "name": "prefix",
    "memberof": "src/lib/util/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/util/Logger.js~Logger.prefix",
    "access": "public",
    "description": "The prefix added to each log. Should always equal fancy-log's prefix.",
    "see": [
      "{@link gulplog}"
    ],
    "lineNumber": 77,
    "type": {
      "nullable": null,
      "types": [
        "string"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 155,
    "kind": "method",
    "name": "debug",
    "memberof": "src/lib/util/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/util/Logger.js~Logger.debug",
    "access": "public",
    "description": "Print debug messages.",
    "lineNumber": 92,
    "params": [
      {
        "nullable": null,
        "types": [
          "...string"
        ],
        "spread": true,
        "optional": false,
        "name": "message",
        "description": "The message(s) to print."
      }
    ],
    "return": null
  },
  {
    "__docId__": 156,
    "kind": "method",
    "name": "info",
    "memberof": "src/lib/util/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/util/Logger.js~Logger.info",
    "access": "public",
    "description": "Print regular logs.",
    "lineNumber": 100,
    "params": [
      {
        "nullable": null,
        "types": [
          "...string"
        ],
        "spread": true,
        "optional": false,
        "name": "message",
        "description": "The message(s) to print."
      }
    ],
    "return": null
  },
  {
    "__docId__": 157,
    "kind": "method",
    "name": "warn",
    "memberof": "src/lib/util/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/util/Logger.js~Logger.warn",
    "access": "public",
    "description": "Print warnings.",
    "lineNumber": 108,
    "params": [
      {
        "nullable": null,
        "types": [
          "...string"
        ],
        "spread": true,
        "optional": false,
        "name": "message",
        "description": "The message(s) to print."
      }
    ],
    "return": null
  },
  {
    "__docId__": 158,
    "kind": "method",
    "name": "error",
    "memberof": "src/lib/util/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/util/Logger.js~Logger.error",
    "access": "public",
    "description": "Print error messages.",
    "lineNumber": 116,
    "params": [
      {
        "nullable": null,
        "types": [
          "...string"
        ],
        "spread": true,
        "optional": false,
        "name": "message",
        "description": "The message(s) to print."
      }
    ],
    "return": null
  },
  {
    "__docId__": 159,
    "kind": "get",
    "name": "types",
    "memberof": "src/lib/util/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/util/Logger.js~Logger.types",
    "access": "public",
    "description": "The log types available.",
    "lineNumber": 124,
    "type": {
      "nullable": null,
      "types": [
        "string[]"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 160,
    "kind": "method",
    "name": "applyOptions",
    "memberof": "src/lib/util/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/util/Logger.js~Logger.applyOptions",
    "access": "public",
    "description": "Apply options to the logger.\n**Should only be called once.**.",
    "lineNumber": 133,
    "params": [
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": false,
        "name": "options",
        "description": "Options passed to {@link gulplog}."
      }
    ],
    "return": null
  },
  {
    "__docId__": 161,
    "kind": "member",
    "name": "_handled",
    "memberof": "src/lib/util/Logger.js~Logger",
    "static": true,
    "longname": "src/lib/util/Logger.js~Logger._handled",
    "access": "private",
    "description": "The log types handled.",
    "lineNumber": 143,
    "type": {
      "nullable": null,
      "types": [
        "Map<String, Boolean>"
      ],
      "spread": false,
      "description": null
    }
  },
  {
    "__docId__": 162,
    "kind": "method",
    "name": "pipeLastLine",
    "memberof": "src/lib/util/Logger.js~Logger",
    "generator": false,
    "async": false,
    "static": true,
    "longname": "src/lib/util/Logger.js~Logger.pipeLastLine",
    "access": "public",
    "description": "Pipes a readable stream and logs the last line of each chunk processed.",
    "lineNumber": 164,
    "params": [
      {
        "nullable": null,
        "types": [
          "node.stream.Readable"
        ],
        "spread": false,
        "optional": false,
        "name": "stream",
        "description": "The stream to pipe."
      }
    ],
    "return": null
  },
  {
    "__docId__": 163,
    "kind": "file",
    "name": "src/lib/util/fs.js",
    "content": "/* eslint-disable import/prefer-default-export */\n\nimport { promises as fsp } from 'fs';\n\n/**\n * Reads a file and parses it's contents as JSON.\n * @param {string} path The file to read.\n * @return {Promise<any>} The parsed file contents.\n */\nexport async function readJson(path) {\n  return JSON.parse(await fsp.readFile(path, 'utf8'));\n}\n",
    "static": true,
    "longname": "/home/circleci/project/src/lib/util/fs.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 164,
    "kind": "function",
    "name": "readJson",
    "memberof": "src/lib/util/fs.js",
    "generator": false,
    "async": true,
    "static": true,
    "longname": "src/lib/util/fs.js~readJson",
    "access": "public",
    "export": true,
    "importPath": "atscm-cli/src/lib/util/fs.js",
    "importStyle": "{readJson}",
    "description": "Reads a file and parses it's contents as JSON.",
    "lineNumber": 10,
    "params": [
      {
        "nullable": null,
        "types": [
          "string"
        ],
        "spread": false,
        "optional": false,
        "name": "path",
        "description": "The file to read."
      }
    ],
    "return": {
      "nullable": null,
      "types": [
        "Promise<any>"
      ],
      "spread": false,
      "description": "The parsed file contents."
    }
  },
  {
    "__docId__": 165,
    "kind": "file",
    "name": "src/typedef/external.js",
    "content": "/**\n * @external {Liftoff} https://github.com/js-cli/js-liftoff\n */\n\n/**\n * A {@link Liftoff} environment.\n * @typedef {Object} Liftoff.Environment\n * @property {String} cwd The resulting working directory.\n * @property {String} [configPath] Path to the config file found.\n * @property {String} [configBase] The directory the config file is in.\n * @property {String} [modulePath] Path to the local module found.\n * @property {Object} [modulePackage={}] The parsed package.json of the local module found.\n */\n\n/**\n * @external {gulplog} https://github.com/gulpjs/gulplog\n */\n\n/**\n * @external {chalk} https://github.com/chalk/chalk\n */\n\n/**\n * @external {yargs} http://yargs.js.org\n */\n\n/**\n * @external {node.stream.Readable} https://nodejs.org/api/stream.html#stream_class_stream_readable\n */\n\n/**\n * @external {node.ChildProcess}\n * https://nodejs.org/api/child_process.html#child_process_class_childprocess\n */\n",
    "static": true,
    "longname": "/home/circleci/project/src/typedef/external.js",
    "access": "public",
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 166,
    "kind": "external",
    "name": "Liftoff",
    "externalLink": "https://github.com/js-cli/js-liftoff",
    "memberof": "src/typedef/external.js",
    "static": true,
    "longname": "src/typedef/external.js~Liftoff",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 167,
    "kind": "typedef",
    "name": "Liftoff.Environment",
    "memberof": "src/typedef/external.js",
    "static": true,
    "longname": "src/typedef/external.js~Liftoff.Environment",
    "access": "public",
    "description": "A {@link Liftoff} environment.",
    "properties": [
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": false,
        "name": "cwd",
        "description": "The resulting working directory."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "configPath",
        "description": "Path to the config file found."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "configBase",
        "description": "The directory the config file is in."
      },
      {
        "nullable": null,
        "types": [
          "String"
        ],
        "spread": false,
        "optional": true,
        "name": "modulePath",
        "description": "Path to the local module found."
      },
      {
        "nullable": null,
        "types": [
          "Object"
        ],
        "spread": false,
        "optional": true,
        "defaultValue": "{}",
        "defaultRaw": {},
        "name": "modulePackage",
        "description": "The parsed package.json of the local module found."
      }
    ],
    "type": {
      "types": [
        "Object"
      ],
      "optional": false,
      "name": "Liftoff.Environment"
    }
  },
  {
    "__docId__": 168,
    "kind": "external",
    "name": "gulplog",
    "externalLink": "https://github.com/gulpjs/gulplog",
    "memberof": "src/typedef/external.js",
    "static": true,
    "longname": "src/typedef/external.js~gulplog",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 169,
    "kind": "external",
    "name": "chalk",
    "externalLink": "https://github.com/chalk/chalk",
    "memberof": "src/typedef/external.js",
    "static": true,
    "longname": "src/typedef/external.js~chalk",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 170,
    "kind": "external",
    "name": "yargs",
    "externalLink": "http://yargs.js.org",
    "memberof": "src/typedef/external.js",
    "static": true,
    "longname": "src/typedef/external.js~yargs",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 171,
    "kind": "external",
    "name": "node.stream.Readable",
    "externalLink": "https://nodejs.org/api/stream.html#stream_class_stream_readable",
    "memberof": "src/typedef/external.js",
    "static": true,
    "longname": "src/typedef/external.js~node.stream.Readable",
    "access": "public",
    "description": ""
  },
  {
    "__docId__": 172,
    "kind": "external",
    "name": "node.ChildProcess",
    "externalLink": "https://nodejs.org/api/child_process.html#child_process_class_childprocess",
    "memberof": "src/typedef/external.js",
    "static": true,
    "longname": "src/typedef/external.js~node.ChildProcess",
    "access": "public",
    "description": ""
  },
  {
    "kind": "index",
    "content": "# atscm-cli\n\n> [atSCM](https://github.com/atSCM/atscm) command line interface\n\n[![CircleCI](https://circleci.com/gh/atSCM/atscm-cli.svg?style=shield)](https://circleci.com/gh/atSCM/atscm-cli)\n[![AppVeyor](https://ci.appveyor.com/api/projects/status/m7dy3spqfg4b2d9f?svg=true&pendingText=windows%20tests%20pending&passingText=windows%20tests%20passing&failingText=windows%20tests%20failing)](https://ci.appveyor.com/project/LukasHechenberger/atscm-cli)\n[![codecov](https://codecov.io/gh/atSCM/atscm-cli/branch/master/graph/badge.svg)](https://codecov.io/gh/atSCM/atscm-cli)\n[![ESDoc](https://atscm.github.io/atscm-cli/badge.svg)](https://atscm.github.io/atscm-cli)\n\n## Installation\n\nThis module can be installed via [npm](https://www.npmjs.com). With [node.js](https://nodejs.org/en/) **version 10 or later** installed run:\n\n```bash\n# Install atscm-cli globally\nnpm install -g atscm-cli\n```\n\n_You may have to run this command as an administrator._\n\n## Basic usage\n\n> You can find more detailed usage information in the [usage manuals](https://atscm.github.io/atscm-cli/manual/CLI.html).\n\n### Creating a new _atSCM_ project\n\nRunning `atscm init` will prompt you for a project name, description, etc. and create a new _atSCM_ project.\n\nFor more detailed information on the init command look at the [manuals](https://atscm.github.io/atscm-cli/manual/index.html).\n\n### Running tasks\n\nRun tasks by typing `atscm [task]` inside a project directory.\n\nLookup the tasks available in [the atscm manuals](https://atscm.github.io/atscm/manual/index.html) or by running `atscm --tasks`.\n\n### Open documentation\n\nRunning `atscm docs` will open the API documentation of the _atscm_ module, running `atscm docs --cli` will open the documentation of this module.\n",
    "longname": "/home/circleci/project/README.md",
    "name": "./README.md",
    "static": true,
    "access": "public"
  },
  {
    "kind": "packageJSON",
    "content": "{\n  \"name\": \"atscm-cli\",\n  \"version\": \"1.1.1\",\n  \"description\": \"atSCM command line interface\",\n  \"main\": \"out/AtSCMCli.js\",\n  \"bin\": {\n    \"atscm\": \"out/bin/atscm.js\"\n  },\n  \"engines\": {\n    \"node\": \">=10.0\"\n  },\n  \"scripts\": {\n    \"compile\": \"babel src --out-dir out --source-maps\",\n    \"compile:watch\": \"npm run compile -- --watch\",\n    \"docs\": \"esdoc -c esdoc.json\",\n    \"docs:coverage\": \"esdoc-coverage -c esdoc.json\",\n    \"format\": \"prettier --ignore-path .gitignore \\\"**/*\\\" \\\"!{{.git,.npm}ignore,CHANGELOG.md}\\\"\",\n    \"lint\": \"eslint --ignore-path .gitignore .\",\n    \"predocs\": \"node docs/helpers/createReadme\",\n    \"prepublishOnly\": \"npm run compile && npm run docs\",\n    \"test\": \"mocha --recursive --require @babel/register \\\"./test/**/*.spec.js\\\" --exit\",\n    \"test:watch\": \"npm test -- --watch --reporter min\",\n    \"test:coverage\": \"NODE_ENV=test nyc --reporter=html npm test\",\n    \"test:docs\": \"blcl docs/api --exclude https://circleci.com/gh/atSCM/atscm-cli\"\n  },\n  \"repository\": {\n    \"type\": \"git\",\n    \"url\": \"git+https://github.com/atSCM/atscm-cli.git\"\n  },\n  \"author\": \"Lukas Hechenberger <lukas.hechenberger@bachmann.info>\",\n  \"license\": \"MIT\",\n  \"bugs\": {\n    \"url\": \"https://github.com/atSCM/atscm-cli/issues\"\n  },\n  \"homepage\": \"https://github.com/atSCM/atscm-cli#readme\",\n  \"devDependencies\": {\n    \"@babel/cli\": \"7.11.6\",\n    \"@babel/core\": \"7.11.6\",\n    \"@babel/preset-env\": \"7.11.5\",\n    \"@babel/register\": \"7.11.5\",\n    \"@ls-age/bump-version\": \"0.2.1\",\n    \"@ls-age/esdoc-coverage\": \"0.1.6\",\n    \"@ls-age/eslint-config\": \"0.9.2\",\n    \"babel-plugin-istanbul\": \"6.0.0\",\n    \"broken-link-checker-local\": \"0.2.1\",\n    \"codecov\": \"3.7.2\",\n    \"esdoc\": \"1.1.0\",\n    \"esdoc-standard-plugin\": \"1.0.0\",\n    \"eslint\": \"7.9.0\",\n    \"eslint-config-prettier\": \"6.12.0\",\n    \"mocha\": \"8.1.3\",\n    \"mocha-circleci-reporter\": \"0.0.3\",\n    \"nyc\": \"15.1.0\",\n    \"prettier\": \"2.1.2\",\n    \"proxyquire\": \"1.8.0\",\n    \"rimraf\": \"3.0.2\",\n    \"sinon\": \"9.0.3\",\n    \"through2\": \"4.0.2\",\n    \"unexpected\": \"11.15.0\"\n  },\n  \"dependencies\": {\n    \"axios\": \"0.19.0\",\n    \"chalk\": \"2.4.2\",\n    \"gulp-cli\": \"2.2.0\",\n    \"gulplog\": \"1.0.0\",\n    \"inquirer\": \"5.2.0\",\n    \"interpret\": \"1.2.0\",\n    \"liftoff\": \"2.5.0\",\n    \"open\": \"6.0.0\",\n    \"semver\": \"5.7.1\",\n    \"source-map-support\": \"0.5.16\",\n    \"tildify\": \"1.2.0\",\n    \"update-notifier\": \"2.5.0\",\n    \"which\": \"1.3.1\",\n    \"yargs\": \"11.1.1\"\n  },\n  \"eslintConfig\": {\n    \"parserOptions\": {\n      \"ecmaVersion\": 2018\n    },\n    \"extends\": [\n      \"@ls-age\",\n      \"prettier\"\n    ],\n    \"rules\": {\n      \"compat/compat\": \"off\"\n    }\n  },\n  \"nyc\": {\n    \"all\": true,\n    \"include\": [\n      \"src/**/*.js\"\n    ],\n    \"require\": [\n      \"@babel/register\"\n    ],\n    \"sourceMap\": false,\n    \"instrument\": false,\n    \"check-coverage\": true\n  },\n  \"renovate\": {\n    \"extends\": [\n      \"@ls-age:automergeDev\"\n    ]\n  }\n}\n",
    "longname": "/home/circleci/project/package.json",
    "name": "package.json",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manualIndex",
    "globalIndex": false,
    "content": null,
    "longname": "",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/circleci/project/docs/manual/usage/CLI.md",
    "name": "./docs/manual/usage/CLI.md",
    "content": "# Command line interface\n\n> Please not that this module is **under heavy development**. Anything described in here may change in future versions.\n> For an up-to-date list of commands and options run `atscm --help`.\n\n## Commands\n\n- **`run [tasks...]`** - Runs the specified tasks.\n\n  If no command is specified when running _atscm_, this command will be used as the default, e.g. `atscm push` equals `atscm run push`. Running `atscm --tasks` will list all tasks available.\n\n- **`init`** - Creates a new _atscm_ project.\n- **`config`** - Prints the current project's configuration.\n- **`docs`** - Opens the _atscm_ API documentation in a browser.\n- **`update`** - Checks for _atscm_ updates in the current project and installs a newer version if available. _(since atscm-cli version 0.3)_\n\n## Options _(incomplete)_\n\n> Options available vary on the command used. Run `atscm {command} --help` for a complete list of options.\n\n- **`--help, -h`** - Prints usage information.\n- **`--version, -v`** - Prints the current version.\n- **`--log-level, -L`** - Sets the log level.\n\n  There are multiple log levels available:\n\n  - 0: Silent\n  - 1: Error\n  - 2: Warn\n  - 3: Info (default)\n  - 4: Debug\n\n  Passing `-L` will only print errors, `-LLLL` will print debug information.\n\n### How to pass options\n\nOptions can be passed as regular command line options, e.g. `atscm push --cwd ~/Docs` or `atscm push --cwd=~/Docs`, but they can also be passed as **environment variables**. To do so set environment variables with the uppercase name of the option, prefixed with `ATSCM_`, e.g. `ATSCM_CWD=~/Docs atscm push` on a Unix-based machine or by running `setx ATSCM_CWD \"%USERPROFILE%\\Test\"` under Windows.\n\n**Note:** Using environment variables to set options requires **atscm-cli version >= 0.3**.\n\n### Overriding project configuration\n\nThe project configuration (the _Atviseproject_ module of your project) can also be overridden at runtime.\n\n**Passing overrides by using the `--project` option:**\n\nYou can pass overrides directly by setting the `--project` option, where the path to the value to override is delimited with dots (`.`). E.g. if you want to set the project's opc port to _1234_, pass `--project.port.opc 1234`.\n\n**Passing overrides by setting `ATSCM_PROJECT` environment variables:**\n\nOverrides can also be passed as environment variables, prefixed with `ATSCM_PROJECT__`, where key paths are delimited with a double underscore (`__`). To set the project's opc port as an example, set the environment variable `ATSCM_PROJECT__PORT__OPC` to `1234`.\n\n**Note:** Project configuration overrides require **atscm-cli version >= 0.3** and **atscm version >= 0.4**.\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/circleci/project/docs/manual/usage/API.md",
    "name": "./docs/manual/usage/API.md",
    "content": "# Programmatic usage\n\n> Please note that using the _atscm-cli_ API is an advanced topic.\n>\n> **It's recommended to use the [command line interface](usage/CLI.html) whenever possible.**\n\n## ES6 JavaScript\n\nThe code provided in this document is written in [ES2015 JavaScript](http://babeljs.io/learn-es2015/).\n\nYou will have to transpile it (e.g with [Babel](http://babeljs.io)) in order to get it running.\n\n## Creating a Cli instance\n\nBasically, the [AtSCMCli](../../class/src/AtSCMCli.js~AtSCMCli.html) class can be used just like any other class:\n\n```javascript\nimport AtSCMCli from 'atscm-cli';\n\nconst cli = new AtSCMCli();\n```\n\nAs stated in the [API reference](../../api/class/src/AtSCMCli.js~AtSCMCli.html#instance-constructor-constructor) the constructor takes any arguments the [command line interface](usage/CLI.html) can handle. E.g. running\n\n```javascript\nimport AtSCMCli from 'atscm-cli';\n\nconst cli = new AtSCMCli(['--version']);\ncli.launch();\n```\n\nwill print the version, just as if we ran the _atscm-cli_ from the command line.\n\nThe main difference between API and command line usage is, that **exceptions are not handled**. You'll have to do that yourself:\n\n```javascript\nimport AtSCMCli from 'atscm-cli';\n\nnew AtSCMCli(['--version'])\n  .launch() // Note: AtSCMCli#launch returns a Promise\n  .then(() => console.log('success!'))\n  .catch((err) => console.error(`Oops! An error occured: ${err.message}`));\n```\n\n---\n\nPlease refer to [AtSCMCli's class reference](../../class/src/AtSCMCli.js~AtSCMCli.html) in order to see all methods and properties available.\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/circleci/project/.github/CONTRIBUTING.md",
    "name": "./.github/CONTRIBUTING.md",
    "content": "# Contributing\n\nContributions are welcome.\n\n## Code quality control\n\n> All files inside this project are automatically built, linted and tested by [CircleCI](https://circleci.com/gh/atSCM/atscm).\n\nBuilds will only pass if they meet the following criteria:\n\n- **No ESLint errors:** We use [ESLint](http://eslint.org) to lint our entire JavaScript code. The config used is [eslint-config-lsage](https://www.npmjs.com/package/eslint-config-lsage). Any lint errors will cause the build to fail.\n- **Test coverage >= 90%:** We use [istanbul](https://gotwarlost.github.io/istanbul/) to validate test coverage is at least 90 percent. Any commits not covered by tests will cause the build to fail.\n- **Documentation coverage >= 90%:** Our source code is documented using [ESDoc](https://esdoc.org). We will only merge if your contribution is documented as well.\n\n## Setting up the development environment\n\n> In order to meet out coding guideline it's very useful to have your development environment set up right.\n\n### Linting files\n\nYou can lint all source files by running `npm run lint`. Although most IDEs support running it directly in the editor:\n\n**Jetbrains Webstorm**\n\n[Webstorm](https://www.jetbrains.com/webstorm/) has built-in support for ESLint. Check out [their documentation](https://www.jetbrains.com/help/webstorm/2016.3/eslint.html) to set it up.\n\n**Atom**\n\n[Atom](https://atom.io) has several packages that provide support for inline ESLint validation. We recommend you to use [linter-eslint](https://atom.io/packages/linter-eslint).\n\n### Running tests\n\nOur [mocha](https://mochajs.org) tests can be run by calling `npm test`. If you want the tests to be run right after you saved your changes, then run `npm run test:watch`.\n\nTest coverage can be checked by running `npm run test:coverage`.\n\n### Creating API documentation\n\nRun `npm run docs` to create [ESDoc](https://esdoc.org) API documentation.\n\n## Providing fixes / adding features\n\nTake the following steps:\n\n- Create a new branch / fork of the **[beta branch](https://github.com/LukasHechenberger/utils-test/tree/beta)**, which is our development branch\n- Make your changes\n- Make sure [CI tests](https://circleci.com/gh/LukasHechenberger/workflows/utils-test) pass\n- Send a pull request to merge back to _beta_\n\nOnce we reviewed your changes, we'll merge your pull request.\n\n> **Merge strategy (Maintainers only)**\n>\n> - Accepted changes from fix/feature branches **should always be squash-merged** to beta.\n> - Once beta is stable **create a regular merge commit** to merge back to master.\n> - After merging to master, changes should be synced back to the beta branch. To do so, run:\n>   ```bash\n>   git checkout beta\n>   git fetch\n>   git rebase origin/master\n>   # Solve conflicts if any, accepting changes from master\n>   git commit -m 'chore: Update from master'\n>   git push\n>   ```\n\n<!-- TODO: Add steps for creating good issues -->\n<!-- TODO: Add links to documentation and manuals -->\n",
    "static": true,
    "access": "public"
  },
  {
    "kind": "manual",
    "longname": "/home/circleci/project/CHANGELOG.md",
    "name": "./CHANGELOG.md",
    "content": "<a name=\"1.1.1\"></a>\n## 1.1.1 (2020-04-05)\n\n\n### Bug Fixes\n\n* Print command help with '-h' option ([#180](https://github.com/atSCM/atscm-cli/issues/180)) ([ae2c4e8](https://github.com/atSCM/atscm-cli/commits/ae2c4e8))\n\n\n\n\n<a name=\"1.1.0\"></a>\n# 1.1.0 (2020-04-05)\n\n\n### Features\n\n* Print atvise server version if available ([#179](https://github.com/atSCM/atscm-cli/issues/179)) ([d3b74c8](https://github.com/atSCM/atscm-cli/commits/d3b74c8))\n\n\n\n\n<a name=\"1.0.0\"></a>\n# 1.0.0 (2020-03-30)\n\n\n### Chores\n\n* **package:** Update babel ([#175](https://github.com/atSCM/atscm-cli/issues/175)) ([e80c0ab](https://github.com/atSCM/atscm-cli/commits/e80c0ab))\n\n\n### BREAKING CHANGES\n\n* **package:** Requires node v10 or above\n\n\n\n\n<a name=\"0.9.0\"></a>\n# 0.9.0 (2019-12-04)\n\n\n### Bug Fixes\n\n* **docs:** Open specific browser if specified ([#162](https://github.com/atSCM/atscm-cli/issues/162)) ([c4d6197](https://github.com/atSCM/atscm-cli/commits/c4d6197))\n\n\n### Features\n\n* **docs:** Use new remote docs ([#163](https://github.com/atSCM/atscm-cli/issues/163)) ([a101e8c](https://github.com/atSCM/atscm-cli/commits/a101e8c))\n\n\n\n\n<a name=\"0.8.2\"></a>\n## 0.8.2 (2019-06-21)\n\n\n### Bug Fixes\n\n* Better error messages for failed requires ([#145](https://github.com/atSCM/atscm-cli/issues/145)) ([e3a63f2](https://github.com/atSCM/atscm-cli/commits/e3a63f2))\n* **package:** Update insecure dependencies ([#146](https://github.com/atSCM/atscm-cli/issues/146)) ([47dd413](https://github.com/atSCM/atscm-cli/commits/47dd413))\n\n\n### Reverts\n\n* chore: Release 0.8.2 ([#147](https://github.com/atSCM/atscm-cli/issues/147)) ([d60b9c8](https://github.com/atSCM/atscm-cli/commits/d60b9c8))\n\n\n\n\n<a name=\"0.8.1\"></a>\n## 0.8.1 (2019-06-01)\n\n\n### Bug Fixes\n\n* **package:** Update dependency axios to ^0.19.0 ([#140](https://github.com/atSCM/atscm-cli/issues/140)) ([93d2c4c](https://github.com/atSCM/atscm-cli/commits/93d2c4c))\n\n\n\n\n<a name=\"0.8.0\"></a>\n# 0.8.0 (2019-05-21)\n\n\n### Features\n\n* **init:** Add '--yes' and '--link' options ([#138](https://github.com/atSCM/atscm-cli/issues/138)) ([d18dcf6](https://github.com/atSCM/atscm-cli/commits/d18dcf6))\n\n\n\n\n<a name=\"0.7.1\"></a>\n## 0.7.1 (2019-03-08)\n\n\n### Bug Fixes\n\n* **init:** Allow rollup-bundled atscm module ([#95](https://github.com/atSCM/atscm-cli/issues/95)) ([3a0059a](https://github.com/atSCM/atscm-cli/commits/3a0059a))\n\n\n\n\n<a name=\"0.7.0\"></a>\n# 0.7.0 (2018-09-27)\n\n\n### Features\n\n* Allow flags in run tasks ([#87](https://github.com/atSCM/atscm-cli/issues/87)) ([4d14f29](https://github.com/atSCM/atscm-cli/commits/4d14f29))\n\n\n\n\n<a name=\"0.6.1\"></a>\n## 0.6.1 (2018-09-27)\n\n\n### Bug Fixes\n\n* Support babel v7 ([#86](https://github.com/atSCM/atscm-cli/issues/86)) ([1bbf3bd](https://github.com/atSCM/atscm-cli/commits/1bbf3bd))\n\n\n\n\n<a name=\"0.6.0\"></a>\n# 0.6.0 (2018-07-23)\n\n\n### Features\n\n* Use the `--debug` flag to start debug mode ([#85](https://github.com/atSCM/atscm-cli/issues/85)) ([a929e0e](https://github.com/atSCM/atscm-cli/commits/a929e0e))\n\n\n\n\n<a name=\"0.5.0\"></a>\n# 0.5.0 (2018-06-17)\n\n\n### Features\n\n* Continue task execution if `--continue` is used ([#82](https://github.com/atSCM/atscm-cli/issues/82)) ([92ff5a6](https://github.com/atSCM/atscm-cli/commits/92ff5a6))\n\n\n\n\n<a name=\"0.4.0\"></a>\n# 0.4.0 (2018-02-09)\n\n\n### Features\n\n* Update nodejs to version 8 ([#70](https://github.com/atSCM/atscm-cli/issues/70)) ([ad62730](https://github.com/atSCM/atscm-cli/commits/ad62730))\n\n\n\n\n<a name=\"0.3.6\"></a>\n## 0.3.6 (2018-01-25)\n\n\n### Bug Fixes\n\n* Allow running without tasks ([#64](https://github.com/atSCM/atscm-cli/issues/64)) ([d102534](https://github.com/atSCM/atscm-cli/commits/d102534)), closes [#62](https://github.com/atSCM/atscm-cli/issues/62)\n\n\n\n\n<a name=\"0.3.5\"></a>\n## 0.3.5 (2018-01-25)\n\n\n### Bug Fixes\n\n* **npm:** Update package-lock ([11142f2](https://github.com/atSCM/atscm-cli/commits/11142f2))\n* Disable yargs' version ([8878643](https://github.com/atSCM/atscm-cli/commits/8878643))\n* Update yargs to prevent missing option argument error ([c852fb5](https://github.com/atSCM/atscm-cli/commits/c852fb5))\n* Use non-alpha gulp-cli ([d36c25d](https://github.com/atSCM/atscm-cli/commits/d36c25d))\n\n\n\n\n<a name=\"0.3.4\"></a>\n## 0.3.4 (2018-01-25)\n\n\n### Bug Fixes\n\n* **package:** Force gulp-cli version 1.2.2 ([244f9e6](https://github.com/atSCM/atscm-cli/commits/244f9e6)), closes [#52](https://github.com/atSCM/atscm-cli/issues/52)\n\n\n\n\n<a name=\"0.3.3\"></a>\n## 0.3.3 (2018-01-25)\n\n\n### Bug Fixes\n\n* Downgrade gulp-cli ([4e61612](https://github.com/atSCM/atscm-cli/commits/4e61612)), closes [#41](https://github.com/atSCM/atscm-cli/issues/41)\n\n\n### Reverts\n\n* fix(package): update gulp-cli to version 2.0.0 ([#41](https://github.com/atSCM/atscm-cli/issues/41)) ([7ae6b1f](https://github.com/atSCM/atscm-cli/commits/7ae6b1f))\n\n\n\n\n<a name=\"0.3.2\"></a>\n## 0.3.2 (2018-01-08)\n\n\n### Bug Fixes\n\n* **package:** update gulp-cli to version 2.0.0 ([#41](https://github.com/atSCM/atscm-cli/issues/41)) ([f4415a9](https://github.com/atSCM/atscm-cli/commits/f4415a9))\n* **package:** update inquirer to version 5.0.0 ([#42](https://github.com/atSCM/atscm-cli/issues/42)) ([09c576c](https://github.com/atSCM/atscm-cli/commits/09c576c))\n* Rename tasks option to prevent name conflict with gulp-cli 2.0 ([4d138be](https://github.com/atSCM/atscm-cli/commits/4d138be))\n\n\n\n\n<a name=\"0.3.1\"></a>\n## 0.3.1 (2017-12-19)\n\n\n### Bug Fixes\n\n* Host API docs on github pages ([#38](https://github.com/atSCM/atscm-cli/issues/38)) ([951f588](https://github.com/atSCM/atscm-cli/commits/951f588)), closes [#36](https://github.com/atSCM/atscm-cli/issues/36)\n* Use [@ls-age](https://github.com/ls-age)/bump-version for automated releases ([#37](https://github.com/atSCM/atscm-cli/issues/37)) ([c556a15](https://github.com/atSCM/atscm-cli/commits/c556a15)), closes [#34](https://github.com/atSCM/atscm-cli/issues/34)\n\n\n\n\n<a name=\"0.3.0\"></a>\n# 0.3.0 (2017-11-06)\n\n\n### Bug Fixes\n\n* **ci:** Deploy master and beta only ([63393b8](https://github.com/atSCM/atscm-cli/commits/63393b8))\n* **docs:** Document deployment process ([#29](https://github.com/atSCM/atscm-cli/issues/29)) ([782d826](https://github.com/atSCM/atscm-cli/commits/782d826))\n\n\n### Features\n\n* **ci:** Automated release ([#27](https://github.com/atSCM/atscm-cli/issues/27)) ([ff9f82a](https://github.com/atSCM/atscm-cli/commits/ff9f82a))\n* **init:** Use `--beta` flag to update prerelease versions ([#31](https://github.com/atSCM/atscm-cli/issues/31)) ([7f8b9ed](https://github.com/atSCM/atscm-cli/commits/7f8b9ed))\n\n\n\n\n<a name=\"0.2.4\"></a>\n## 0.2.4 (2017-10-17)\n\n\n### Bug Fixes\n\n* **init:** Always run in current working directory unless `--cwd` is passed ([#16](https://github.com/atSCM/atscm-cli/issues/16)) ([4beabdf](https://github.com/atSCM/atscm-cli/commits/4beabdf)), closes [#14](https://github.com/atSCM/atscm-cli/issues/14)\n* **run:** Allow `atscm --tasks` with current gulp-cli version ([#24](https://github.com/atSCM/atscm-cli/issues/24)) ([1820107](https://github.com/atSCM/atscm-cli/commits/1820107))\n\n\n### Features\n\n* **docs:** Open hosted API documentation with `--remote` option passed ([#18](https://github.com/atSCM/atscm-cli/issues/18)) ([2cb4ca7](https://github.com/atSCM/atscm-cli/commits/2cb4ca7)), closes [#13](https://github.com/atSCM/atscm-cli/issues/13)\n* **init:** Override existing files using the `--force` option ([#15](https://github.com/atSCM/atscm-cli/issues/15)) ([ccd4abf](https://github.com/atSCM/atscm-cli/commits/ccd4abf)), closes [#10](https://github.com/atSCM/atscm-cli/issues/10)\n* Add source maps and beta flag ([#26](https://github.com/atSCM/atscm-cli/issues/26)) ([bf7e748](https://github.com/atSCM/atscm-cli/commits/bf7e748))\n* Automatically check for package updates ([#21](https://github.com/atSCM/atscm-cli/issues/21)) ([19afc94](https://github.com/atSCM/atscm-cli/commits/19afc94)), closes [#19](https://github.com/atSCM/atscm-cli/issues/19)\n* Pass options by setting env vars named `ATSCM_{options}={value}` ([#23](https://github.com/atSCM/atscm-cli/issues/23)) ([4f23e91](https://github.com/atSCM/atscm-cli/commits/4f23e91))\n* Update atscm by running `atscm update` ([bdce6f3](https://github.com/atSCM/atscm-cli/commits/bdce6f3)), closes [#5](https://github.com/atSCM/atscm-cli/issues/5)\n* Update atscm by running `atscm update` ([6adfa60](https://github.com/atSCM/atscm-cli/commits/6adfa60))\n\n\n\n\n<a name=\"0.2.2\"></a>\n## 0.2.2 (2017-03-15)\n\n\n### Bug Fixes\n\n* **Logger:** Use windows-friendly stdout API ([2693bbd](https://github.com/atSCM/atscm-cli/commits/2693bbd))\n* **test:** Use windows-friendly paths ([3ff7018](https://github.com/atSCM/atscm-cli/commits/3ff7018))\n\n\n\n\n<a name=\"0.2.1\"></a>\n## 0.2.1 (2017-03-13)\n\n\n### Bug Fixes\n\n* **Logger:** Print as single message ([a251179](https://github.com/atSCM/atscm-cli/commits/a251179))\n\n\n\n\n<a name=\"0.2.0\"></a>\n# 0.2.0 (2017-03-13)\n\n\n### Features\n\n* **Logger:** Ignore empty lines when using #pipeLastLine ([f3d34cc](https://github.com/atSCM/atscm-cli/commits/f3d34cc))\n* **Logger:** Print to own Console instance ([b77c0eb](https://github.com/atSCM/atscm-cli/commits/b77c0eb))\n\n\n\n\n<a name=\"0.1.2\"></a>\n## 0.1.2 (2017-02-22)\n\n\n### Bug Fixes\n\n* **test:** Fixed invalid test paths ([055edf5](https://github.com/atSCM/atscm-cli/commits/055edf5))\n\n\n\n\n<a name=\"0.1.1\"></a>\n## 0.1.1 (2017-02-21)\n\n\n\n\n<a name=\"0.1.0\"></a>\n# 0.1.0 (2017-02-21)\n\n\n\n",
    "static": true,
    "access": "public"
  },
  {
    "__docId__": 173,
    "kind": "testFile",
    "name": "test/AtSCMCli.spec.js",
    "content": "import { join } from 'path';\nimport expect from 'unexpected';\nimport { spy, stub } from 'sinon';\nimport proxyquire from 'proxyquire';\nimport colors from 'chalk';\nimport Liftoff from 'liftoff';\nimport { LogFormat } from '../src/lib/util/Logger';\nimport UsageError from '../src/lib/error/UsageError';\nimport Command from '../src/lib/cli/Command';\nimport pkg from '../package.json';\n\nconst LoggerSpy = {\n  debug: spy(),\n  info: spy(),\n  warn: spy(),\n  error: spy(),\n  applyOptions: spy(),\n  colors,\n  format: LogFormat,\n};\n\nconst AtSCMCli = proxyquire('../src/AtSCMCli', {\n  './lib/util/Logger': {\n    _esModule: true,\n    default: LoggerSpy,\n  },\n}).default;\n\n/** @test {AtSCMCli} */\ndescribe('AtSCMCli', function () {\n  beforeEach(() => {\n    LoggerSpy.debug.resetHistory();\n    LoggerSpy.info.resetHistory();\n    LoggerSpy.warn.resetHistory();\n    LoggerSpy.error.resetHistory();\n    LoggerSpy.applyOptions.resetHistory();\n  });\n\n  /** @test {AtSCMCli#constructor} */\n  describe('#constructor', function () {\n    it('should throw UsageError with invalid options', function () {\n      expect(() => new AtSCMCli(['--cwd']), 'to throw');\n    });\n\n    it('should create an instance of Liftoff', function () {\n      expect(new AtSCMCli(), 'to be a', Liftoff);\n    });\n\n    it('should not add run argument if valid command is given', function () {\n      expect(new AtSCMCli(['docs'])._argv, 'to equal', ['docs']);\n    });\n\n    it('should not add run argument if --help is given', function () {\n      expect(new AtSCMCli(['--help'])._argv, 'to equal', ['--help']);\n    });\n\n    it('should not add run argument if --version is given', function () {\n      expect(new AtSCMCli(['--version'])._argv, 'to equal', ['--version']);\n    });\n\n    it('should add run argument if no command is given', function () {\n      expect(new AtSCMCli()._argv, 'to equal', ['run']);\n    });\n\n    it('should set runViaCli', function () {\n      // runViaCli is always set to false as we don't run this test from the command line directly.\n      expect(new AtSCMCli().runViaCli, 'to equal', false);\n    });\n  });\n\n  /** @test {AtSCMCli#_exposeOverride} */\n  describe('#_exposeOverride', function () {\n    it('should set single options', function () {\n      AtSCMCli.prototype._exposeOverride({ test: 13 }, 'test', 'TEST_ENVS__');\n\n      expect(process.env.TEST_ENVS__TEST, 'to be defined');\n      expect(process.env.TEST_ENVS__TEST, 'to equal', '13');\n    });\n\n    it('should set object options', function () {\n      AtSCMCli.prototype._exposeOverride({ test: { another: 13 } }, 'test', 'TEST_ENVS__');\n\n      expect(process.env.TEST_ENVS__TEST__ANOTHER, 'to be defined');\n      expect(process.env.TEST_ENVS__TEST__ANOTHER, 'to equal', '13');\n    });\n\n    it('should use default base', function () {\n      AtSCMCli.prototype._exposeOverride({ test: 13 }, 'test');\n\n      expect(process.env.ATSCM_PROJECT__TEST, 'to be defined');\n      expect(process.env.ATSCM_PROJECT__TEST, 'to equal', '13');\n\n      delete process.env.ATSCM_PROJECT__TEST;\n    });\n  });\n\n  /** @test {AtSCMCli#parseArguments} */\n  describe('#parseArguments', function () {\n    const unknownArgCli = new AtSCMCli(['config', '--unknown']);\n    const unknownRunArgCli = new AtSCMCli(['run', '--unknown']);\n\n    it('should fail with UsageError with an unknown argument', function () {\n      return expect(unknownArgCli.parseArguments(), 'when rejected', 'to be a', UsageError);\n    });\n\n    it('should report unknown arguments for strict commands', function () {\n      return expect(\n        unknownArgCli.parseArguments(),\n        'when rejected',\n        'to have message',\n        'Unknown argument: unknown'\n      );\n    });\n\n    it('should not report unknown arguments for non-strict commands', function () {\n      return expect(unknownRunArgCli.parseArguments(), 'when fulfilled', 'to have properties', {\n        unknown: true,\n      });\n    });\n\n    it('should return options with valid arguments', function () {\n      return expect(\n        new AtSCMCli(['docs', '--cli']).parseArguments(),\n        'when fulfilled',\n        'to have properties',\n        { _: ['docs'], cli: true }\n      );\n    });\n\n    it('should set AtSCMCli#options with valid arguments', function () {\n      const cli = new AtSCMCli(['docs', '--cli']);\n\n      return cli.parseArguments().then((opts) => expect(cli.options, 'to equal', opts));\n    });\n\n    it('should set AtSCMCli#command with valid command', function () {\n      const cli = new AtSCMCli(['docs', '--cli']);\n\n      return cli.parseArguments().then(() => expect(cli.command.name, 'to equal', 'docs'));\n    });\n\n    it('should expose project options as environment variables', function () {\n      const cli = new AtSCMCli(['--tasks', '--project.test', 'test']);\n\n      return cli\n        .parseArguments()\n        .then(() => expect(process.env.ATSCM_PROJECT__TEST, 'to equal', 'test'));\n    });\n  });\n\n  /** @test {AtSCMCli#getEnvironment} */\n  describe('#getEnvironment', function () {\n    beforeEach(() => spy(Liftoff.prototype, 'launch'));\n    afterEach(() => Liftoff.prototype.launch.restore());\n\n    const cli = new AtSCMCli([\n      '--cwd',\n      'test/fixtures',\n      '--projectfile',\n      'test/fixtures/Atviseproject.js',\n    ]);\n\n    it('should call Liftoff#launch with cwd and projectfile option', function () {\n      return cli.getEnvironment().then(() => {\n        expect(Liftoff.prototype.launch.calledOnce, 'to be', true);\n        expect(Liftoff.prototype.launch.lastCall.args[0], 'to equal', {\n          cwd: 'test/fixtures',\n          configPath: 'test/fixtures/Atviseproject.js',\n        });\n      });\n    });\n\n    it('should set AtSCMCli#environment', function () {\n      return cli.getEnvironment().then((env) => {\n        expect(cli.environment, 'to be defined');\n        expect(cli.environment, 'to equal', env);\n        expect(cli.environment, 'to have keys', [\n          'cwd',\n          'configPath',\n          'configBase',\n          'modulePath',\n          'modulePackage',\n        ]);\n      });\n    });\n\n    context('when not looking up parent directories', function () {\n      it('should resolve to initial cwd', function () {\n        return new AtSCMCli()\n          .getEnvironment(false)\n          .then((env) => expect(env.cwd, 'to equal', process.cwd()));\n      });\n\n      const projChildDir = join('test/fixtures/node_modules');\n\n      it('should resolve to initial cwd in project child directories', function () {\n        return new AtSCMCli(['--cwd', projChildDir])\n          .getEnvironment(false)\n          .then((env) => expect(env.cwd, 'to end with', projChildDir));\n      });\n\n      it('should ignore --projectfile option', function () {\n        return new AtSCMCli([\n          '--cwd',\n          projChildDir,\n          '--projectfile',\n          join(projChildDir, '../Atviseproject.js'),\n        ])\n          .getEnvironment(false)\n          .then((env) => expect(env.cwd, 'to end with', projChildDir));\n      });\n    });\n  });\n\n  /** @test {AtSCMCli#requireEnvironment} */\n  describe('#requireEnvironment', function () {\n    it('should fail without local module', function () {\n      return expect(\n        new AtSCMCli().requireEnvironment(),\n        'to be rejected with',\n        /Local .* not found/\n      );\n    });\n\n    it('should return environment if successful', function () {\n      const cli = new AtSCMCli(['--cwd', 'test/fixtures']);\n\n      return expect(\n        cli.requireEnvironment(),\n        'when fulfilled',\n        'to have values satisfying',\n        'not to be falsy'\n      );\n    });\n  });\n\n  /** @test {AtSCMCli#getVersion} */\n  describe('#getVersion', function () {\n    it('should return cli version without local module', function () {\n      return expect(new AtSCMCli().getVersion(), 'when fulfilled', 'to equal', {\n        cli: pkg.version,\n      });\n    });\n\n    it('should even return cli version with invalid cwd', function () {\n      return expect(\n        new AtSCMCli(['--cwd', 'invalid/path']).getVersion(),\n        'when fulfilled',\n        'to equal',\n        { cli: pkg.version }\n      );\n    });\n\n    it('should return local version with local module', function () {\n      return expect(new AtSCMCli(['--cwd', 'test/fixtures']).getVersion(), 'to be fulfilled with', {\n        cli: pkg.version,\n        local: 'latest',\n      });\n    });\n  });\n\n  /** @test {AtSCMCli#printVersion} */\n  describe('#printVersion', function () {\n    it('should print cli version only without local module', function () {\n      return expect(new AtSCMCli().printVersion(), 'to be fulfilled').then(() => {\n        expect(LoggerSpy.info.calledOnce, 'to be', true);\n        expect(LoggerSpy.info.lastCall.args[0], 'to match', /atscm-cli/);\n        expect(LoggerSpy.info.lastCall.args[1], 'to match', new RegExp(pkg.version));\n      });\n    });\n\n    it('should print cli, local and atserver version with local module', async function () {\n      await expect(new AtSCMCli(['--cwd', 'test/fixtures']).printVersion(), 'to be fulfilled');\n\n      expect(LoggerSpy.info.calledThrice, 'to be', true);\n\n      expect(LoggerSpy.info.getCall(1).args, 'to satisfy', [/atscm/, /latest/]);\n      expect(LoggerSpy.info.getCall(2).args, 'to satisfy', [/atvise server/, /3.4.0/]);\n    });\n  });\n\n  /** @test {AtSCMCli#runCommand} */\n  describe('#runCommand', function () {\n    it('should print version if --version is used', function () {\n      const cli = new AtSCMCli(['--version']);\n      cli.options.version = true;\n\n      spy(cli, 'printVersion');\n\n      return cli.runCommand().then(() => {\n        expect(cli.printVersion.calledOnce, 'to be', true);\n      });\n    });\n\n    it('should run command if used', function () {\n      const command = new Command('cmd', 'Just testing');\n      stub(command, 'run');\n      const cli = new AtSCMCli(['--cwd', 'test/fixtures']);\n      cli.command = command;\n\n      return cli.runCommand().then(() => {\n        expect(command.run.calledOnce, 'to be true');\n      });\n    });\n\n    it('should warn if no command is used', function () {\n      const cli = new AtSCMCli(['--cwd', 'test/fixtures']);\n\n      return cli.runCommand().then(() => {\n        expect(LoggerSpy.warn.calledOnce, 'to be', true);\n        expect(LoggerSpy.warn.lastCall.args[0], 'to contain', 'No command specified');\n      });\n    });\n  });\n\n  /** @test {AtSCMCli#launch} */\n  describe('#launch', function () {\n    it('should call AtSCMCli#parseArguments', function () {\n      const cli = new AtSCMCli();\n      spy(cli, 'parseArguments');\n      stub(cli, 'runCommand').callsFake(() => Promise.resolve(true));\n\n      return cli.launch().then(() => {\n        expect(cli.runCommand.calledOnce, 'to be true');\n        expect(cli.parseArguments.calledOnce, 'to be', true);\n      });\n    });\n\n    it('should handle all exceptions if run via cli', function () {\n      const cli = new AtSCMCli();\n      cli.runViaCli = true;\n      stub(cli, 'runCommand').callsFake(() => Promise.reject(new Error('test')));\n\n      return expect(cli.launch(), 'to be fulfilled');\n    });\n\n    it('should report help on usage errors if run via cli', function () {\n      const cli = new AtSCMCli(['--unknown']);\n      cli.runViaCli = true;\n\n      return expect(cli.launch(), 'to be fulfilled');\n    });\n\n    it('should start debug mode with `--debug` option', function () {\n      const cli = new AtSCMCli(['--debug']);\n      cli.runViaCli = true;\n\n      return expect(cli.launch(), 'to be fulfilled').then(() =>\n        expect(process.env.ATSCM_DEBUG, 'to equal', 'true')\n      );\n    });\n\n    context('with ATSCM_DEBUG env var', function () {\n      before(() => {\n        process.env.ATSCM_DEBUG = 'yes';\n      });\n      after(() => {\n        process.env.ATSCM_DEBUG = undefined;\n      });\n\n      it('should start debug mode', function () {\n        const cli = new AtSCMCli(['--debug']);\n        cli.runViaCli = true;\n\n        return expect(cli.launch(), 'to be fulfilled').then(() =>\n          expect(process.env.ATSCM_DEBUG, 'to equal', 'yes')\n        );\n      });\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/circleci/project/test/AtSCMCli.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 174,
    "kind": "test",
    "name": "describe0",
    "testId": 0,
    "memberof": "test/AtSCMCli.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0",
    "access": null,
    "description": "AtSCMCli",
    "lineNumber": 30,
    "testTargets": [
      "AtSCMCli"
    ]
  },
  {
    "__docId__": 175,
    "kind": "test",
    "name": "describe1",
    "testId": 1,
    "memberof": "test/AtSCMCli.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe1",
    "access": null,
    "description": "#constructor",
    "lineNumber": 40,
    "testTargets": [
      "AtSCMCli#constructor"
    ]
  },
  {
    "__docId__": 176,
    "kind": "test",
    "name": "it2",
    "testId": 2,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe1.it2",
    "access": null,
    "description": "should throw UsageError with invalid options",
    "lineNumber": 41
  },
  {
    "__docId__": 177,
    "kind": "test",
    "name": "it3",
    "testId": 3,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe1.it3",
    "access": null,
    "description": "should create an instance of Liftoff",
    "lineNumber": 45
  },
  {
    "__docId__": 178,
    "kind": "test",
    "name": "it4",
    "testId": 4,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe1.it4",
    "access": null,
    "description": "should not add run argument if valid command is given",
    "lineNumber": 49
  },
  {
    "__docId__": 179,
    "kind": "test",
    "name": "it5",
    "testId": 5,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe1.it5",
    "access": null,
    "description": "should not add run argument if --help is given",
    "lineNumber": 53
  },
  {
    "__docId__": 180,
    "kind": "test",
    "name": "it6",
    "testId": 6,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe1.it6",
    "access": null,
    "description": "should not add run argument if --version is given",
    "lineNumber": 57
  },
  {
    "__docId__": 181,
    "kind": "test",
    "name": "it7",
    "testId": 7,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe1.it7",
    "access": null,
    "description": "should add run argument if no command is given",
    "lineNumber": 61
  },
  {
    "__docId__": 182,
    "kind": "test",
    "name": "it8",
    "testId": 8,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe1",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe1.it8",
    "access": null,
    "description": "should set runViaCli",
    "lineNumber": 65
  },
  {
    "__docId__": 183,
    "kind": "test",
    "name": "describe9",
    "testId": 9,
    "memberof": "test/AtSCMCli.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe9",
    "access": null,
    "description": "#_exposeOverride",
    "lineNumber": 72,
    "testTargets": [
      "AtSCMCli#_exposeOverride"
    ]
  },
  {
    "__docId__": 184,
    "kind": "test",
    "name": "it10",
    "testId": 10,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe9",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe9.it10",
    "access": null,
    "description": "should set single options",
    "lineNumber": 73
  },
  {
    "__docId__": 185,
    "kind": "test",
    "name": "it11",
    "testId": 11,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe9",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe9.it11",
    "access": null,
    "description": "should set object options",
    "lineNumber": 80
  },
  {
    "__docId__": 186,
    "kind": "test",
    "name": "it12",
    "testId": 12,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe9",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe9.it12",
    "access": null,
    "description": "should use default base",
    "lineNumber": 87
  },
  {
    "__docId__": 187,
    "kind": "test",
    "name": "describe13",
    "testId": 13,
    "memberof": "test/AtSCMCli.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe13",
    "access": null,
    "description": "#parseArguments",
    "lineNumber": 98,
    "testTargets": [
      "AtSCMCli#parseArguments"
    ]
  },
  {
    "__docId__": 188,
    "kind": "test",
    "name": "it14",
    "testId": 14,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe13",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe13.it14",
    "access": null,
    "description": "should fail with UsageError with an unknown argument",
    "lineNumber": 102
  },
  {
    "__docId__": 189,
    "kind": "test",
    "name": "it15",
    "testId": 15,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe13",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe13.it15",
    "access": null,
    "description": "should report unknown arguments for strict commands",
    "lineNumber": 106
  },
  {
    "__docId__": 190,
    "kind": "test",
    "name": "it16",
    "testId": 16,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe13",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe13.it16",
    "access": null,
    "description": "should not report unknown arguments for non-strict commands",
    "lineNumber": 115
  },
  {
    "__docId__": 191,
    "kind": "test",
    "name": "it17",
    "testId": 17,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe13",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe13.it17",
    "access": null,
    "description": "should return options with valid arguments",
    "lineNumber": 121
  },
  {
    "__docId__": 192,
    "kind": "test",
    "name": "it18",
    "testId": 18,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe13",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe13.it18",
    "access": null,
    "description": "should set AtSCMCli#options with valid arguments",
    "lineNumber": 130
  },
  {
    "__docId__": 193,
    "kind": "test",
    "name": "it19",
    "testId": 19,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe13",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe13.it19",
    "access": null,
    "description": "should set AtSCMCli#command with valid command",
    "lineNumber": 136
  },
  {
    "__docId__": 194,
    "kind": "test",
    "name": "it20",
    "testId": 20,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe13",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe13.it20",
    "access": null,
    "description": "should expose project options as environment variables",
    "lineNumber": 142
  },
  {
    "__docId__": 195,
    "kind": "test",
    "name": "describe21",
    "testId": 21,
    "memberof": "test/AtSCMCli.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe21",
    "access": null,
    "description": "#getEnvironment",
    "lineNumber": 152,
    "testTargets": [
      "AtSCMCli#getEnvironment"
    ]
  },
  {
    "__docId__": 196,
    "kind": "test",
    "name": "it22",
    "testId": 22,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe21",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe21.it22",
    "access": null,
    "description": "should call Liftoff#launch with cwd and projectfile option",
    "lineNumber": 163
  },
  {
    "__docId__": 197,
    "kind": "test",
    "name": "it23",
    "testId": 23,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe21",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe21.it23",
    "access": null,
    "description": "should set AtSCMCli#environment",
    "lineNumber": 173
  },
  {
    "__docId__": 198,
    "kind": "test",
    "name": "context24",
    "testId": 24,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe21",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe21.context24",
    "access": null,
    "description": "when not looking up parent directories",
    "lineNumber": 187
  },
  {
    "__docId__": 199,
    "kind": "test",
    "name": "it25",
    "testId": 25,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe21.context24",
    "testDepth": 3,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe21.context24.it25",
    "access": null,
    "description": "should resolve to initial cwd",
    "lineNumber": 188
  },
  {
    "__docId__": 200,
    "kind": "test",
    "name": "it26",
    "testId": 26,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe21.context24",
    "testDepth": 3,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe21.context24.it26",
    "access": null,
    "description": "should resolve to initial cwd in project child directories",
    "lineNumber": 196
  },
  {
    "__docId__": 201,
    "kind": "test",
    "name": "it27",
    "testId": 27,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe21.context24",
    "testDepth": 3,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe21.context24.it27",
    "access": null,
    "description": "should ignore --projectfile option",
    "lineNumber": 202
  },
  {
    "__docId__": 202,
    "kind": "test",
    "name": "describe28",
    "testId": 28,
    "memberof": "test/AtSCMCli.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe28",
    "access": null,
    "description": "#requireEnvironment",
    "lineNumber": 216,
    "testTargets": [
      "AtSCMCli#requireEnvironment"
    ]
  },
  {
    "__docId__": 203,
    "kind": "test",
    "name": "it29",
    "testId": 29,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe28",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe28.it29",
    "access": null,
    "description": "should fail without local module",
    "lineNumber": 217
  },
  {
    "__docId__": 204,
    "kind": "test",
    "name": "it30",
    "testId": 30,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe28",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe28.it30",
    "access": null,
    "description": "should return environment if successful",
    "lineNumber": 225
  },
  {
    "__docId__": 205,
    "kind": "test",
    "name": "describe31",
    "testId": 31,
    "memberof": "test/AtSCMCli.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe31",
    "access": null,
    "description": "#getVersion",
    "lineNumber": 238,
    "testTargets": [
      "AtSCMCli#getVersion"
    ]
  },
  {
    "__docId__": 206,
    "kind": "test",
    "name": "it32",
    "testId": 32,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe31",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe31.it32",
    "access": null,
    "description": "should return cli version without local module",
    "lineNumber": 239
  },
  {
    "__docId__": 207,
    "kind": "test",
    "name": "it33",
    "testId": 33,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe31",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe31.it33",
    "access": null,
    "description": "should even return cli version with invalid cwd",
    "lineNumber": 245
  },
  {
    "__docId__": 208,
    "kind": "test",
    "name": "it34",
    "testId": 34,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe31",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe31.it34",
    "access": null,
    "description": "should return local version with local module",
    "lineNumber": 254
  },
  {
    "__docId__": 209,
    "kind": "test",
    "name": "describe35",
    "testId": 35,
    "memberof": "test/AtSCMCli.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe35",
    "access": null,
    "description": "#printVersion",
    "lineNumber": 263,
    "testTargets": [
      "AtSCMCli#printVersion"
    ]
  },
  {
    "__docId__": 210,
    "kind": "test",
    "name": "it36",
    "testId": 36,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe35",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe35.it36",
    "access": null,
    "description": "should print cli version only without local module",
    "lineNumber": 264
  },
  {
    "__docId__": 211,
    "kind": "test",
    "name": "it37",
    "testId": 37,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe35",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe35.it37",
    "access": null,
    "description": "should print cli, local and atserver version with local module",
    "lineNumber": 272
  },
  {
    "__docId__": 212,
    "kind": "test",
    "name": "describe38",
    "testId": 38,
    "memberof": "test/AtSCMCli.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe38",
    "access": null,
    "description": "#runCommand",
    "lineNumber": 283,
    "testTargets": [
      "AtSCMCli#runCommand"
    ]
  },
  {
    "__docId__": 213,
    "kind": "test",
    "name": "it39",
    "testId": 39,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe38",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe38.it39",
    "access": null,
    "description": "should print version if --version is used",
    "lineNumber": 284
  },
  {
    "__docId__": 214,
    "kind": "test",
    "name": "it40",
    "testId": 40,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe38",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe38.it40",
    "access": null,
    "description": "should run command if used",
    "lineNumber": 295
  },
  {
    "__docId__": 215,
    "kind": "test",
    "name": "it41",
    "testId": 41,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe38",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe38.it41",
    "access": null,
    "description": "should warn if no command is used",
    "lineNumber": 306
  },
  {
    "__docId__": 216,
    "kind": "test",
    "name": "describe42",
    "testId": 42,
    "memberof": "test/AtSCMCli.spec.js~describe0",
    "testDepth": 1,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe42",
    "access": null,
    "description": "#launch",
    "lineNumber": 317,
    "testTargets": [
      "AtSCMCli#launch"
    ]
  },
  {
    "__docId__": 217,
    "kind": "test",
    "name": "it43",
    "testId": 43,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe42",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe42.it43",
    "access": null,
    "description": "should call AtSCMCli#parseArguments",
    "lineNumber": 318
  },
  {
    "__docId__": 218,
    "kind": "test",
    "name": "it44",
    "testId": 44,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe42",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe42.it44",
    "access": null,
    "description": "should handle all exceptions if run via cli",
    "lineNumber": 329
  },
  {
    "__docId__": 219,
    "kind": "test",
    "name": "it45",
    "testId": 45,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe42",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe42.it45",
    "access": null,
    "description": "should report help on usage errors if run via cli",
    "lineNumber": 337
  },
  {
    "__docId__": 220,
    "kind": "test",
    "name": "it46",
    "testId": 46,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe42",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe42.it46",
    "access": null,
    "description": "should start debug mode with `--debug` option",
    "lineNumber": 344
  },
  {
    "__docId__": 221,
    "kind": "test",
    "name": "context47",
    "testId": 47,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe42",
    "testDepth": 2,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe42.context47",
    "access": null,
    "description": "with ATSCM_DEBUG env var",
    "lineNumber": 353
  },
  {
    "__docId__": 222,
    "kind": "test",
    "name": "it48",
    "testId": 48,
    "memberof": "test/AtSCMCli.spec.js~describe0.describe42.context47",
    "testDepth": 3,
    "static": true,
    "longname": "test/AtSCMCli.spec.js~describe0.describe42.context47.it48",
    "access": null,
    "description": "should start debug mode",
    "lineNumber": 361
  },
  {
    "__docId__": 223,
    "kind": "testFile",
    "name": "test/bin/atscm.spec.js",
    "content": "import expect from 'unexpected';\nimport proxyquire from 'proxyquire';\n\ndescribe('bin', function () {\n  class StubCli {\n    constructor(...args) {\n      if (!StubCli.constructorCalled) {\n        StubCli.constructorCalled = 0;\n      }\n\n      StubCli.constructorCalled++;\n      StubCli.constructorCalledWith = args;\n    }\n\n    launch(...args) {\n      if (!StubCli.launchCalled) {\n        StubCli.launchCalled = 0;\n      }\n\n      StubCli.launchCalled++;\n      StubCli.launchCalledWith = args;\n    }\n  }\n\n  proxyquire('../../src/bin/atscm', {\n    '../AtSCMCli': {\n      __esModule: true,\n      default: StubCli,\n    },\n  });\n\n  it('should call launch', function () {\n    require('../../src/bin/atscm'); // eslint-disable-line global-require\n\n    expect(StubCli.constructorCalled, 'to equal', 1);\n    expect(StubCli.constructorCalledWith, 'to equal', [process.argv.slice(2)]);\n    expect(StubCli.launchCalled, 'to equal', 1);\n    expect(StubCli.launchCalledWith, 'to equal', []);\n  });\n});\n",
    "static": true,
    "longname": "/home/circleci/project/test/bin/atscm.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 224,
    "kind": "test",
    "name": "describe49",
    "testId": 49,
    "memberof": "test/bin/atscm.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/bin/atscm.spec.js~describe49",
    "access": null,
    "description": "bin",
    "lineNumber": 4
  },
  {
    "__docId__": 225,
    "kind": "test",
    "name": "it50",
    "testId": 50,
    "memberof": "test/bin/atscm.spec.js~describe49",
    "testDepth": 1,
    "static": true,
    "longname": "test/bin/atscm.spec.js~describe49.it50",
    "access": null,
    "description": "should call launch",
    "lineNumber": 32
  },
  {
    "__docId__": 226,
    "kind": "testFile",
    "name": "test/cli/commands/Config.spec.js",
    "content": "import { join } from 'path';\nimport expect from 'unexpected';\nimport { stub } from 'sinon';\nimport ConfigCommand from '../../../src/cli/commands/Config';\nimport Logger from '../../../src/lib/util/Logger';\n\n/** @test {ConfigCommand} */\ndescribe('ConfigCommand', function () {\n  /** @test {ConfigCommand#run} */\n  describe('#run', function () {\n    beforeEach(function () {\n      stub(Logger, 'info');\n      stub(Logger, 'warn');\n    });\n\n    afterEach(function () {\n      Logger.info.restore();\n      Logger.warn.restore();\n    });\n\n    const command = new ConfigCommand('config', 'Print configuration.');\n\n    context('when overrides are available (atscm >= v0.4)', function () {\n      it(\"should print local module's ProjectConfig class\", function () {\n        command.run({\n          options: {\n            project: {},\n          },\n          environment: {\n            modulePath: join(__dirname, '../../fixtures/node_modules/atscm/fake/v0-4.js'),\n            configPath: join(__dirname, '../../fixtures/Atviseproject.js'),\n          },\n        });\n\n        expect(Logger.info.calledOnce, 'to be', true);\n        expect(Logger.info.lastCall.args[0], 'to match', new RegExp('^Configuration at'));\n      });\n    });\n\n    context('when overrides are not available (atscm < v0.4)', function () {\n      it(\"should print local module's Atviseproject class\", function () {\n        command.run({\n          options: {\n            project: {},\n          },\n          environment: {\n            modulePath: join(__dirname, '../../fixtures/node_modules/atscm/fake/v0-3.js'),\n            configPath: join(__dirname, '../../fixtures/Atviseproject.js'),\n          },\n        });\n\n        expect(Logger.info.callCount, 'to equal', 2);\n        expect(Logger.info.firstCall.args[0], 'to match', new RegExp('^Configuration at'));\n      });\n\n      it('should warn that overrides are not available', function () {\n        command.run({\n          options: {\n            project: {},\n          },\n          environment: {\n            modulePath: join(__dirname, '../../fixtures/node_modules/atscm/fake/v0-3.js'),\n            configPath: join(__dirname, '../../fixtures/Atviseproject.js'),\n          },\n        });\n\n        expect(Logger.warn.calledOnce, 'to be', true);\n        expect(\n          Logger.warn.lastCall.args[0],\n          'to contain',\n          'Overriding runtime configuration requires atscm version >= 0.4'\n        );\n      });\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/circleci/project/test/cli/commands/Config.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 227,
    "kind": "test",
    "name": "describe51",
    "testId": 51,
    "memberof": "test/cli/commands/Config.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/cli/commands/Config.spec.js~describe51",
    "access": null,
    "description": "ConfigCommand",
    "lineNumber": 8,
    "testTargets": [
      "ConfigCommand"
    ]
  },
  {
    "__docId__": 228,
    "kind": "test",
    "name": "describe52",
    "testId": 52,
    "memberof": "test/cli/commands/Config.spec.js~describe51",
    "testDepth": 1,
    "static": true,
    "longname": "test/cli/commands/Config.spec.js~describe51.describe52",
    "access": null,
    "description": "#run",
    "lineNumber": 10,
    "testTargets": [
      "ConfigCommand#run"
    ]
  },
  {
    "__docId__": 229,
    "kind": "test",
    "name": "context53",
    "testId": 53,
    "memberof": "test/cli/commands/Config.spec.js~describe51.describe52",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Config.spec.js~describe51.describe52.context53",
    "access": null,
    "description": "when overrides are available (atscm >= v0.4)",
    "lineNumber": 23
  },
  {
    "__docId__": 230,
    "kind": "test",
    "name": "it54",
    "testId": 54,
    "memberof": "test/cli/commands/Config.spec.js~describe51.describe52.context53",
    "testDepth": 3,
    "static": true,
    "longname": "test/cli/commands/Config.spec.js~describe51.describe52.context53.it54",
    "access": null,
    "description": "should print local module's ProjectConfig class",
    "lineNumber": 24
  },
  {
    "__docId__": 231,
    "kind": "test",
    "name": "context55",
    "testId": 55,
    "memberof": "test/cli/commands/Config.spec.js~describe51.describe52",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Config.spec.js~describe51.describe52.context55",
    "access": null,
    "description": "when overrides are not available (atscm < v0.4)",
    "lineNumber": 40
  },
  {
    "__docId__": 232,
    "kind": "test",
    "name": "it56",
    "testId": 56,
    "memberof": "test/cli/commands/Config.spec.js~describe51.describe52.context55",
    "testDepth": 3,
    "static": true,
    "longname": "test/cli/commands/Config.spec.js~describe51.describe52.context55.it56",
    "access": null,
    "description": "should print local module's Atviseproject class",
    "lineNumber": 41
  },
  {
    "__docId__": 233,
    "kind": "test",
    "name": "it57",
    "testId": 57,
    "memberof": "test/cli/commands/Config.spec.js~describe51.describe52.context55",
    "testDepth": 3,
    "static": true,
    "longname": "test/cli/commands/Config.spec.js~describe51.describe52.context55.it57",
    "access": null,
    "description": "should warn that overrides are not available",
    "lineNumber": 56
  },
  {
    "__docId__": 234,
    "kind": "testFile",
    "name": "test/cli/commands/Docs.spec.js",
    "content": "import { join } from 'path';\nimport expect from 'unexpected';\nimport { spy } from 'sinon';\nimport proxyquire from 'proxyquire';\n\nconst openSpy = spy();\nconst DocsCommand = proxyquire('../../../src/cli/commands/Docs', {\n  open: openSpy,\n}).default;\n\n/** @test {DocsCommand} */\ndescribe('DocsCommand', function () {\n  const command = new DocsCommand('docs', 'Open documentation.');\n\n  /** @test {DocsCommand#localDocsPath} */\n  describe('#localDocsPath', function () {\n    it('should be local api docs by default', function () {\n      expect(\n        command.localDocsPath({\n          options: {},\n          environment: {\n            modulePath: '/path/to/package.json',\n          },\n        }),\n        'to equal',\n        join('/path/docs/api/index.html')\n      );\n    });\n\n    it('should be cli api docs with --cli option', function () {\n      expect(\n        command.localDocsPath({\n          options: { cli: true },\n        }),\n        'to equal',\n        join(__dirname, '../../../docs/api/index.html')\n      );\n    });\n  });\n\n  /** @test {DocsCommand#remoteDocsUrl} */\n  describe('#remoteDocsUrl', function () {\n    it('should return path to atscm docs by default', function () {\n      expect(\n        command.remoteDocsUrl({\n          options: {},\n          environment: { modulePackage: { version: '1.2.3' } },\n        }),\n        'to equal',\n        'https://atscm.github.io/from-cli/?version=1.2.3'\n      );\n    });\n\n    it('should return path to atscm-cli docs with `--cli` option passed', function () {\n      expect(\n        command.remoteDocsUrl({ options: { cli: true } }),\n        'to equal',\n        `${DocsCommand.RemoteDocsBase}atscm-cli`\n      );\n    });\n  });\n\n  /** @test {DocsCommand#addressToOpen} */\n  describe('#addressToOpen', function () {\n    it('should return local path if not remote option was passed', function () {\n      const { address, isPath } = command.addressToOpen({\n        options: {},\n        environment: { modulePath: '/path/to/package.json' },\n      });\n\n      expect(address, 'to equal', join('/path/docs/api/index.html'));\n      expect(isPath, 'to equal', true);\n    });\n\n    it('should return local path if remote option was set to false', function () {\n      const { isPath } = command.addressToOpen({\n        options: { remote: false },\n        environment: { modulePath: '/path/to/package.json' },\n      });\n\n      expect(isPath, 'to equal', true);\n    });\n\n    it('should return remote url if remote was set to true', function () {\n      const { isPath } = command.addressToOpen({\n        options: { remote: true },\n        environment: { modulePath: '/path/to/package.json', modulePackage: {} },\n      });\n\n      expect(isPath, 'to equal', false);\n    });\n\n    it('should return remote url if cli.env.modulePath is undefined', function () {\n      const { isPath } = command.addressToOpen({\n        options: { remote: true },\n        environment: {},\n      });\n\n      expect(isPath, 'to equal', false);\n    });\n\n    it('should return local path if cli option was set', function () {\n      const { isPath } = command.addressToOpen({\n        options: { cli: true },\n        environment: {},\n      });\n\n      expect(isPath, 'to equal', true);\n    });\n  });\n\n  /** @test {DocsCommand#run} */\n  describe('#run', function () {\n    beforeEach(() => openSpy.resetHistory());\n\n    it('should open local api docs by default', function () {\n      return command\n        .run({\n          options: {},\n          environment: {\n            modulePath: '/path/to/package.json',\n          },\n        })\n        .then(() => {\n          expect(openSpy.calledOnce, 'to be', true);\n          expect(openSpy.lastCall.args[0], 'to equal', join('/path/docs/api/index.html'));\n          expect(openSpy.lastCall.args[1], 'to be undefined');\n        });\n    });\n\n    it('should open cli api docs with --cli option', function () {\n      return command\n        .run({\n          options: {\n            cli: true,\n          },\n        })\n        .then(() => {\n          expect(openSpy.calledOnce, 'to be', true);\n          expect(\n            openSpy.lastCall.args[0],\n            'to equal',\n            join(__dirname, '../../../docs/api/index.html')\n          );\n          expect(openSpy.lastCall.args[1], 'to be undefined');\n        });\n    });\n\n    it('should open in specific browser with --browser option', function () {\n      return command\n        .run({\n          options: {\n            cli: false,\n            browser: 'custombrowser',\n          },\n          environment: {\n            modulePath: '/path/to/package.json',\n          },\n        })\n        .then(() => {\n          expect(openSpy.calledOnce, 'to be', true);\n          expect(openSpy.lastCall.args[0], 'to equal', join('/path/docs/api/index.html'));\n          expect(openSpy.lastCall.args[1], 'to equal', { app: 'custombrowser' });\n        });\n    });\n\n    it('should call AtSCMCli#getEnvironment if no environment was passed', function () {\n      const cli = {\n        options: {\n          cli: false,\n        },\n        getEnvironment() {\n          return Promise.resolve(\n            (this.environment = {\n              modulePath: '/path/to/package.json',\n            })\n          );\n        },\n      };\n\n      spy(cli, 'getEnvironment');\n\n      return command.run(cli).then(() => {\n        expect(cli.getEnvironment.calledOnce, 'to be', true);\n        expect(openSpy.calledOnce, 'to be', true);\n        expect(openSpy.lastCall.args[0], 'to equal', join('/path/docs/api/index.html'));\n      });\n    });\n\n    it('should open remote docs with --remote option passed', function () {\n      return command\n        .run({\n          options: {\n            remote: true,\n          },\n          environment: {\n            modulePath: '/path/to/package.json',\n          },\n        })\n        .then(() => {\n          expect(openSpy.calledOnce, 'to be', true);\n          expect(openSpy.lastCall.args[0], 'to begin with', DocsCommand.RemoteDocsBase);\n        });\n    });\n  });\n\n  /** @test {DocsCommand#requiresEnvironment} */\n  describe('#requiresEnvironment', function () {\n    it('should return false if `--cli` is used', function () {\n      expect(command.requiresEnvironment({ options: { cli: true } }), 'to be', false);\n    });\n\n    it('should return false if `--remote`', function () {\n      expect(command.requiresEnvironment({ options: { remote: true } }), 'to be', false);\n    });\n\n    it('should return false if no `--remote` option is passed', function () {\n      expect(command.requiresEnvironment({ options: {} }), 'to be', false);\n    });\n\n    it('should return false if `--no-remote` and `--cli` option is passed', function () {\n      expect(\n        command.requiresEnvironment({\n          options: {\n            remote: false,\n            cli: true,\n          },\n        }),\n        'to be',\n        false\n      );\n    });\n\n    it('should return true if `--no-remote` and no `--cli` option is passed', function () {\n      expect(command.requiresEnvironment({ options: { remote: false } }), 'to be', true);\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/circleci/project/test/cli/commands/Docs.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 235,
    "kind": "test",
    "name": "describe58",
    "testId": 58,
    "memberof": "test/cli/commands/Docs.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/cli/commands/Docs.spec.js~describe58",
    "access": null,
    "description": "DocsCommand",
    "lineNumber": 12,
    "testTargets": [
      "DocsCommand"
    ]
  },
  {
    "__docId__": 236,
    "kind": "test",
    "name": "describe59",
    "testId": 59,
    "memberof": "test/cli/commands/Docs.spec.js~describe58",
    "testDepth": 1,
    "static": true,
    "longname": "test/cli/commands/Docs.spec.js~describe58.describe59",
    "access": null,
    "description": "#localDocsPath",
    "lineNumber": 16,
    "testTargets": [
      "DocsCommand#localDocsPath"
    ]
  },
  {
    "__docId__": 237,
    "kind": "test",
    "name": "it60",
    "testId": 60,
    "memberof": "test/cli/commands/Docs.spec.js~describe58.describe59",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Docs.spec.js~describe58.describe59.it60",
    "access": null,
    "description": "should be local api docs by default",
    "lineNumber": 17
  },
  {
    "__docId__": 238,
    "kind": "test",
    "name": "it61",
    "testId": 61,
    "memberof": "test/cli/commands/Docs.spec.js~describe58.describe59",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Docs.spec.js~describe58.describe59.it61",
    "access": null,
    "description": "should be cli api docs with --cli option",
    "lineNumber": 30
  },
  {
    "__docId__": 239,
    "kind": "test",
    "name": "describe62",
    "testId": 62,
    "memberof": "test/cli/commands/Docs.spec.js~describe58",
    "testDepth": 1,
    "static": true,
    "longname": "test/cli/commands/Docs.spec.js~describe58.describe62",
    "access": null,
    "description": "#remoteDocsUrl",
    "lineNumber": 42,
    "testTargets": [
      "DocsCommand#remoteDocsUrl"
    ]
  },
  {
    "__docId__": 240,
    "kind": "test",
    "name": "it63",
    "testId": 63,
    "memberof": "test/cli/commands/Docs.spec.js~describe58.describe62",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Docs.spec.js~describe58.describe62.it63",
    "access": null,
    "description": "should return path to atscm docs by default",
    "lineNumber": 43
  },
  {
    "__docId__": 241,
    "kind": "test",
    "name": "it64",
    "testId": 64,
    "memberof": "test/cli/commands/Docs.spec.js~describe58.describe62",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Docs.spec.js~describe58.describe62.it64",
    "access": null,
    "description": "should return path to atscm-cli docs with `--cli` option passed",
    "lineNumber": 54
  },
  {
    "__docId__": 242,
    "kind": "test",
    "name": "describe65",
    "testId": 65,
    "memberof": "test/cli/commands/Docs.spec.js~describe58",
    "testDepth": 1,
    "static": true,
    "longname": "test/cli/commands/Docs.spec.js~describe58.describe65",
    "access": null,
    "description": "#addressToOpen",
    "lineNumber": 64,
    "testTargets": [
      "DocsCommand#addressToOpen"
    ]
  },
  {
    "__docId__": 243,
    "kind": "test",
    "name": "it66",
    "testId": 66,
    "memberof": "test/cli/commands/Docs.spec.js~describe58.describe65",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Docs.spec.js~describe58.describe65.it66",
    "access": null,
    "description": "should return local path if not remote option was passed",
    "lineNumber": 65
  },
  {
    "__docId__": 244,
    "kind": "test",
    "name": "it67",
    "testId": 67,
    "memberof": "test/cli/commands/Docs.spec.js~describe58.describe65",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Docs.spec.js~describe58.describe65.it67",
    "access": null,
    "description": "should return local path if remote option was set to false",
    "lineNumber": 75
  },
  {
    "__docId__": 245,
    "kind": "test",
    "name": "it68",
    "testId": 68,
    "memberof": "test/cli/commands/Docs.spec.js~describe58.describe65",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Docs.spec.js~describe58.describe65.it68",
    "access": null,
    "description": "should return remote url if remote was set to true",
    "lineNumber": 84
  },
  {
    "__docId__": 246,
    "kind": "test",
    "name": "it69",
    "testId": 69,
    "memberof": "test/cli/commands/Docs.spec.js~describe58.describe65",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Docs.spec.js~describe58.describe65.it69",
    "access": null,
    "description": "should return remote url if cli.env.modulePath is undefined",
    "lineNumber": 93
  },
  {
    "__docId__": 247,
    "kind": "test",
    "name": "it70",
    "testId": 70,
    "memberof": "test/cli/commands/Docs.spec.js~describe58.describe65",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Docs.spec.js~describe58.describe65.it70",
    "access": null,
    "description": "should return local path if cli option was set",
    "lineNumber": 102
  },
  {
    "__docId__": 248,
    "kind": "test",
    "name": "describe71",
    "testId": 71,
    "memberof": "test/cli/commands/Docs.spec.js~describe58",
    "testDepth": 1,
    "static": true,
    "longname": "test/cli/commands/Docs.spec.js~describe58.describe71",
    "access": null,
    "description": "#run",
    "lineNumber": 113,
    "testTargets": [
      "DocsCommand#run"
    ]
  },
  {
    "__docId__": 249,
    "kind": "test",
    "name": "it72",
    "testId": 72,
    "memberof": "test/cli/commands/Docs.spec.js~describe58.describe71",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Docs.spec.js~describe58.describe71.it72",
    "access": null,
    "description": "should open local api docs by default",
    "lineNumber": 116
  },
  {
    "__docId__": 250,
    "kind": "test",
    "name": "it73",
    "testId": 73,
    "memberof": "test/cli/commands/Docs.spec.js~describe58.describe71",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Docs.spec.js~describe58.describe71.it73",
    "access": null,
    "description": "should open cli api docs with --cli option",
    "lineNumber": 131
  },
  {
    "__docId__": 251,
    "kind": "test",
    "name": "it74",
    "testId": 74,
    "memberof": "test/cli/commands/Docs.spec.js~describe58.describe71",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Docs.spec.js~describe58.describe71.it74",
    "access": null,
    "description": "should open in specific browser with --browser option",
    "lineNumber": 149
  },
  {
    "__docId__": 252,
    "kind": "test",
    "name": "it75",
    "testId": 75,
    "memberof": "test/cli/commands/Docs.spec.js~describe58.describe71",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Docs.spec.js~describe58.describe71.it75",
    "access": null,
    "description": "should call AtSCMCli#getEnvironment if no environment was passed",
    "lineNumber": 167
  },
  {
    "__docId__": 253,
    "kind": "test",
    "name": "it76",
    "testId": 76,
    "memberof": "test/cli/commands/Docs.spec.js~describe58.describe71",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Docs.spec.js~describe58.describe71.it76",
    "access": null,
    "description": "should open remote docs with --remote option passed",
    "lineNumber": 190
  },
  {
    "__docId__": 254,
    "kind": "test",
    "name": "describe77",
    "testId": 77,
    "memberof": "test/cli/commands/Docs.spec.js~describe58",
    "testDepth": 1,
    "static": true,
    "longname": "test/cli/commands/Docs.spec.js~describe58.describe77",
    "access": null,
    "description": "#requiresEnvironment",
    "lineNumber": 208,
    "testTargets": [
      "DocsCommand#requiresEnvironment"
    ]
  },
  {
    "__docId__": 255,
    "kind": "test",
    "name": "it78",
    "testId": 78,
    "memberof": "test/cli/commands/Docs.spec.js~describe58.describe77",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Docs.spec.js~describe58.describe77.it78",
    "access": null,
    "description": "should return false if `--cli` is used",
    "lineNumber": 209
  },
  {
    "__docId__": 256,
    "kind": "test",
    "name": "it79",
    "testId": 79,
    "memberof": "test/cli/commands/Docs.spec.js~describe58.describe77",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Docs.spec.js~describe58.describe77.it79",
    "access": null,
    "description": "should return false if `--remote`",
    "lineNumber": 213
  },
  {
    "__docId__": 257,
    "kind": "test",
    "name": "it80",
    "testId": 80,
    "memberof": "test/cli/commands/Docs.spec.js~describe58.describe77",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Docs.spec.js~describe58.describe77.it80",
    "access": null,
    "description": "should return false if no `--remote` option is passed",
    "lineNumber": 217
  },
  {
    "__docId__": 258,
    "kind": "test",
    "name": "it81",
    "testId": 81,
    "memberof": "test/cli/commands/Docs.spec.js~describe58.describe77",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Docs.spec.js~describe58.describe77.it81",
    "access": null,
    "description": "should return false if `--no-remote` and `--cli` option is passed",
    "lineNumber": 221
  },
  {
    "__docId__": 259,
    "kind": "test",
    "name": "it82",
    "testId": 82,
    "memberof": "test/cli/commands/Docs.spec.js~describe58.describe77",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Docs.spec.js~describe58.describe77.it82",
    "access": null,
    "description": "should return true if `--no-remote` and no `--cli` option is passed",
    "lineNumber": 234
  },
  {
    "__docId__": 260,
    "kind": "testFile",
    "name": "test/cli/commands/Init.spec.js",
    "content": "import { readdir, writeFileSync } from 'fs';\nimport { join } from 'path';\nimport Emitter from 'events';\nimport expect from 'unexpected';\nimport { spy, stub } from 'sinon';\nimport proxyquire from 'proxyquire';\nimport inTmpDir from '../../helpers/inTmpDir';\nimport atscmPkg from '../../fixtures/node_modules/atscm/package.json';\n\nclass StubPipe extends Emitter {}\n\nclass StubProcess extends Emitter {\n  constructor() {\n    super();\n\n    this.stdout = new StubPipe();\n    this.stderr = new StubPipe();\n  }\n\n  close(code) {\n    this.emit('close', code);\n  }\n}\n\nconst stubModulePath = join(__dirname, 'stub.js');\n\nfunction createImportStub(func, noCallThru = true) {\n  return {\n    __esModule: true,\n    default: spy(func),\n    '@noCallThru': noCallThru,\n  };\n}\n\nconst stubProcessEmitter = new Emitter();\nconst spawnStub = spy(() => {\n  const process = new StubProcess();\n\n  stubProcessEmitter.emit('new', process);\n\n  return process;\n});\n\nconst fsStub = {\n  readdir: spy(readdir),\n};\nlet whichStub = createImportStub((name, cb) => cb(null, name));\nconst initStub = createImportStub(() => Promise.resolve());\nconst promptSpy = spy(() => Promise.resolve({}));\nconst stubInitOptions = [{ name: 'test', default: 13 }];\n\nconst InitCommand = proxyquire('../../../src/cli/commands/Init', {\n  fs: fsStub,\n  inquirer: {\n    prompt: promptSpy,\n  },\n  child_process: {\n    __esModule: true,\n    spawn: spawnStub,\n    '@noCallThru': true,\n  },\n  which: whichStub,\n  [join(stubModulePath, '../init/options')]: {\n    __esModule: true,\n    default: stubInitOptions,\n    '@noCallThru': true,\n  },\n  [join(stubModulePath, '../init/init')]: initStub,\n}).default;\n\n/** @test {InitCommand} */\ndescribe('InitCommand', function () {\n  const command = new InitCommand('init', 'Creates a new project.');\n\n  /** @test {InitCommand#checkDirectory} */\n  describe('#checkDirectory', function () {\n    inTmpDir((path) => {\n      it('should fail if directory does not exist', function () {\n        return expect(\n          command.checkDirectory('./not/existant'),\n          'to be rejected with',\n          /does not exist$/\n        );\n      });\n\n      it('should fail if path is not a directory', function () {\n        return expect(\n          command.checkDirectory(join(__dirname, './Init.spec.js')),\n          'to be rejected with',\n          /is not a directory$/\n        );\n      });\n\n      it('should fail if directory is not empty', function () {\n        return expect(command.checkDirectory(__dirname), 'to be rejected with', /is not empty$/);\n      });\n\n      it('should work with empty dir', function () {\n        return expect(command.checkDirectory(path), 'to be fulfilled');\n      });\n\n      it('should work in non-empty dir with overwrite set', function () {\n        writeFileSync(join(path, 'file.txt'), 'data');\n\n        return expect(command.checkDirectory(path, true), 'to be fulfilled');\n      });\n    });\n\n    context('when non-ENOENT and ENOTDIR occurres', function () {\n      const orgReaddir = fsStub.readdir;\n\n      before(() => (fsStub.readdir = spy((path, cb) => cb(new Error('Any other error')))));\n      after(() => (fsStub.readdir = orgReaddir));\n\n      it('should fail with original error', function () {\n        return expect(command.checkDirectory('path'), 'to be rejected with', 'Any other error');\n      });\n    });\n  });\n\n  /** @test {InitCommand#createEmptyPackage} */\n  describe('#createEmptyPackage', function () {\n    inTmpDir((path) => {\n      it('should fail with invalid path', function () {\n        return expect(\n          command.createEmptyPackage('path/that/does/not/exist'),\n          'to be rejected with',\n          /^Unable to create package.json at/\n        );\n      });\n\n      it('should work in empty directory', function () {\n        return expect(command.createEmptyPackage(path), 'to be fulfilled').then(() => {\n          let pkg;\n          // eslint-disable-next-line global-require\n          expect(() => (pkg = require(join(path, 'package.json'))), 'not to throw');\n          expect(pkg, 'to equal', {});\n        });\n      });\n    });\n  });\n\n  /** @test {InitCommand#install} */\n  describe('#install', function () {\n    beforeEach(() => whichStub.default.resetHistory());\n\n    it('should run which for npm', function () {\n      const deps = ['dep1', 'dep2'];\n\n      stubProcessEmitter.once('new', (proc) => {\n        setTimeout(() => proc.close(0), 10);\n      });\n\n      return expect(command.install(stubModulePath, deps), 'to be fulfilled').then(() => {\n        expect(whichStub.default.calledOnce, 'to be', true);\n        expect(whichStub.default.lastCall.args[0], 'to equal', 'npm');\n      });\n    });\n\n    it('should forward errors occuring in npm', function () {\n      const error = new Error('Test');\n\n      stubProcessEmitter.once('new', (proc) => {\n        setTimeout(() => proc.emit('error', error), 10);\n      });\n\n      return expect(command.install(stubModulePath, ['dep']), 'to be rejected with', error);\n    });\n\n    it('should report error if npm fails', function () {\n      const code = Math.round(Math.random() * 100) + 1;\n\n      stubProcessEmitter.once('new', (proc) => {\n        setTimeout(() => proc.close(code), 10);\n      });\n\n      return expect(\n        command.install(stubModulePath, ['dep']),\n        'to be rejected with',\n        `npm install returned code ${code}`\n      );\n    });\n\n    context('when npm is not installed', function () {\n      const orgWhichStub = whichStub.default;\n\n      before(() => (whichStub.default = spy((name, cb) => cb(new Error('A which error')))));\n      after(() => (whichStub.default = orgWhichStub));\n\n      it('should fail', function () {\n        whichStub = spy((name, cb) => cb(new Error('A which error')));\n\n        return expect(\n          command.install(stubModulePath, ['dep']),\n          'to be rejected with',\n          'A which error'\n        );\n      });\n    });\n  });\n\n  /** @test {InitCommand#installLocal} */\n  describe('#installLocal', function () {\n    beforeEach(() => stub(command, 'runNpm').callsFake(() => Promise.resolve(true)));\n    afterEach(() => command.runNpm.restore());\n\n    it('should call InitCommand#install', function () {\n      return expect(command.installLocal(stubModulePath), 'to be fulfilled').then(() => {\n        expect(command.runNpm.calledOnce, 'to be true');\n        expect(command.runNpm.lastCall.args[0], 'to equal', ['install', '--save-dev', 'atscm']);\n        expect(command.runNpm.lastCall.args[1], 'to equal', { cwd: stubModulePath });\n      });\n    });\n\n    it('should install beta version with `useBetaVersion`', function () {\n      return expect(command.installLocal(stubModulePath, { beta: true }), 'to be fulfilled').then(\n        () => {\n          expect(command.runNpm.calledOnce, 'to be true');\n          expect(command.runNpm.lastCall.args[0][2], 'to equal', 'atscm@beta');\n        }\n      );\n    });\n\n    it('should run npm link with `link`', function () {\n      return expect(command.installLocal(stubModulePath, { link: true }), 'to be fulfilled').then(\n        () => {\n          expect(command.runNpm.calledTwice, 'to be true');\n          expect(command.runNpm.lastCall.args[0], 'to equal', ['link', 'atscm']);\n          expect(command.runNpm.lastCall.args[1], 'to equal', { cwd: stubModulePath });\n        }\n      );\n    });\n  });\n\n  /** @test {InitCommand#checkCliVersion} */\n  describe('#checkCliVersion', function () {\n    it('should throw error if version does not match', function () {\n      expect(\n        () =>\n          command.checkCliVersion({\n            modulePackage: {\n              engines: {\n                'atscm-cli': '<0.1.0',\n              },\n            },\n          }),\n        'to throw error',\n        'Invalid atscm-cli version: <0.1.0 required.'\n      );\n    });\n  });\n\n  describe('#getDefaultOptions', function () {\n    it('should return plain value defaults', function () {\n      expect(command.getDefaultOptions([{ name: 'test', default: 13 }]), 'to equal', { test: 13 });\n    });\n\n    it('should return plain value default choices', function () {\n      expect(command.getDefaultOptions([{ name: 'test', choices: [13] }]), 'to equal', {\n        test: 13,\n      });\n    });\n\n    it('should return object value default choices', function () {\n      expect(command.getDefaultOptions([{ name: 'test', choices: [{ value: 13 }] }]), 'to equal', {\n        test: 13,\n      });\n    });\n\n    it('should resolve choices with current value', function () {\n      expect(\n        command.getDefaultOptions([\n          { name: 'test', default: 13 },\n          {\n            name: 'another',\n            choices: (current) => [{ value: current.test * 2 }],\n          },\n        ]),\n        'to equal',\n        { test: 13, another: 26 }\n      );\n    });\n\n    it('should skip options if specified', function () {\n      expect(\n        command.getDefaultOptions([\n          { name: 'test', default: 13 },\n          {\n            name: 'another',\n            when: (current) => current.test === 1,\n          },\n        ]),\n        'to equal',\n        { test: 13 }\n      );\n    });\n  });\n\n  /** @test {InitCommand#getOptions} */\n  describe('#getOptions', function () {\n    beforeEach(() => promptSpy.resetHistory());\n    it('should run inquirer by default', function () {\n      return expect(() => command.getOptions(stubModulePath), 'to be fulfilled').then(() => {\n        expect(promptSpy.calledOnce, 'to be true');\n        expect(promptSpy.lastCall.args[0], 'to be', stubInitOptions);\n      });\n    });\n\n    it('should use defaults with `useDefaults`', function () {\n      return expect(command.getOptions(stubModulePath, { useDefaults: true }), 'to equal', {\n        test: 13,\n      }).then(() => {\n        expect(promptSpy.calledOnce, 'to be false');\n      });\n    });\n  });\n\n  /** @test {InitCommand#writeFiles} */\n  describe('#writeFiles', function () {\n    it('should call local package init script', function () {\n      const options = { test: 123 };\n\n      return expect(command.writeFiles(stubModulePath, options), 'to be fulfilled').then(() => {\n        expect(initStub.default.calledOnce, 'to be', true);\n        expect(initStub.default.lastCall.args[0], 'to be', options);\n      });\n    });\n  });\n\n  /** @test {InitCommand#installDependencies} */\n  describe('#installDependencies', function () {\n    beforeEach(() => stub(command, 'install').callsFake(() => Promise.resolve(true)));\n    afterEach(() => command.install.restore());\n\n    it('should run install with given deps', function () {\n      const deps = ['dep1', 'dep2'];\n\n      return expect(command.installDependencies(stubModulePath, deps), 'to be fulfilled').then(\n        () => {\n          expect(command.install.calledOnce, 'to be true');\n          expect(command.install.lastCall.args[0], 'to equal', stubModulePath);\n          expect(command.install.lastCall.args[1], 'to equal', deps);\n        }\n      );\n    });\n  });\n\n  /** @test {InitCommand#run} */\n  describe('#run', function () {\n    const deps = ['dep1', 'dep2'];\n    const cli = {\n      environment: {\n        cwd: stubModulePath,\n      },\n      options: {\n        force: false,\n      },\n      getEnvironment: spy(() =>\n        Promise.resolve({\n          cwd: stubModulePath,\n          modulePackage: atscmPkg,\n        })\n      ),\n    };\n\n    beforeEach(() => {\n      stub(command, 'checkDirectory').callsFake(() => Promise.resolve());\n      stub(command, 'createEmptyPackage').callsFake(() => Promise.resolve());\n      stub(command, 'installLocal').callsFake(() => Promise.resolve());\n      stub(process, 'chdir');\n      stub(command, 'getOptions').callsFake(() => Promise.resolve());\n      stub(command, 'writeFiles').callsFake(() => Promise.resolve({ dependencies: deps }));\n      stub(command, 'installDependencies').callsFake(() => Promise.resolve());\n    });\n\n    afterEach(() => {\n      command.checkDirectory.restore();\n      command.createEmptyPackage.restore();\n      command.installLocal.restore();\n      process.chdir.restore();\n      command.getOptions.restore();\n      command.writeFiles.restore();\n      command.installDependencies.restore();\n    });\n\n    function expectCalled(method, count = 1) {\n      return expect(command.run(cli), 'to be fulfilled').then(() =>\n        expect(method.callCount, 'to equal', count)\n      );\n    }\n\n    it('should call AtSCMCli#getEnvironment twice', function () {\n      return expectCalled(cli.getEnvironment, 2);\n    });\n\n    it('should not search in parent directories', function () {\n      return expect(command.run(cli), 'to be fulfilled').then(() =>\n        expect(cli.getEnvironment.alwaysCalledWith(false), 'to equal', true)\n      );\n    });\n\n    it('should call InitCommand#createEmptyPackage', function () {\n      return expectCalled(command.createEmptyPackage);\n    });\n\n    it('should call InitCommand#installLocal', function () {\n      return expectCalled(command.installLocal);\n    });\n\n    it('should call process.chdir', function () {\n      return expectCalled(process.chdir);\n    });\n\n    it('should call InitCommand#getOptions', function () {\n      return expectCalled(command.getOptions);\n    });\n\n    it('should call InitCommand#writeFiles', function () {\n      return expectCalled(command.writeFiles);\n    });\n\n    it('should call InitCommand#installDependencies', function () {\n      return expectCalled(command.installDependencies);\n    });\n  });\n\n  /** @test {InitCommand#requiresEnvironment} */\n  describe('#requiresEnvironment', function () {\n    it('should return false', function () {\n      expect(command.requiresEnvironment(), 'to equal', false);\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/circleci/project/test/cli/commands/Init.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 261,
    "kind": "test",
    "name": "describe83",
    "testId": 83,
    "memberof": "test/cli/commands/Init.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83",
    "access": null,
    "description": "InitCommand",
    "lineNumber": 72,
    "testTargets": [
      "InitCommand"
    ]
  },
  {
    "__docId__": 262,
    "kind": "test",
    "name": "describe84",
    "testId": 84,
    "memberof": "test/cli/commands/Init.spec.js~describe83",
    "testDepth": 1,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe84",
    "access": null,
    "description": "#checkDirectory",
    "lineNumber": 76,
    "testTargets": [
      "InitCommand#checkDirectory"
    ]
  },
  {
    "__docId__": 263,
    "kind": "test",
    "name": "it85",
    "testId": 85,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe84",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe84.it85",
    "access": null,
    "description": "should fail if directory does not exist",
    "lineNumber": 78
  },
  {
    "__docId__": 264,
    "kind": "test",
    "name": "it86",
    "testId": 86,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe84",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe84.it86",
    "access": null,
    "description": "should fail if path is not a directory",
    "lineNumber": 86
  },
  {
    "__docId__": 265,
    "kind": "test",
    "name": "it87",
    "testId": 87,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe84",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe84.it87",
    "access": null,
    "description": "should fail if directory is not empty",
    "lineNumber": 94
  },
  {
    "__docId__": 266,
    "kind": "test",
    "name": "it88",
    "testId": 88,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe84",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe84.it88",
    "access": null,
    "description": "should work with empty dir",
    "lineNumber": 98
  },
  {
    "__docId__": 267,
    "kind": "test",
    "name": "it89",
    "testId": 89,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe84",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe84.it89",
    "access": null,
    "description": "should work in non-empty dir with overwrite set",
    "lineNumber": 102
  },
  {
    "__docId__": 268,
    "kind": "test",
    "name": "context90",
    "testId": 90,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe84",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe84.context90",
    "access": null,
    "description": "when non-ENOENT and ENOTDIR occurres",
    "lineNumber": 109
  },
  {
    "__docId__": 269,
    "kind": "test",
    "name": "it91",
    "testId": 91,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe84.context90",
    "testDepth": 3,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe84.context90.it91",
    "access": null,
    "description": "should fail with original error",
    "lineNumber": 115
  },
  {
    "__docId__": 270,
    "kind": "test",
    "name": "describe92",
    "testId": 92,
    "memberof": "test/cli/commands/Init.spec.js~describe83",
    "testDepth": 1,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe92",
    "access": null,
    "description": "#createEmptyPackage",
    "lineNumber": 122,
    "testTargets": [
      "InitCommand#createEmptyPackage"
    ]
  },
  {
    "__docId__": 271,
    "kind": "test",
    "name": "it93",
    "testId": 93,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe92",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe92.it93",
    "access": null,
    "description": "should fail with invalid path",
    "lineNumber": 124
  },
  {
    "__docId__": 272,
    "kind": "test",
    "name": "it94",
    "testId": 94,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe92",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe92.it94",
    "access": null,
    "description": "should work in empty directory",
    "lineNumber": 132
  },
  {
    "__docId__": 273,
    "kind": "test",
    "name": "describe95",
    "testId": 95,
    "memberof": "test/cli/commands/Init.spec.js~describe83",
    "testDepth": 1,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe95",
    "access": null,
    "description": "#install",
    "lineNumber": 144,
    "testTargets": [
      "InitCommand#install"
    ]
  },
  {
    "__docId__": 274,
    "kind": "test",
    "name": "it96",
    "testId": 96,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe95",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe95.it96",
    "access": null,
    "description": "should run which for npm",
    "lineNumber": 147
  },
  {
    "__docId__": 275,
    "kind": "test",
    "name": "it97",
    "testId": 97,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe95",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe95.it97",
    "access": null,
    "description": "should forward errors occuring in npm",
    "lineNumber": 160
  },
  {
    "__docId__": 276,
    "kind": "test",
    "name": "it98",
    "testId": 98,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe95",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe95.it98",
    "access": null,
    "description": "should report error if npm fails",
    "lineNumber": 170
  },
  {
    "__docId__": 277,
    "kind": "test",
    "name": "context99",
    "testId": 99,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe95",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe95.context99",
    "access": null,
    "description": "when npm is not installed",
    "lineNumber": 184
  },
  {
    "__docId__": 278,
    "kind": "test",
    "name": "it100",
    "testId": 100,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe95.context99",
    "testDepth": 3,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe95.context99.it100",
    "access": null,
    "description": "should fail",
    "lineNumber": 190
  },
  {
    "__docId__": 279,
    "kind": "test",
    "name": "describe101",
    "testId": 101,
    "memberof": "test/cli/commands/Init.spec.js~describe83",
    "testDepth": 1,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe101",
    "access": null,
    "description": "#installLocal",
    "lineNumber": 203,
    "testTargets": [
      "InitCommand#installLocal"
    ]
  },
  {
    "__docId__": 280,
    "kind": "test",
    "name": "it102",
    "testId": 102,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe101",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe101.it102",
    "access": null,
    "description": "should call InitCommand#install",
    "lineNumber": 207
  },
  {
    "__docId__": 281,
    "kind": "test",
    "name": "it103",
    "testId": 103,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe101",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe101.it103",
    "access": null,
    "description": "should install beta version with `useBetaVersion`",
    "lineNumber": 215
  },
  {
    "__docId__": 282,
    "kind": "test",
    "name": "it104",
    "testId": 104,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe101",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe101.it104",
    "access": null,
    "description": "should run npm link with `link`",
    "lineNumber": 224
  },
  {
    "__docId__": 283,
    "kind": "test",
    "name": "describe105",
    "testId": 105,
    "memberof": "test/cli/commands/Init.spec.js~describe83",
    "testDepth": 1,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe105",
    "access": null,
    "description": "#checkCliVersion",
    "lineNumber": 236,
    "testTargets": [
      "InitCommand#checkCliVersion"
    ]
  },
  {
    "__docId__": 284,
    "kind": "test",
    "name": "it106",
    "testId": 106,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe105",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe105.it106",
    "access": null,
    "description": "should throw error if version does not match",
    "lineNumber": 237
  },
  {
    "__docId__": 285,
    "kind": "test",
    "name": "describe107",
    "testId": 107,
    "memberof": "test/cli/commands/Init.spec.js~describe83",
    "testDepth": 1,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe107",
    "access": null,
    "description": "#getDefaultOptions",
    "lineNumber": 253
  },
  {
    "__docId__": 286,
    "kind": "test",
    "name": "it108",
    "testId": 108,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe107",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe107.it108",
    "access": null,
    "description": "should return plain value defaults",
    "lineNumber": 254
  },
  {
    "__docId__": 287,
    "kind": "test",
    "name": "it109",
    "testId": 109,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe107",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe107.it109",
    "access": null,
    "description": "should return plain value default choices",
    "lineNumber": 258
  },
  {
    "__docId__": 288,
    "kind": "test",
    "name": "it110",
    "testId": 110,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe107",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe107.it110",
    "access": null,
    "description": "should return object value default choices",
    "lineNumber": 264
  },
  {
    "__docId__": 289,
    "kind": "test",
    "name": "it111",
    "testId": 111,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe107",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe107.it111",
    "access": null,
    "description": "should resolve choices with current value",
    "lineNumber": 270
  },
  {
    "__docId__": 290,
    "kind": "test",
    "name": "it112",
    "testId": 112,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe107",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe107.it112",
    "access": null,
    "description": "should skip options if specified",
    "lineNumber": 284
  },
  {
    "__docId__": 291,
    "kind": "test",
    "name": "describe113",
    "testId": 113,
    "memberof": "test/cli/commands/Init.spec.js~describe83",
    "testDepth": 1,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe113",
    "access": null,
    "description": "#getOptions",
    "lineNumber": 300,
    "testTargets": [
      "InitCommand#getOptions"
    ]
  },
  {
    "__docId__": 292,
    "kind": "test",
    "name": "it114",
    "testId": 114,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe113",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe113.it114",
    "access": null,
    "description": "should run inquirer by default",
    "lineNumber": 302
  },
  {
    "__docId__": 293,
    "kind": "test",
    "name": "it115",
    "testId": 115,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe113",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe113.it115",
    "access": null,
    "description": "should use defaults with `useDefaults`",
    "lineNumber": 309
  },
  {
    "__docId__": 294,
    "kind": "test",
    "name": "describe116",
    "testId": 116,
    "memberof": "test/cli/commands/Init.spec.js~describe83",
    "testDepth": 1,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe116",
    "access": null,
    "description": "#writeFiles",
    "lineNumber": 319,
    "testTargets": [
      "InitCommand#writeFiles"
    ]
  },
  {
    "__docId__": 295,
    "kind": "test",
    "name": "it117",
    "testId": 117,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe116",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe116.it117",
    "access": null,
    "description": "should call local package init script",
    "lineNumber": 320
  },
  {
    "__docId__": 296,
    "kind": "test",
    "name": "describe118",
    "testId": 118,
    "memberof": "test/cli/commands/Init.spec.js~describe83",
    "testDepth": 1,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe118",
    "access": null,
    "description": "#installDependencies",
    "lineNumber": 331,
    "testTargets": [
      "InitCommand#installDependencies"
    ]
  },
  {
    "__docId__": 297,
    "kind": "test",
    "name": "it119",
    "testId": 119,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe118",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe118.it119",
    "access": null,
    "description": "should run install with given deps",
    "lineNumber": 335
  },
  {
    "__docId__": 298,
    "kind": "test",
    "name": "describe120",
    "testId": 120,
    "memberof": "test/cli/commands/Init.spec.js~describe83",
    "testDepth": 1,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe120",
    "access": null,
    "description": "#run",
    "lineNumber": 349,
    "testTargets": [
      "InitCommand#run"
    ]
  },
  {
    "__docId__": 299,
    "kind": "test",
    "name": "it121",
    "testId": 121,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe120",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe120.it121",
    "access": null,
    "description": "should call AtSCMCli#getEnvironment twice",
    "lineNumber": 392
  },
  {
    "__docId__": 300,
    "kind": "test",
    "name": "it122",
    "testId": 122,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe120",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe120.it122",
    "access": null,
    "description": "should not search in parent directories",
    "lineNumber": 396
  },
  {
    "__docId__": 301,
    "kind": "test",
    "name": "it123",
    "testId": 123,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe120",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe120.it123",
    "access": null,
    "description": "should call InitCommand#createEmptyPackage",
    "lineNumber": 402
  },
  {
    "__docId__": 302,
    "kind": "test",
    "name": "it124",
    "testId": 124,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe120",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe120.it124",
    "access": null,
    "description": "should call InitCommand#installLocal",
    "lineNumber": 406
  },
  {
    "__docId__": 303,
    "kind": "test",
    "name": "it125",
    "testId": 125,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe120",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe120.it125",
    "access": null,
    "description": "should call process.chdir",
    "lineNumber": 410
  },
  {
    "__docId__": 304,
    "kind": "test",
    "name": "it126",
    "testId": 126,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe120",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe120.it126",
    "access": null,
    "description": "should call InitCommand#getOptions",
    "lineNumber": 414
  },
  {
    "__docId__": 305,
    "kind": "test",
    "name": "it127",
    "testId": 127,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe120",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe120.it127",
    "access": null,
    "description": "should call InitCommand#writeFiles",
    "lineNumber": 418
  },
  {
    "__docId__": 306,
    "kind": "test",
    "name": "it128",
    "testId": 128,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe120",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe120.it128",
    "access": null,
    "description": "should call InitCommand#installDependencies",
    "lineNumber": 422
  },
  {
    "__docId__": 307,
    "kind": "test",
    "name": "describe129",
    "testId": 129,
    "memberof": "test/cli/commands/Init.spec.js~describe83",
    "testDepth": 1,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe129",
    "access": null,
    "description": "#requiresEnvironment",
    "lineNumber": 428,
    "testTargets": [
      "InitCommand#requiresEnvironment"
    ]
  },
  {
    "__docId__": 308,
    "kind": "test",
    "name": "it130",
    "testId": 130,
    "memberof": "test/cli/commands/Init.spec.js~describe83.describe129",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Init.spec.js~describe83.describe129.it130",
    "access": null,
    "description": "should return false",
    "lineNumber": 429
  },
  {
    "__docId__": 309,
    "kind": "testFile",
    "name": "test/cli/commands/Run.spec.js",
    "content": "import { join } from 'path';\nimport expect from 'unexpected';\nimport { spy } from 'sinon';\nimport proxyquire from 'proxyquire';\n\nconst gulpCli = spy();\nconst RunCommand = proxyquire('../../../src/cli/commands/Run', {\n  'gulp-cli/lib/versioned/^4.0.0/': gulpCli,\n}).default;\n\n/** @test {RunCommand} */\ndescribe('RunCommand', function () {\n  const command = new RunCommand('run', 'Run tasks.');\n\n  /** @test {RunCommand#run} */\n  describe('#run', function () {\n    const cli = {\n      environment: {\n        cwd: __dirname,\n        modulePath: join(__dirname, 'out/index.js'),\n      },\n      options: {\n        task: ['task1', 'task2'],\n        T: 'tasks',\n        tasksJson: 'tasks-json',\n        tasksSimple: 'tasks-simple',\n        continue: 'continue',\n      },\n    };\n\n    afterEach(() => {\n      gulpCli.resetHistory();\n    });\n\n    it('should run gulp-cli', function () {\n      command.run(cli);\n\n      expect(gulpCli.calledOnce, 'to be', true);\n      expect(gulpCli.lastCall.args, 'to contain', {\n        _: ['task1', 'task2'],\n        tasks: 'tasks',\n        tasksSimple: 'tasks-simple',\n        tasksJson: 'tasks-json',\n        continue: 'continue',\n      });\n\n      expect(gulpCli.lastCall.args, 'to contain', {\n        configPath: join(__dirname, 'out/Gulpfile.js'),\n        modulePath: join(__dirname, 'node_modules/gulp'),\n      });\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/circleci/project/test/cli/commands/Run.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 310,
    "kind": "test",
    "name": "describe131",
    "testId": 131,
    "memberof": "test/cli/commands/Run.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/cli/commands/Run.spec.js~describe131",
    "access": null,
    "description": "RunCommand",
    "lineNumber": 12,
    "testTargets": [
      "RunCommand"
    ]
  },
  {
    "__docId__": 311,
    "kind": "test",
    "name": "describe132",
    "testId": 132,
    "memberof": "test/cli/commands/Run.spec.js~describe131",
    "testDepth": 1,
    "static": true,
    "longname": "test/cli/commands/Run.spec.js~describe131.describe132",
    "access": null,
    "description": "#run",
    "lineNumber": 16,
    "testTargets": [
      "RunCommand#run"
    ]
  },
  {
    "__docId__": 312,
    "kind": "test",
    "name": "it133",
    "testId": 133,
    "memberof": "test/cli/commands/Run.spec.js~describe131.describe132",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Run.spec.js~describe131.describe132.it133",
    "access": null,
    "description": "should run gulp-cli",
    "lineNumber": 35
  },
  {
    "__docId__": 313,
    "kind": "testFile",
    "name": "test/cli/commands/Update.spec.js",
    "content": "import expect from 'unexpected';\nimport { stub } from 'sinon';\nimport proxyquire from 'proxyquire';\n\nconst get = stub().resolves({ data: { latest: '0.3.0', beta: '0.4.0-beta.3' } });\nconst run = stub().resolves(`+ atscm@0.3.0\nupdated 1 package and moved 3 packages in 16.652s`);\n\nconst UpdateCommand = proxyquire('../../../src/cli/commands/Update', {\n  axios: { get },\n  '../../lib/util/ExternalCommand': {\n    default: {\n      run,\n    },\n  },\n}).default;\n\n/** @test {UpdateCommand} */\ndescribe('UpdateCommand', function () {\n  beforeEach(function () {\n    get.resetHistory();\n    run.resetHistory();\n  });\n\n  /** @test {UpdateCommand#getLatestVersion} */\n  describe('#getLatestVersion', function () {\n    it('should call npm api', function () {\n      return expect(\n        UpdateCommand.prototype.getLatestVersion(),\n        'to be fulfilled with',\n        '0.3.0'\n      ).then(() => expect(get.calledOnce, 'to be', true));\n    });\n\n    it('should return beta versions with `useBetaRelease`', function () {\n      return expect(UpdateCommand.prototype.getLatestVersion(true), 'to be fulfilled')\n        .then((version) => expect(version, 'to match', /.*-beta.[0-9]+/))\n        .then(() => expect(get.calledOnce, 'to be', true));\n    });\n  });\n\n  /** @test {UpdateCommand#updateNeeded} */\n  describe('#updateNeeded', function () {\n    it('should return false if latest is older than current version', function () {\n      return expect(UpdateCommand.prototype.updateNeeded('0.1.0', '0.2.0'), 'to be', false);\n    });\n\n    it('should return false if latest equals current version', function () {\n      return expect(UpdateCommand.prototype.updateNeeded('0.2.0', '0.2.0'), 'to be', false);\n    });\n\n    it('should return latest version if latest is newer than current version', function () {\n      return expect(UpdateCommand.prototype.updateNeeded('0.3.0', '0.2.0'), 'to be', '0.3.0');\n    });\n  });\n\n  /** @test {UpdateCommand#update} */\n  describe('#update', function () {\n    it('should run npm install', function () {\n      return expect(\n        UpdateCommand.prototype.update({\n          environment: {\n            cwd: 'test cwd',\n          },\n        }),\n        'to be fulfilled'\n      )\n        .then(() => expect(run.calledOnce, 'to be', true))\n        .then(() =>\n          expect(run.lastCall.args, 'to equal', [\n            'npm',\n            ['install', '--save-dev', 'atscm@latest'],\n            {\n              spawn: {\n                cwd: 'test cwd',\n              },\n            },\n          ])\n        );\n    });\n\n    it('should install beta with `useBetaRelease`', function () {\n      return expect(\n        UpdateCommand.prototype.update(\n          {\n            environment: {\n              cwd: 'test cwd',\n            },\n          },\n          true\n        ),\n        'to be fulfilled'\n      )\n        .then(() => expect(run.calledOnce, 'to be', true))\n        .then(() =>\n          expect(run.lastCall.args, 'to equal', [\n            'npm',\n            ['install', '--save-dev', 'atscm@beta'],\n            {\n              spawn: {\n                cwd: 'test cwd',\n              },\n            },\n          ])\n        );\n    });\n  });\n\n  /** @test {UpdateCommand#requiresEnvironment} */\n  describe('#requiresEnvironment', function () {\n    it('should always return true', function () {\n      expect(UpdateCommand.prototype.requiresEnvironment(), 'to be', true);\n    });\n  });\n\n  /** @test {UpdateCommand#run} */\n  describe('#run', function () {\n    const command = new UpdateCommand();\n\n    it('should not call #update if not required', function () {\n      return expect(\n        command.run({\n          environment: {\n            modulePackage: {\n              version: '0.3.0',\n            },\n          },\n          options: {},\n        }),\n        'to be fulfilled'\n      ).then(() => expect(run.callCount, 'to equal', 0));\n    });\n\n    it('should call #update if required', function () {\n      return expect(\n        command.run({\n          environment: {\n            modulePackage: {\n              version: '0.2.0',\n            },\n          },\n          options: {},\n        }),\n        'to be fulfilled'\n      ).then(() => expect(run.calledOnce, 'to be', true));\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/circleci/project/test/cli/commands/Update.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 314,
    "kind": "test",
    "name": "describe134",
    "testId": 134,
    "memberof": "test/cli/commands/Update.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/cli/commands/Update.spec.js~describe134",
    "access": null,
    "description": "UpdateCommand",
    "lineNumber": 19,
    "testTargets": [
      "UpdateCommand"
    ]
  },
  {
    "__docId__": 315,
    "kind": "test",
    "name": "describe135",
    "testId": 135,
    "memberof": "test/cli/commands/Update.spec.js~describe134",
    "testDepth": 1,
    "static": true,
    "longname": "test/cli/commands/Update.spec.js~describe134.describe135",
    "access": null,
    "description": "#getLatestVersion",
    "lineNumber": 26,
    "testTargets": [
      "UpdateCommand#getLatestVersion"
    ]
  },
  {
    "__docId__": 316,
    "kind": "test",
    "name": "it136",
    "testId": 136,
    "memberof": "test/cli/commands/Update.spec.js~describe134.describe135",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Update.spec.js~describe134.describe135.it136",
    "access": null,
    "description": "should call npm api",
    "lineNumber": 27
  },
  {
    "__docId__": 317,
    "kind": "test",
    "name": "it137",
    "testId": 137,
    "memberof": "test/cli/commands/Update.spec.js~describe134.describe135",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Update.spec.js~describe134.describe135.it137",
    "access": null,
    "description": "should return beta versions with `useBetaRelease`",
    "lineNumber": 35
  },
  {
    "__docId__": 318,
    "kind": "test",
    "name": "describe138",
    "testId": 138,
    "memberof": "test/cli/commands/Update.spec.js~describe134",
    "testDepth": 1,
    "static": true,
    "longname": "test/cli/commands/Update.spec.js~describe134.describe138",
    "access": null,
    "description": "#updateNeeded",
    "lineNumber": 43,
    "testTargets": [
      "UpdateCommand#updateNeeded"
    ]
  },
  {
    "__docId__": 319,
    "kind": "test",
    "name": "it139",
    "testId": 139,
    "memberof": "test/cli/commands/Update.spec.js~describe134.describe138",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Update.spec.js~describe134.describe138.it139",
    "access": null,
    "description": "should return false if latest is older than current version",
    "lineNumber": 44
  },
  {
    "__docId__": 320,
    "kind": "test",
    "name": "it140",
    "testId": 140,
    "memberof": "test/cli/commands/Update.spec.js~describe134.describe138",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Update.spec.js~describe134.describe138.it140",
    "access": null,
    "description": "should return false if latest equals current version",
    "lineNumber": 48
  },
  {
    "__docId__": 321,
    "kind": "test",
    "name": "it141",
    "testId": 141,
    "memberof": "test/cli/commands/Update.spec.js~describe134.describe138",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Update.spec.js~describe134.describe138.it141",
    "access": null,
    "description": "should return latest version if latest is newer than current version",
    "lineNumber": 52
  },
  {
    "__docId__": 322,
    "kind": "test",
    "name": "describe142",
    "testId": 142,
    "memberof": "test/cli/commands/Update.spec.js~describe134",
    "testDepth": 1,
    "static": true,
    "longname": "test/cli/commands/Update.spec.js~describe134.describe142",
    "access": null,
    "description": "#update",
    "lineNumber": 58,
    "testTargets": [
      "UpdateCommand#update"
    ]
  },
  {
    "__docId__": 323,
    "kind": "test",
    "name": "it143",
    "testId": 143,
    "memberof": "test/cli/commands/Update.spec.js~describe134.describe142",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Update.spec.js~describe134.describe142.it143",
    "access": null,
    "description": "should run npm install",
    "lineNumber": 59
  },
  {
    "__docId__": 324,
    "kind": "test",
    "name": "it144",
    "testId": 144,
    "memberof": "test/cli/commands/Update.spec.js~describe134.describe142",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Update.spec.js~describe134.describe142.it144",
    "access": null,
    "description": "should install beta with `useBetaRelease`",
    "lineNumber": 82
  },
  {
    "__docId__": 325,
    "kind": "test",
    "name": "describe145",
    "testId": 145,
    "memberof": "test/cli/commands/Update.spec.js~describe134",
    "testDepth": 1,
    "static": true,
    "longname": "test/cli/commands/Update.spec.js~describe134.describe145",
    "access": null,
    "description": "#requiresEnvironment",
    "lineNumber": 110,
    "testTargets": [
      "UpdateCommand#requiresEnvironment"
    ]
  },
  {
    "__docId__": 326,
    "kind": "test",
    "name": "it146",
    "testId": 146,
    "memberof": "test/cli/commands/Update.spec.js~describe134.describe145",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Update.spec.js~describe134.describe145.it146",
    "access": null,
    "description": "should always return true",
    "lineNumber": 111
  },
  {
    "__docId__": 327,
    "kind": "test",
    "name": "describe147",
    "testId": 147,
    "memberof": "test/cli/commands/Update.spec.js~describe134",
    "testDepth": 1,
    "static": true,
    "longname": "test/cli/commands/Update.spec.js~describe134.describe147",
    "access": null,
    "description": "#run",
    "lineNumber": 117,
    "testTargets": [
      "UpdateCommand#run"
    ]
  },
  {
    "__docId__": 328,
    "kind": "test",
    "name": "it148",
    "testId": 148,
    "memberof": "test/cli/commands/Update.spec.js~describe134.describe147",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Update.spec.js~describe134.describe147.it148",
    "access": null,
    "description": "should not call #update if not required",
    "lineNumber": 120
  },
  {
    "__docId__": 329,
    "kind": "test",
    "name": "it149",
    "testId": 149,
    "memberof": "test/cli/commands/Update.spec.js~describe134.describe147",
    "testDepth": 2,
    "static": true,
    "longname": "test/cli/commands/Update.spec.js~describe134.describe147.it149",
    "access": null,
    "description": "should call #update if required",
    "lineNumber": 134
  },
  {
    "__docId__": 330,
    "kind": "testFile",
    "name": "test/issues/issue-62.spec.js",
    "content": "import { join } from 'path';\nimport expect from 'unexpected';\nimport { spy } from 'sinon';\nimport proxyquire from 'proxyquire';\n\nconst gulpCli = spy();\nconst RunCommand = proxyquire('../../src/cli/commands/Run', {\n  'gulp-cli/lib/versioned/^4.0.0/': gulpCli,\n}).default;\n\ndescribe('Issue #62', function () {\n  it('should not throw on missing task', function () {\n    const command = new RunCommand('run', 'Run tasks.');\n\n    command.run({\n      environment: {\n        cwd: __dirname,\n        modulePath: join(__dirname, 'out/index.js'),\n      },\n      options: {\n        T: true,\n      },\n    });\n\n    return expect(gulpCli.lastCall.args[0]._, 'to be defined');\n  });\n});\n",
    "static": true,
    "longname": "/home/circleci/project/test/issues/issue-62.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 331,
    "kind": "test",
    "name": "describe150",
    "testId": 150,
    "memberof": "test/issues/issue-62.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/issues/issue-62.spec.js~describe150",
    "access": null,
    "description": "Issue #62",
    "lineNumber": 11
  },
  {
    "__docId__": 332,
    "kind": "test",
    "name": "it151",
    "testId": 151,
    "memberof": "test/issues/issue-62.spec.js~describe150",
    "testDepth": 1,
    "static": true,
    "longname": "test/issues/issue-62.spec.js~describe150.it151",
    "access": null,
    "description": "should not throw on missing task",
    "lineNumber": 12
  },
  {
    "__docId__": 333,
    "kind": "testFile",
    "name": "test/lib/cli/Command.spec.js",
    "content": "import expect from 'unexpected';\nimport Command from '../../../src/lib/cli/Command';\nimport Option from '../../../src/lib/cli/Option';\n\n/** @test {Command} */\ndescribe('Command', function () {\n  const name = 'command';\n  const desc = 'Command description.';\n  const opts = {};\n  const args = '<required> [optional...]';\n\n  /** @test {Command#constructor} */\n  describe('#constructor', function () {\n    it('should fail if options.maxArguments is less than options.maxArguments', function () {\n      expect(\n        () =>\n          new Command(\n            name,\n            desc,\n            Object.assign(\n              {\n                minArguments: 1,\n                maxArguments: 0,\n              },\n              opts\n            )\n          ),\n        'to throw error',\n        'options.maxArguments must not be less than options.minArguments'\n      );\n    });\n\n    it('should store name, description and options', function () {\n      const command = new Command(name, desc, opts);\n\n      expect(command.name, 'to equal', name);\n      expect(command.description, 'to equal', desc);\n      expect(command._options, 'to equal', opts);\n    });\n  });\n\n  /** @test {Command#run} */\n  describe('#run', function () {\n    it('must be implmented by all subclasses', function () {\n      expect(\n        new Command(name, desc, opts).run,\n        'to throw',\n        new Error('Must be implemented by all subclasses')\n      );\n    });\n  });\n\n  /** @test {Command#usage} */\n  describe('#usage', function () {\n    it('should be only name with no options.arguments set', function () {\n      expect(new Command(name, desc, opts).usage, 'to equal', name);\n    });\n\n    it('should be name followed by arguments with options.arguments set', function () {\n      expect(\n        new Command(name, desc, Object.assign({ arguments: args }, opts)).usage,\n        'to equal',\n        `${name} ${args}`\n      );\n    });\n  });\n\n  /** @test {Command#options} */\n  describe('#options', function () {\n    it('should be empty object if options.options were not set', function () {\n      expect(new Command(name, desc, opts).options, 'to equal', {});\n    });\n\n    it('should return all options passed as options.options', function () {\n      const options = { test: new Option('description') };\n\n      expect(\n        new Command(name, desc, Object.assign({ options }, opts)).options,\n        'to equal',\n        options\n      );\n    });\n  });\n\n  /** @test {Command#demandCommand} */\n  describe('#demandCommand', function () {\n    it('should default to [0]', function () {\n      expect(new Command(name, desc, opts).demandCommand, 'to equal', [0]);\n    });\n\n    it('should be use options.maxArguments if set', function () {\n      expect(\n        new Command(name, desc, Object.assign({ maxArguments: 13 }, opts)).demandCommand,\n        'to equal',\n        [0, 13]\n      );\n    });\n\n    it('should be use options.minArguments if set', function () {\n      expect(\n        new Command(name, desc, Object.assign({ minArguments: 13 }, opts)).demandCommand,\n        'to equal',\n        [13]\n      );\n    });\n\n    it('should be use options.minArguments and options.maxArguments if set', function () {\n      expect(\n        new Command(\n          name,\n          desc,\n          Object.assign(\n            {\n              minArguments: 1,\n              maxArguments: 2,\n            },\n            opts\n          )\n        ).demandCommand,\n        'to equal',\n        [1, 2]\n      );\n    });\n  });\n\n  /** @test {Command#strict} */\n  describe('#strict', function () {\n    it('should default to `true`', function () {\n      expect(new Command(name, desc, opts).strict, 'to be', true);\n    });\n\n    it('should return the value passed to the constructor', function () {\n      expect(\n        new Command(\n          name,\n          desc,\n          Object.assign({\n            strict: false,\n          }),\n          opts\n        ).strict,\n        'to be',\n        false\n      );\n      expect(\n        new Command(\n          name,\n          desc,\n          Object.assign({\n            strict: true,\n          }),\n          opts\n        ).strict,\n        'to be',\n        true\n      );\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/circleci/project/test/lib/cli/Command.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 334,
    "kind": "test",
    "name": "describe152",
    "testId": 152,
    "memberof": "test/lib/cli/Command.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/lib/cli/Command.spec.js~describe152",
    "access": null,
    "description": "Command",
    "lineNumber": 6,
    "testTargets": [
      "Command"
    ]
  },
  {
    "__docId__": 335,
    "kind": "test",
    "name": "describe153",
    "testId": 153,
    "memberof": "test/lib/cli/Command.spec.js~describe152",
    "testDepth": 1,
    "static": true,
    "longname": "test/lib/cli/Command.spec.js~describe152.describe153",
    "access": null,
    "description": "#constructor",
    "lineNumber": 13,
    "testTargets": [
      "Command#constructor"
    ]
  },
  {
    "__docId__": 336,
    "kind": "test",
    "name": "it154",
    "testId": 154,
    "memberof": "test/lib/cli/Command.spec.js~describe152.describe153",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/cli/Command.spec.js~describe152.describe153.it154",
    "access": null,
    "description": "should fail if options.maxArguments is less than options.maxArguments",
    "lineNumber": 14
  },
  {
    "__docId__": 337,
    "kind": "test",
    "name": "it155",
    "testId": 155,
    "memberof": "test/lib/cli/Command.spec.js~describe152.describe153",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/cli/Command.spec.js~describe152.describe153.it155",
    "access": null,
    "description": "should store name, description and options",
    "lineNumber": 33
  },
  {
    "__docId__": 338,
    "kind": "test",
    "name": "describe156",
    "testId": 156,
    "memberof": "test/lib/cli/Command.spec.js~describe152",
    "testDepth": 1,
    "static": true,
    "longname": "test/lib/cli/Command.spec.js~describe152.describe156",
    "access": null,
    "description": "#run",
    "lineNumber": 43,
    "testTargets": [
      "Command#run"
    ]
  },
  {
    "__docId__": 339,
    "kind": "test",
    "name": "it157",
    "testId": 157,
    "memberof": "test/lib/cli/Command.spec.js~describe152.describe156",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/cli/Command.spec.js~describe152.describe156.it157",
    "access": null,
    "description": "must be implmented by all subclasses",
    "lineNumber": 44
  },
  {
    "__docId__": 340,
    "kind": "test",
    "name": "describe158",
    "testId": 158,
    "memberof": "test/lib/cli/Command.spec.js~describe152",
    "testDepth": 1,
    "static": true,
    "longname": "test/lib/cli/Command.spec.js~describe152.describe158",
    "access": null,
    "description": "#usage",
    "lineNumber": 54,
    "testTargets": [
      "Command#usage"
    ]
  },
  {
    "__docId__": 341,
    "kind": "test",
    "name": "it159",
    "testId": 159,
    "memberof": "test/lib/cli/Command.spec.js~describe152.describe158",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/cli/Command.spec.js~describe152.describe158.it159",
    "access": null,
    "description": "should be only name with no options.arguments set",
    "lineNumber": 55
  },
  {
    "__docId__": 342,
    "kind": "test",
    "name": "it160",
    "testId": 160,
    "memberof": "test/lib/cli/Command.spec.js~describe152.describe158",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/cli/Command.spec.js~describe152.describe158.it160",
    "access": null,
    "description": "should be name followed by arguments with options.arguments set",
    "lineNumber": 59
  },
  {
    "__docId__": 343,
    "kind": "test",
    "name": "describe161",
    "testId": 161,
    "memberof": "test/lib/cli/Command.spec.js~describe152",
    "testDepth": 1,
    "static": true,
    "longname": "test/lib/cli/Command.spec.js~describe152.describe161",
    "access": null,
    "description": "#options",
    "lineNumber": 69,
    "testTargets": [
      "Command#options"
    ]
  },
  {
    "__docId__": 344,
    "kind": "test",
    "name": "it162",
    "testId": 162,
    "memberof": "test/lib/cli/Command.spec.js~describe152.describe161",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/cli/Command.spec.js~describe152.describe161.it162",
    "access": null,
    "description": "should be empty object if options.options were not set",
    "lineNumber": 70
  },
  {
    "__docId__": 345,
    "kind": "test",
    "name": "it163",
    "testId": 163,
    "memberof": "test/lib/cli/Command.spec.js~describe152.describe161",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/cli/Command.spec.js~describe152.describe161.it163",
    "access": null,
    "description": "should return all options passed as options.options",
    "lineNumber": 74
  },
  {
    "__docId__": 346,
    "kind": "test",
    "name": "describe164",
    "testId": 164,
    "memberof": "test/lib/cli/Command.spec.js~describe152",
    "testDepth": 1,
    "static": true,
    "longname": "test/lib/cli/Command.spec.js~describe152.describe164",
    "access": null,
    "description": "#demandCommand",
    "lineNumber": 86,
    "testTargets": [
      "Command#demandCommand"
    ]
  },
  {
    "__docId__": 347,
    "kind": "test",
    "name": "it165",
    "testId": 165,
    "memberof": "test/lib/cli/Command.spec.js~describe152.describe164",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/cli/Command.spec.js~describe152.describe164.it165",
    "access": null,
    "description": "should default to [0]",
    "lineNumber": 87
  },
  {
    "__docId__": 348,
    "kind": "test",
    "name": "it166",
    "testId": 166,
    "memberof": "test/lib/cli/Command.spec.js~describe152.describe164",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/cli/Command.spec.js~describe152.describe164.it166",
    "access": null,
    "description": "should be use options.maxArguments if set",
    "lineNumber": 91
  },
  {
    "__docId__": 349,
    "kind": "test",
    "name": "it167",
    "testId": 167,
    "memberof": "test/lib/cli/Command.spec.js~describe152.describe164",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/cli/Command.spec.js~describe152.describe164.it167",
    "access": null,
    "description": "should be use options.minArguments if set",
    "lineNumber": 99
  },
  {
    "__docId__": 350,
    "kind": "test",
    "name": "it168",
    "testId": 168,
    "memberof": "test/lib/cli/Command.spec.js~describe152.describe164",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/cli/Command.spec.js~describe152.describe164.it168",
    "access": null,
    "description": "should be use options.minArguments and options.maxArguments if set",
    "lineNumber": 107
  },
  {
    "__docId__": 351,
    "kind": "test",
    "name": "describe169",
    "testId": 169,
    "memberof": "test/lib/cli/Command.spec.js~describe152",
    "testDepth": 1,
    "static": true,
    "longname": "test/lib/cli/Command.spec.js~describe152.describe169",
    "access": null,
    "description": "#strict",
    "lineNumber": 127,
    "testTargets": [
      "Command#strict"
    ]
  },
  {
    "__docId__": 352,
    "kind": "test",
    "name": "it170",
    "testId": 170,
    "memberof": "test/lib/cli/Command.spec.js~describe152.describe169",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/cli/Command.spec.js~describe152.describe169.it170",
    "access": null,
    "description": "should default to `true`",
    "lineNumber": 128
  },
  {
    "__docId__": 353,
    "kind": "test",
    "name": "it171",
    "testId": 171,
    "memberof": "test/lib/cli/Command.spec.js~describe152.describe169",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/cli/Command.spec.js~describe152.describe169.it171",
    "access": null,
    "description": "should return the value passed to the constructor",
    "lineNumber": 132
  },
  {
    "__docId__": 354,
    "kind": "testFile",
    "name": "test/lib/cli/Option.spec.js",
    "content": "import expect from 'unexpected';\nimport Option from '../../../src/lib/cli/Option';\n\n/** @test {Option} */\ndescribe('Option', function () {\n  /** @test {Option#constructor} */\n  describe('#constructor', function () {\n    it('should store description', function () {\n      expect(new Option('description').desc, 'to equal', 'description');\n    });\n\n    it('should store all options passed', function () {\n      const options = { test: 123 };\n\n      expect(new Option('description', options), 'to have properties', options);\n    });\n  });\n\n  /** @test {Option.boolean} */\n  describe('.boolean', function () {\n    it('should return an option', function () {\n      expect(Option.boolean('description'), 'to be a', Option);\n    });\n\n    it('should set type to boolean', function () {\n      expect(Option.boolean('description').type, 'to equal', 'boolean');\n    });\n\n    it('should store all options passed', function () {\n      const options = { test: 123 };\n\n      expect(Option.boolean('description', options), 'to have properties', options);\n    });\n  });\n\n  /** @test {Option.string} */\n  describe('.string', function () {\n    it('should return an option', function () {\n      expect(Option.string('description'), 'to be a', Option);\n    });\n\n    it('should set type to string', function () {\n      expect(Option.string('description').type, 'to equal', 'string');\n    });\n\n    it('should store all options passed', function () {\n      const options = { test: 123 };\n\n      expect(Option.string('description', options), 'to have properties', options);\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/circleci/project/test/lib/cli/Option.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 355,
    "kind": "test",
    "name": "describe172",
    "testId": 172,
    "memberof": "test/lib/cli/Option.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/lib/cli/Option.spec.js~describe172",
    "access": null,
    "description": "Option",
    "lineNumber": 5,
    "testTargets": [
      "Option"
    ]
  },
  {
    "__docId__": 356,
    "kind": "test",
    "name": "describe173",
    "testId": 173,
    "memberof": "test/lib/cli/Option.spec.js~describe172",
    "testDepth": 1,
    "static": true,
    "longname": "test/lib/cli/Option.spec.js~describe172.describe173",
    "access": null,
    "description": "#constructor",
    "lineNumber": 7,
    "testTargets": [
      "Option#constructor"
    ]
  },
  {
    "__docId__": 357,
    "kind": "test",
    "name": "it174",
    "testId": 174,
    "memberof": "test/lib/cli/Option.spec.js~describe172.describe173",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/cli/Option.spec.js~describe172.describe173.it174",
    "access": null,
    "description": "should store description",
    "lineNumber": 8
  },
  {
    "__docId__": 358,
    "kind": "test",
    "name": "it175",
    "testId": 175,
    "memberof": "test/lib/cli/Option.spec.js~describe172.describe173",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/cli/Option.spec.js~describe172.describe173.it175",
    "access": null,
    "description": "should store all options passed",
    "lineNumber": 12
  },
  {
    "__docId__": 359,
    "kind": "test",
    "name": "describe176",
    "testId": 176,
    "memberof": "test/lib/cli/Option.spec.js~describe172",
    "testDepth": 1,
    "static": true,
    "longname": "test/lib/cli/Option.spec.js~describe172.describe176",
    "access": null,
    "description": ".boolean",
    "lineNumber": 20,
    "testTargets": [
      "Option.boolean"
    ]
  },
  {
    "__docId__": 360,
    "kind": "test",
    "name": "it177",
    "testId": 177,
    "memberof": "test/lib/cli/Option.spec.js~describe172.describe176",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/cli/Option.spec.js~describe172.describe176.it177",
    "access": null,
    "description": "should return an option",
    "lineNumber": 21
  },
  {
    "__docId__": 361,
    "kind": "test",
    "name": "it178",
    "testId": 178,
    "memberof": "test/lib/cli/Option.spec.js~describe172.describe176",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/cli/Option.spec.js~describe172.describe176.it178",
    "access": null,
    "description": "should set type to boolean",
    "lineNumber": 25
  },
  {
    "__docId__": 362,
    "kind": "test",
    "name": "it179",
    "testId": 179,
    "memberof": "test/lib/cli/Option.spec.js~describe172.describe176",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/cli/Option.spec.js~describe172.describe176.it179",
    "access": null,
    "description": "should store all options passed",
    "lineNumber": 29
  },
  {
    "__docId__": 363,
    "kind": "test",
    "name": "describe180",
    "testId": 180,
    "memberof": "test/lib/cli/Option.spec.js~describe172",
    "testDepth": 1,
    "static": true,
    "longname": "test/lib/cli/Option.spec.js~describe172.describe180",
    "access": null,
    "description": ".string",
    "lineNumber": 37,
    "testTargets": [
      "Option.string"
    ]
  },
  {
    "__docId__": 364,
    "kind": "test",
    "name": "it181",
    "testId": 181,
    "memberof": "test/lib/cli/Option.spec.js~describe172.describe180",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/cli/Option.spec.js~describe172.describe180.it181",
    "access": null,
    "description": "should return an option",
    "lineNumber": 38
  },
  {
    "__docId__": 365,
    "kind": "test",
    "name": "it182",
    "testId": 182,
    "memberof": "test/lib/cli/Option.spec.js~describe172.describe180",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/cli/Option.spec.js~describe172.describe180.it182",
    "access": null,
    "description": "should set type to string",
    "lineNumber": 42
  },
  {
    "__docId__": 366,
    "kind": "test",
    "name": "it183",
    "testId": 183,
    "memberof": "test/lib/cli/Option.spec.js~describe172.describe180",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/cli/Option.spec.js~describe172.describe180.it183",
    "access": null,
    "description": "should store all options passed",
    "lineNumber": 46
  },
  {
    "__docId__": 367,
    "kind": "testFile",
    "name": "test/lib/error/UsageError.spec.js",
    "content": "import expect from 'unexpected';\nimport UsageError from '../../../src/lib/error/UsageError';\n\n/** @test {UsageError} */\ndescribe('UsageError', function () {\n  const msg = 'Invalid argument: missing';\n  const help = 'Usage: ...';\n\n  /** @test {UsageError#constructor} */\n  describe('#constructor', function () {\n    it('should create an instance of Error', function () {\n      expect(new UsageError(msg, help), 'to be a', Error);\n    });\n\n    it('should create a stack trace', function () {\n      expect(new UsageError(msg, help).stack, 'to be defined');\n      expect(new UsageError(msg, help).stack, 'to be a', 'string');\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/circleci/project/test/lib/error/UsageError.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 368,
    "kind": "test",
    "name": "describe184",
    "testId": 184,
    "memberof": "test/lib/error/UsageError.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/lib/error/UsageError.spec.js~describe184",
    "access": null,
    "description": "UsageError",
    "lineNumber": 5,
    "testTargets": [
      "UsageError"
    ]
  },
  {
    "__docId__": 369,
    "kind": "test",
    "name": "describe185",
    "testId": 185,
    "memberof": "test/lib/error/UsageError.spec.js~describe184",
    "testDepth": 1,
    "static": true,
    "longname": "test/lib/error/UsageError.spec.js~describe184.describe185",
    "access": null,
    "description": "#constructor",
    "lineNumber": 10,
    "testTargets": [
      "UsageError#constructor"
    ]
  },
  {
    "__docId__": 370,
    "kind": "test",
    "name": "it186",
    "testId": 186,
    "memberof": "test/lib/error/UsageError.spec.js~describe184.describe185",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/error/UsageError.spec.js~describe184.describe185.it186",
    "access": null,
    "description": "should create an instance of Error",
    "lineNumber": 11
  },
  {
    "__docId__": 371,
    "kind": "test",
    "name": "it187",
    "testId": 187,
    "memberof": "test/lib/error/UsageError.spec.js~describe184.describe185",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/error/UsageError.spec.js~describe184.describe185.it187",
    "access": null,
    "description": "should create a stack trace",
    "lineNumber": 15
  },
  {
    "__docId__": 372,
    "kind": "testFile",
    "name": "test/lib/util/ExternalCommand.spec.js",
    "content": "import Emitter from 'events';\nimport { Buffer } from 'buffer';\nimport { stub, spy } from 'sinon';\nimport proxyquire from 'proxyquire';\nimport expect from 'unexpected';\n\nconst which = stub().callsArgWith(1, null, 'bin');\nconst stubProcess = Object.assign(new Emitter(), {\n  stdout: new Emitter(),\n  stderr: new Emitter(),\n});\nconst spawn = stub().returns(stubProcess);\n\nconst External = proxyquire('../../../src/lib/util/ExternalCommand', {\n  which,\n  child_process: {\n    spawn,\n  },\n}).default;\n\n/** @test {ExternalCommand} */\ndescribe('External', function () {\n  beforeEach(function () {\n    which.resetHistory();\n    which.callsArgWith(1, null, 'bin');\n  });\n\n  /** @test {ExternalCommand#resolveBin} */\n  describe('#resolveBin', function () {\n    it('should be fulfilled with which results', function () {\n      which.callsArgWith(1, null, 'bin');\n\n      return expect(External.resolveBin('asdf'), 'to be fulfilled with', 'bin').then(() => {\n        expect(which.calledOnce, 'to be', true);\n        expect(which.lastCall.args[0], 'to equal', 'asdf');\n      });\n    });\n\n    it('should reject on which error', function () {\n      which.callsArgWith(1, new Error('which error'));\n\n      return expect(External.resolveBin('asdf'), 'to be rejected with', 'which error').then(() => {\n        expect(which.calledOnce, 'to be', true);\n        expect(which.lastCall.args[0], 'to equal', 'asdf');\n      });\n    });\n  });\n\n  /** @test {ExternalCommand#spawn} */\n  describe('#spawn', function () {\n    it('should be rejected on spawn error', function () {\n      const p = expect(External.spawn('asdf'), 'to be rejected with', 'spawn error');\n\n      stubProcess.emit('error', new Error('spawn error'));\n\n      return p;\n    });\n\n    it('should be rejected on non-zero exit code', function () {\n      const p = expect(External.spawn('asdf'), 'to be rejected with', /returned code 123$/);\n\n      stubProcess.emit('close', 123);\n\n      return p;\n    });\n\n    it('should be fulfill with trimmed stdout data', function () {\n      const p = expect(External.spawn('asdf'), 'to be fulfilled with', 'data');\n\n      stubProcess.stdout.emit('data', Buffer.from('data\\n'));\n      stubProcess.emit('close', 0);\n\n      return p;\n    });\n\n    it('should pass args to spawn', function () {\n      const args = ['--test'];\n      const p = expect(External.spawn('asdf', args), 'to be fulfilled').then(() =>\n        expect(spawn.calledWith('asdf', args), 'to be true')\n      );\n\n      stubProcess.emit('close', 0);\n\n      return p;\n    });\n\n    it('should pass options.spawn to spawn', function () {\n      const spawnOpts = { opt: 13 };\n      const p = expect(\n        External.spawn('asdf', [], { spawn: spawnOpts }),\n        'to be fulfilled'\n      ).then(() => expect(spawn.calledWith('asdf', [], spawnOpts), 'to be true'));\n\n      stubProcess.emit('close', 0);\n\n      return p;\n    });\n\n    it('should call options.onspawn after spawn', function () {\n      const onspawn = spy();\n      const p = expect(External.spawn('asdf', [], { onspawn }), 'to be fulfilled')\n        .then(() => expect(onspawn.calledOnce, 'to be true'))\n        .then(() => expect(onspawn.lastCall.args[0], 'to be', stubProcess));\n\n      stubProcess.emit('close', 0);\n\n      return p;\n    });\n  });\n\n  /** @test {ExternalCommand#run} */\n  describe('#run', function () {\n    it('should call #resolveBin with name', function () {\n      return expect(\n        External.run('asdf', [], {\n          onspawn() {\n            stubProcess.emit('close', 0);\n          },\n        }),\n        'to be fulfilled'\n      )\n        .then(() => expect(which.calledOnce, 'to be true'))\n        .then(() => expect(which.lastCall.args[0], 'to equal', 'asdf'));\n    });\n\n    it('should call #spawn with which results and other args', function () {\n      return expect(\n        External.run('asdf', [], {\n          onspawn() {\n            stubProcess.emit('close', 0);\n          },\n        }),\n        'to be fulfilled'\n      )\n        .then(() => expect(which.calledOnce, 'to be true'))\n        .then(() => expect(which.lastCall.args[0], 'to equal', 'asdf'));\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/circleci/project/test/lib/util/ExternalCommand.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 373,
    "kind": "test",
    "name": "describe188",
    "testId": 188,
    "memberof": "test/lib/util/ExternalCommand.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/lib/util/ExternalCommand.spec.js~describe188",
    "access": null,
    "description": "External",
    "lineNumber": 22,
    "testTargets": [
      "ExternalCommand"
    ]
  },
  {
    "__docId__": 374,
    "kind": "test",
    "name": "describe189",
    "testId": 189,
    "memberof": "test/lib/util/ExternalCommand.spec.js~describe188",
    "testDepth": 1,
    "static": true,
    "longname": "test/lib/util/ExternalCommand.spec.js~describe188.describe189",
    "access": null,
    "description": "#resolveBin",
    "lineNumber": 29,
    "testTargets": [
      "ExternalCommand#resolveBin"
    ]
  },
  {
    "__docId__": 375,
    "kind": "test",
    "name": "it190",
    "testId": 190,
    "memberof": "test/lib/util/ExternalCommand.spec.js~describe188.describe189",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/ExternalCommand.spec.js~describe188.describe189.it190",
    "access": null,
    "description": "should be fulfilled with which results",
    "lineNumber": 30
  },
  {
    "__docId__": 376,
    "kind": "test",
    "name": "it191",
    "testId": 191,
    "memberof": "test/lib/util/ExternalCommand.spec.js~describe188.describe189",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/ExternalCommand.spec.js~describe188.describe189.it191",
    "access": null,
    "description": "should reject on which error",
    "lineNumber": 39
  },
  {
    "__docId__": 377,
    "kind": "test",
    "name": "describe192",
    "testId": 192,
    "memberof": "test/lib/util/ExternalCommand.spec.js~describe188",
    "testDepth": 1,
    "static": true,
    "longname": "test/lib/util/ExternalCommand.spec.js~describe188.describe192",
    "access": null,
    "description": "#spawn",
    "lineNumber": 50,
    "testTargets": [
      "ExternalCommand#spawn"
    ]
  },
  {
    "__docId__": 378,
    "kind": "test",
    "name": "it193",
    "testId": 193,
    "memberof": "test/lib/util/ExternalCommand.spec.js~describe188.describe192",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/ExternalCommand.spec.js~describe188.describe192.it193",
    "access": null,
    "description": "should be rejected on spawn error",
    "lineNumber": 51
  },
  {
    "__docId__": 379,
    "kind": "test",
    "name": "it194",
    "testId": 194,
    "memberof": "test/lib/util/ExternalCommand.spec.js~describe188.describe192",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/ExternalCommand.spec.js~describe188.describe192.it194",
    "access": null,
    "description": "should be rejected on non-zero exit code",
    "lineNumber": 59
  },
  {
    "__docId__": 380,
    "kind": "test",
    "name": "it195",
    "testId": 195,
    "memberof": "test/lib/util/ExternalCommand.spec.js~describe188.describe192",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/ExternalCommand.spec.js~describe188.describe192.it195",
    "access": null,
    "description": "should be fulfill with trimmed stdout data",
    "lineNumber": 67
  },
  {
    "__docId__": 381,
    "kind": "test",
    "name": "it196",
    "testId": 196,
    "memberof": "test/lib/util/ExternalCommand.spec.js~describe188.describe192",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/ExternalCommand.spec.js~describe188.describe192.it196",
    "access": null,
    "description": "should pass args to spawn",
    "lineNumber": 76
  },
  {
    "__docId__": 382,
    "kind": "test",
    "name": "it197",
    "testId": 197,
    "memberof": "test/lib/util/ExternalCommand.spec.js~describe188.describe192",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/ExternalCommand.spec.js~describe188.describe192.it197",
    "access": null,
    "description": "should pass options.spawn to spawn",
    "lineNumber": 87
  },
  {
    "__docId__": 383,
    "kind": "test",
    "name": "it198",
    "testId": 198,
    "memberof": "test/lib/util/ExternalCommand.spec.js~describe188.describe192",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/ExternalCommand.spec.js~describe188.describe192.it198",
    "access": null,
    "description": "should call options.onspawn after spawn",
    "lineNumber": 99
  },
  {
    "__docId__": 384,
    "kind": "test",
    "name": "describe199",
    "testId": 199,
    "memberof": "test/lib/util/ExternalCommand.spec.js~describe188",
    "testDepth": 1,
    "static": true,
    "longname": "test/lib/util/ExternalCommand.spec.js~describe188.describe199",
    "access": null,
    "description": "#run",
    "lineNumber": 112,
    "testTargets": [
      "ExternalCommand#run"
    ]
  },
  {
    "__docId__": 385,
    "kind": "test",
    "name": "it200",
    "testId": 200,
    "memberof": "test/lib/util/ExternalCommand.spec.js~describe188.describe199",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/ExternalCommand.spec.js~describe188.describe199.it200",
    "access": null,
    "description": "should call #resolveBin with name",
    "lineNumber": 113
  },
  {
    "__docId__": 386,
    "kind": "test",
    "name": "it201",
    "testId": 201,
    "memberof": "test/lib/util/ExternalCommand.spec.js~describe188.describe199",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/ExternalCommand.spec.js~describe188.describe199.it201",
    "access": null,
    "description": "should call #spawn with which results and other args",
    "lineNumber": 126
  },
  {
    "__docId__": 387,
    "kind": "testFile",
    "name": "test/lib/util/Logger.spec.js",
    "content": "/* eslint-disable no-console */\nimport expect from 'unexpected';\nimport { stub } from 'sinon';\nimport gulplog from 'gulplog';\nimport { obj as createStream } from 'through2';\nimport Logger from '../../../src/lib/util/Logger';\n\n/** @test {LogFormat} */\ndescribe('LogFormat', function () {\n  const text = 'Test string';\n\n  const orgEnabled = Logger.colors.supportsColor;\n  before(() => (Logger.colors.enabled = true));\n  after(() => (Logger.colors.enabled = orgEnabled));\n\n  function expectStyle(styledText, style) {\n    const { open, close } = style._styles[0];\n    expect(styledText, 'to equal', `${open}${text}${close}`);\n  }\n\n  /** @test {LogFormat.path} */\n  describe('.path', function () {\n    it('should change color to magenta', function () {\n      expectStyle(Logger.format.path(text), Logger.colors.magenta);\n    });\n\n    it('should prettify user path', function () {\n      expect(Logger.format.path(process.env.HOME), 'to contain', '~');\n    });\n  });\n\n  /** @test {LogFormat.command} */\n  describe('.command', function () {\n    it('should return bold text', function () {\n      expectStyle(Logger.format.command(text), Logger.colors.bold);\n    });\n  });\n\n  /** @test {LogFormat.value} */\n  describe('.value', function () {\n    it('should return cyan colored text', function () {\n      expectStyle(Logger.format.value(text), Logger.colors.cyan);\n    });\n  });\n\n  /** @test {LogFormat.number} */\n  describe('.number', function () {\n    it('should return magenta colored text', function () {\n      expectStyle(Logger.format.number(text), Logger.colors.magenta);\n    });\n  });\n});\n\n/** @test {Logger} */\ndescribe('Logger', function () {\n  function getText() {\n    return `Text ${new Date()}`;\n  }\n\n  let debugSpy;\n  let infoSpy;\n  let warnSpy;\n  let errorSpy;\n\n  beforeEach(function () {\n    debugSpy = stub(gulplog, 'debug');\n    infoSpy = stub(gulplog, 'info');\n    warnSpy = stub(gulplog, 'warn');\n    errorSpy = stub(gulplog, 'error');\n  });\n\n  afterEach(function () {\n    gulplog.debug.restore();\n    gulplog.info.restore();\n    gulplog.warn.restore();\n    gulplog.error.restore();\n  });\n\n  /** @test {Logger.debug} */\n  describe('.debug', function () {\n    it('should call gulplog.debug', function () {\n      const t = getText();\n      Logger.debug(t);\n\n      expect(debugSpy.calledOnce, 'to be', true);\n      expect(debugSpy.lastCall.args, 'to equal', [t]);\n    });\n  });\n\n  /** @test {Logger.info} */\n  describe('.info', function () {\n    it('should call gulplog.info', function () {\n      const t = getText();\n      Logger.info(t);\n\n      expect(infoSpy.calledOnce, 'to be', true);\n      expect(infoSpy.lastCall.args, 'to equal', [t]);\n    });\n  });\n\n  /** @test {Logger.warn} */\n  describe('.warn', function () {\n    it('should call gulplog.warn', function () {\n      const t = getText();\n      Logger.warn(t);\n\n      expect(warnSpy.calledOnce, 'to be', true);\n      expect(warnSpy.lastCall.args, 'to equal', [t]);\n    });\n  });\n\n  /** @test {Logger.warn} */\n  describe('.error', function () {\n    it('should call gulplog.error', function () {\n      const t = getText();\n      Logger.error(t);\n\n      expect(errorSpy.calledOnce, 'to be', true);\n\n      expect(errorSpy.lastCall.args, 'to equal', [t]);\n    });\n  });\n\n  /** @test {Logger.applyOptions} */\n  describe('.applyOptions', function () {\n    afterEach(() => {\n      Logger.types.forEach((name) => gulplog.removeAllListeners(name));\n    });\n\n    function expectListeners(levels) {\n      Logger.types.forEach((name, i) => {\n        expect(gulplog.listenerCount(name), 'to equal', levels[i] ? 1 : 0);\n      });\n    }\n\n    context('when using option \"silent\"', function () {\n      it('should only add a noop listener for \"error\" events', function () {\n        Logger.applyOptions({ silent: true });\n\n        expectListeners([true, false, false, false]);\n      });\n    });\n\n    context('when using \"logLevel\" 0', function () {\n      it('should only add a noop listener for \"error\" events', function () {\n        Logger.applyOptions({ logLevel: 0 });\n\n        expectListeners([true, false, false, false]);\n      });\n    });\n\n    context('when using \"logLevel\" 1', function () {\n      it('should only add a listener for \"error\" events', function () {\n        Logger.applyOptions({ logLevel: 1 });\n\n        expectListeners([true, false, false, false]);\n      });\n    });\n\n    context('when using \"logLevel\" 2', function () {\n      it('should add listeners for \"error\" and \"warn\" events', function () {\n        Logger.applyOptions({ logLevel: 2 });\n\n        expectListeners([true, true, false, false]);\n      });\n    });\n\n    context('when using \"logLevel\" 3', function () {\n      it('should add listeners for \"error\", \"warn\" and \"info\" events', function () {\n        Logger.applyOptions({ logLevel: 3 });\n\n        expectListeners([true, true, true, false]);\n      });\n    });\n\n    context('when using \"logLevel\" 4', function () {\n      it('should add listeners for all events', function () {\n        Logger.applyOptions({ logLevel: 4 });\n\n        expectListeners([true, true, true, true]);\n      });\n    });\n  });\n\n  /** @test {Logger.pipeLastLine} */\n  describe('.pipeLastLine', function () {\n    it('should print last line of each chunk', function (done) {\n      const stream = createStream((c, e, cb) => cb(null, c));\n\n      Logger.pipeLastLine(stream);\n\n      stream.on('end', () => {\n        expect(gulplog.info.callCount, 'to be', 2);\n        expect(gulplog.info.getCall(0).args[0], 'to match', /last 1$/);\n        expect(gulplog.info.lastCall.args[0], 'to match', /last 2$/);\n\n        done();\n      });\n\n      stream.push('first\\nlast 1'); // should log [HH:MM:SS] last 1\n      stream.push('first\\nlast 2'); // should log [HH:MM:SS] last 2\n      stream.end();\n    });\n\n    it('should ignore empty lines', function (done) {\n      const stream = createStream((c, e, cb) => cb(null, c));\n\n      Logger.pipeLastLine(stream);\n\n      stream.on('end', () => {\n        expect(gulplog.info.callCount, 'to be', 2);\n        expect(gulplog.info.getCall(0).args[0], 'to match', /last 1$/);\n        expect(gulplog.info.lastCall.args[0], 'to match', /last 2$/);\n\n        done();\n      });\n\n      stream.push('first\\nlast 1\\n'); // should log [HH:MM:SS] last 1\n      stream.push('first\\nlast 2\\n '); // should log [HH:MM:SS] last 2\n      stream.end();\n    });\n  });\n});\n",
    "static": true,
    "longname": "/home/circleci/project/test/lib/util/Logger.spec.js",
    "access": null,
    "description": null,
    "lineNumber": 1
  },
  {
    "__docId__": 388,
    "kind": "test",
    "name": "describe202",
    "testId": 202,
    "memberof": "test/lib/util/Logger.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe202",
    "access": null,
    "description": "LogFormat",
    "lineNumber": 9,
    "testTargets": [
      "LogFormat"
    ]
  },
  {
    "__docId__": 389,
    "kind": "test",
    "name": "describe203",
    "testId": 203,
    "memberof": "test/lib/util/Logger.spec.js~describe202",
    "testDepth": 1,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe202.describe203",
    "access": null,
    "description": ".path",
    "lineNumber": 22,
    "testTargets": [
      "LogFormat.path"
    ]
  },
  {
    "__docId__": 390,
    "kind": "test",
    "name": "it204",
    "testId": 204,
    "memberof": "test/lib/util/Logger.spec.js~describe202.describe203",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe202.describe203.it204",
    "access": null,
    "description": "should change color to magenta",
    "lineNumber": 23
  },
  {
    "__docId__": 391,
    "kind": "test",
    "name": "it205",
    "testId": 205,
    "memberof": "test/lib/util/Logger.spec.js~describe202.describe203",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe202.describe203.it205",
    "access": null,
    "description": "should prettify user path",
    "lineNumber": 27
  },
  {
    "__docId__": 392,
    "kind": "test",
    "name": "describe206",
    "testId": 206,
    "memberof": "test/lib/util/Logger.spec.js~describe202",
    "testDepth": 1,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe202.describe206",
    "access": null,
    "description": ".command",
    "lineNumber": 33,
    "testTargets": [
      "LogFormat.command"
    ]
  },
  {
    "__docId__": 393,
    "kind": "test",
    "name": "it207",
    "testId": 207,
    "memberof": "test/lib/util/Logger.spec.js~describe202.describe206",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe202.describe206.it207",
    "access": null,
    "description": "should return bold text",
    "lineNumber": 34
  },
  {
    "__docId__": 394,
    "kind": "test",
    "name": "describe208",
    "testId": 208,
    "memberof": "test/lib/util/Logger.spec.js~describe202",
    "testDepth": 1,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe202.describe208",
    "access": null,
    "description": ".value",
    "lineNumber": 40,
    "testTargets": [
      "LogFormat.value"
    ]
  },
  {
    "__docId__": 395,
    "kind": "test",
    "name": "it209",
    "testId": 209,
    "memberof": "test/lib/util/Logger.spec.js~describe202.describe208",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe202.describe208.it209",
    "access": null,
    "description": "should return cyan colored text",
    "lineNumber": 41
  },
  {
    "__docId__": 396,
    "kind": "test",
    "name": "describe210",
    "testId": 210,
    "memberof": "test/lib/util/Logger.spec.js~describe202",
    "testDepth": 1,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe202.describe210",
    "access": null,
    "description": ".number",
    "lineNumber": 47,
    "testTargets": [
      "LogFormat.number"
    ]
  },
  {
    "__docId__": 397,
    "kind": "test",
    "name": "it211",
    "testId": 211,
    "memberof": "test/lib/util/Logger.spec.js~describe202.describe210",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe202.describe210.it211",
    "access": null,
    "description": "should return magenta colored text",
    "lineNumber": 48
  },
  {
    "__docId__": 398,
    "kind": "test",
    "name": "describe212",
    "testId": 212,
    "memberof": "test/lib/util/Logger.spec.js",
    "testDepth": 0,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe212",
    "access": null,
    "description": "Logger",
    "lineNumber": 55,
    "testTargets": [
      "Logger"
    ]
  },
  {
    "__docId__": 399,
    "kind": "test",
    "name": "describe213",
    "testId": 213,
    "memberof": "test/lib/util/Logger.spec.js~describe212",
    "testDepth": 1,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe212.describe213",
    "access": null,
    "description": ".debug",
    "lineNumber": 80,
    "testTargets": [
      "Logger.debug"
    ]
  },
  {
    "__docId__": 400,
    "kind": "test",
    "name": "it214",
    "testId": 214,
    "memberof": "test/lib/util/Logger.spec.js~describe212.describe213",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe212.describe213.it214",
    "access": null,
    "description": "should call gulplog.debug",
    "lineNumber": 81
  },
  {
    "__docId__": 401,
    "kind": "test",
    "name": "describe215",
    "testId": 215,
    "memberof": "test/lib/util/Logger.spec.js~describe212",
    "testDepth": 1,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe212.describe215",
    "access": null,
    "description": ".info",
    "lineNumber": 91,
    "testTargets": [
      "Logger.info"
    ]
  },
  {
    "__docId__": 402,
    "kind": "test",
    "name": "it216",
    "testId": 216,
    "memberof": "test/lib/util/Logger.spec.js~describe212.describe215",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe212.describe215.it216",
    "access": null,
    "description": "should call gulplog.info",
    "lineNumber": 92
  },
  {
    "__docId__": 403,
    "kind": "test",
    "name": "describe217",
    "testId": 217,
    "memberof": "test/lib/util/Logger.spec.js~describe212",
    "testDepth": 1,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe212.describe217",
    "access": null,
    "description": ".warn",
    "lineNumber": 102,
    "testTargets": [
      "Logger.warn"
    ]
  },
  {
    "__docId__": 404,
    "kind": "test",
    "name": "it218",
    "testId": 218,
    "memberof": "test/lib/util/Logger.spec.js~describe212.describe217",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe212.describe217.it218",
    "access": null,
    "description": "should call gulplog.warn",
    "lineNumber": 103
  },
  {
    "__docId__": 405,
    "kind": "test",
    "name": "describe219",
    "testId": 219,
    "memberof": "test/lib/util/Logger.spec.js~describe212",
    "testDepth": 1,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe212.describe219",
    "access": null,
    "description": ".error",
    "lineNumber": 113,
    "testTargets": [
      "Logger.warn"
    ]
  },
  {
    "__docId__": 406,
    "kind": "test",
    "name": "it220",
    "testId": 220,
    "memberof": "test/lib/util/Logger.spec.js~describe212.describe219",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe212.describe219.it220",
    "access": null,
    "description": "should call gulplog.error",
    "lineNumber": 114
  },
  {
    "__docId__": 407,
    "kind": "test",
    "name": "describe221",
    "testId": 221,
    "memberof": "test/lib/util/Logger.spec.js~describe212",
    "testDepth": 1,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe212.describe221",
    "access": null,
    "description": ".applyOptions",
    "lineNumber": 125,
    "testTargets": [
      "Logger.applyOptions"
    ]
  },
  {
    "__docId__": 408,
    "kind": "test",
    "name": "context222",
    "testId": 222,
    "memberof": "test/lib/util/Logger.spec.js~describe212.describe221",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe212.describe221.context222",
    "access": null,
    "description": "when using option \"silent\"",
    "lineNumber": 136
  },
  {
    "__docId__": 409,
    "kind": "test",
    "name": "it223",
    "testId": 223,
    "memberof": "test/lib/util/Logger.spec.js~describe212.describe221.context222",
    "testDepth": 3,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe212.describe221.context222.it223",
    "access": null,
    "description": "should only add a noop listener for \"error\" events",
    "lineNumber": 137
  },
  {
    "__docId__": 410,
    "kind": "test",
    "name": "context224",
    "testId": 224,
    "memberof": "test/lib/util/Logger.spec.js~describe212.describe221",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe212.describe221.context224",
    "access": null,
    "description": "when using \"logLevel\" 0",
    "lineNumber": 144
  },
  {
    "__docId__": 411,
    "kind": "test",
    "name": "it225",
    "testId": 225,
    "memberof": "test/lib/util/Logger.spec.js~describe212.describe221.context224",
    "testDepth": 3,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe212.describe221.context224.it225",
    "access": null,
    "description": "should only add a noop listener for \"error\" events",
    "lineNumber": 145
  },
  {
    "__docId__": 412,
    "kind": "test",
    "name": "context226",
    "testId": 226,
    "memberof": "test/lib/util/Logger.spec.js~describe212.describe221",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe212.describe221.context226",
    "access": null,
    "description": "when using \"logLevel\" 1",
    "lineNumber": 152
  },
  {
    "__docId__": 413,
    "kind": "test",
    "name": "it227",
    "testId": 227,
    "memberof": "test/lib/util/Logger.spec.js~describe212.describe221.context226",
    "testDepth": 3,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe212.describe221.context226.it227",
    "access": null,
    "description": "should only add a listener for \"error\" events",
    "lineNumber": 153
  },
  {
    "__docId__": 414,
    "kind": "test",
    "name": "context228",
    "testId": 228,
    "memberof": "test/lib/util/Logger.spec.js~describe212.describe221",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe212.describe221.context228",
    "access": null,
    "description": "when using \"logLevel\" 2",
    "lineNumber": 160
  },
  {
    "__docId__": 415,
    "kind": "test",
    "name": "it229",
    "testId": 229,
    "memberof": "test/lib/util/Logger.spec.js~describe212.describe221.context228",
    "testDepth": 3,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe212.describe221.context228.it229",
    "access": null,
    "description": "should add listeners for \"error\" and \"warn\" events",
    "lineNumber": 161
  },
  {
    "__docId__": 416,
    "kind": "test",
    "name": "context230",
    "testId": 230,
    "memberof": "test/lib/util/Logger.spec.js~describe212.describe221",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe212.describe221.context230",
    "access": null,
    "description": "when using \"logLevel\" 3",
    "lineNumber": 168
  },
  {
    "__docId__": 417,
    "kind": "test",
    "name": "it231",
    "testId": 231,
    "memberof": "test/lib/util/Logger.spec.js~describe212.describe221.context230",
    "testDepth": 3,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe212.describe221.context230.it231",
    "access": null,
    "description": "should add listeners for \"error\", \"warn\" and \"info\" events",
    "lineNumber": 169
  },
  {
    "__docId__": 418,
    "kind": "test",
    "name": "context232",
    "testId": 232,
    "memberof": "test/lib/util/Logger.spec.js~describe212.describe221",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe212.describe221.context232",
    "access": null,
    "description": "when using \"logLevel\" 4",
    "lineNumber": 176
  },
  {
    "__docId__": 419,
    "kind": "test",
    "name": "it233",
    "testId": 233,
    "memberof": "test/lib/util/Logger.spec.js~describe212.describe221.context232",
    "testDepth": 3,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe212.describe221.context232.it233",
    "access": null,
    "description": "should add listeners for all events",
    "lineNumber": 177
  },
  {
    "__docId__": 420,
    "kind": "test",
    "name": "describe234",
    "testId": 234,
    "memberof": "test/lib/util/Logger.spec.js~describe212",
    "testDepth": 1,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe212.describe234",
    "access": null,
    "description": ".pipeLastLine",
    "lineNumber": 186,
    "testTargets": [
      "Logger.pipeLastLine"
    ]
  },
  {
    "__docId__": 421,
    "kind": "test",
    "name": "it235",
    "testId": 235,
    "memberof": "test/lib/util/Logger.spec.js~describe212.describe234",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe212.describe234.it235",
    "access": null,
    "description": "should print last line of each chunk",
    "lineNumber": 187
  },
  {
    "__docId__": 422,
    "kind": "test",
    "name": "it236",
    "testId": 236,
    "memberof": "test/lib/util/Logger.spec.js~describe212.describe234",
    "testDepth": 2,
    "static": true,
    "longname": "test/lib/util/Logger.spec.js~describe212.describe234.it236",
    "access": null,
    "description": "should ignore empty lines",
    "lineNumber": 205
  }
]